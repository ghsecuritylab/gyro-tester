#include <stdio.h>
#include <math.h>
#include "platform.h"
#include "xparameters.h"
#include "xil_printf.h"
#include "xbasic_types.h"
#include "xscugic.h"
#include "xuartps.h"
#include "xuartps_hw.h"
#include "xil_exception.h"
#include "xttcps.h"


//#define FAKE_IC		//used to send data back when no IC present
#define FAKE_DATA	//used to create an array of data for COM test

/* ===== Code to deal with the DMA IP ===== */

#include "xaxidma.h"
#include "xdebug.h"

#ifdef __aarch64__
#include "xil_mmu.h"
#endif

#if defined(XPAR_UARTNS550_0_BASEADDR)
#include "xuartns550_l.h"       /* to use uartns550 */
#endif

#if (!defined(DEBUG))
extern void xil_printf(const char *format, ...);
#endif

/******************** Constant Definitions **********************************/
#define UARTPS_DEVICE_ID	XPAR_XUARTPS_0_DEVICE_ID
#define INTC_DEVICE_ID		XPAR_SCUGIC_SINGLE_DEVICE_ID
#define UART_INT_IRQ_ID		XPAR_XUARTPS_1_INTR
#define UART_BASEADDR		XPAR_XUARTPS_0_BASEADDR
#define RX_BUFFER_SIZE		30
#define TX_BUFFER_SIZE		1000
#define NUM_RXFIFO_READS_REQUIRED	9

// possible states for main while loop used to drive actions
#define SERVICE_UART		0x04

#define CMD_READ_DATA				0x61	// read data from tester - should be followed by
											// 4 bytes(unsigned int) for num words to be
											// sent (msbyte first)
#define CMD_LOAD_SAWTOOTH_UP_DATA	0x62	// load test data1(sawtooth up) into TxData array
#define CMD_LOAD_SAWTOOTH_DOWN_DATA	0x63	// load test data1(sawtooth down) into TxData array
#define CMD_READ_REGISTER			0x41	// read 16-bit contents of gyro ic register
#define CMD_WRITE_REGISTER			0x42	// write 16-bit value to gyro ic register
#define CMD_PROG_OTP_CHIP_ADDR		0x81	// program the chip address into OTP memory
#define CMD_PROG_OTP_VBG_TRIM		0x82	// program the bandgap trim value into OTP memory
#define CMD_READ_PACKETS			0x45	// read packet data
#define CMD_CAL_ADC0 				0x90	// perform calibration on ADC0
#define CMD_CAL_ADC1  				0x91	// perform calibration on ADC1
#define CMD_READ_ADC0_CAL 			0x92	// read/transmit calibration values for ADC0
#define CMD_READ_ADC1_CAL 			0x93	// read/transmit calibration values for ADC1
#define CMD_START_ADC_ACQUISITIONS	0xA1	// read values via HSI bus into RxFIFO until full
#define CMD_FILL_DAC_TXFIFO			0xA2	// fill the TxFIFO with values and send via HSI bus
#define CMD_FPGA_ALL_OUTPUTS_LOW	0xA7	// set all FPGA outputs low for safe power down
#define CMD_FPGA_ALL_OUTPUTS_ENABLED 0xA8	// enable all FPGA outputs after power supplies turned on
#define CMD_FPGA_GET_OUTPUTS_STATE  0xA9	// read the enabled/disabled state of FPGA outputs
#define CMD_RUN_TADC_CONVERSIONS	0xAC	// take measurements using the test ADC
#define CMD_ENABLE_HSI_SIGNALS		0xAD	// enable hsi signals on the FPGA
#define	CMD_DISABLE_HSI_SIGNALS		0xAE	// disable hsi signals on the FPGA
#define CMD_SET_MCLK_DIV			0xB0	// set the MCLK division setting
#define CMD_GET_MCLK_DIV			0xB1	// send MCLK division setting over uart
#define	CMD_SET_SPICLK_DIV			0xB2	// set the SPI clock division setting
#define CMD_GET_SPICLK_DIV			0xB3	// send the SPI clock division setting over uart
#define CMD_SET_PACKET_SIZE			0xB4	// set the FIFO packet size
#define CMD_GET_PACKET_SIZE			0xB5	// send the packet size over uart
#define CMD_GET_DAC_SELECTION		0xB6	// send the current DAC(TX channel) selected for HSI dout over UART
#define	CMD_SET_DAC_SELECTION		0xB7	// set the current DAC(TX channel) selected for HSI dout
#define CMD_GET_ADC_SELECTION		0xB8	// send the current ADC(RX channel) mux selection over UART
#define CMD_SET_ADC_SELECTION		0xB9	// set the current ADC(RX channel) mux selection
#define CMD_GET_CONFIG_SETTINGS		0xBA	// send all config settings over uart


#define RESPONSE_ADC_ACQUIRE_DONE	0x55	// indicates finished with ADC data acquisition

// test ADC mux settings
#define TADC_MUX_TEMPERATURE_SENSOR		0x000
#define	TADC_MUX_BANDGAP_VOLTAGE		0x200
#define TADC_MUX_REFERENCE_VOLTAGE		0x400
#define TADC_MUX_VEXT					0x600
#define TADC_MUX_CEXT					0x800
#define TADC_MUX_REXT					0xA00
#define TADC_MUX_VSSA					0xC00
#define TADC_MUX_VDDA					0xE00

#define TADC_ENABLE						0x1000
#define	TADC_TEMP_SENSOR_ENABLE			0x0080
#define TADC_VEXTSEL					0x0040
#define	TADC_RESET						0x0002
#define TADC_START						0x0001

//configuration constants
#define CONFIG_MCK_DIV_1				0x00000	// base frequency is 50MHz
#define CONFIG_MCK_DIV_2				0x10000	// div2 is 25MHz
#define CONFIG_MCK_DIV_4				0x20000	// div4 is 12.5MHz
#define CONFIG_MCK_DIV_8				0x30000	// div8 is 6.25MHz
#define CONFIG_MCK_DIV_16				0x40000
#define CONFIG_MCK_DIV_32				0x50000
#define CONFIG_MCK_DIV_64				0x60000
#define CONFIG_MCK_DIV_128				0x70000
u32 MCK_div_setting = CONFIG_MCK_DIV_1;
//
#define CONFIG_PACKET_SIZE_64_SAMPLES	0x0000
#define CONFIG_PACKET_SIZE_128_SAMPLES	0x1000
#define CONFIG_PACKET_SIZE_256_SAMPLES	0x2000
#define CONFIG_PACKET_SIZE_512_SAMPLES	0x3000
#define CONFIG_PACKET_SIZE_1024_SAMPLES	0x4000
#define CONFIG_PACKET_SIZE_2048_SAMPLES	0x5000
#define CONFIG_PACKET_SIZE_4096_SAMPLES	0x6000
#define CONFIG_PACKET_SIZE_8192_SAMPLES	0x7000
u32 packet_size_setting = CONFIG_PACKET_SIZE_4096_SAMPLES;
//
#define CONFIG_INPUT_CHANNEL_HSIA0		0x00
#define CONFIG_INPUT_CHANNEL_HSIA1		0x10
u32 HSI_input_channel_setting = CONFIG_INPUT_CHANNEL_HSIA0;
//
#define CONFIG_OUTPUT_CHANNEL_HSIDAP	0x0
#define CONFIG_OUTPUT_CHANNEL_HSIDAM	0x1
#define CONFIG_OUTPUT_CHANNEL_HSIDBP	0x2
#define CONFIG_OUTPUT_CHANNEL_HSIDBM	0x3
#define CONFIG_OUTPUT_CHANNEL_HSIDC		0x4
u32 HSI_output_channel_setting = CONFIG_OUTPUT_CHANNEL_HSIDAP;
//
#define CONFIG_SPI_CLK_DIV_1			0x0	// base frequency is 25MHz
#define CONFIG_SPI_CLK_DIV_2			0x1	// div2 is 12.5MHz
#define CONFIG_SPI_CLK_DIV_4			0x2	// div4 is 6.25MHz
#define CONFIG_SPI_CLK_DIV_8			0x3	// div8 is 3.125MHz
unsigned int SPI_clock_division_setting = CONFIG_SPI_CLK_DIV_4;

#define DIV_1	1
#define DIV_2	2
#define DIV_4	4
#define DIV_8	8
#define DIV_16	16
#define DIV_32	32
#define DIV_64	64
#define DIV_128	128

#ifdef FAKE_DATA
static void load_sawtooth_up_data(void);
static void load_sawtooth_down_data(void);
#define SAWTOOTH_MAX_VALUE 100
#define SAWTOOTH_STEP_VALUE 1
#endif
/*
 * Device hardware build related constants.
 */

#define DMA_DEV_ID		XPAR_AXIDMA_0_DEVICE_ID

#ifdef XPAR_AXI_7SDDR_0_S_AXI_BASEADDR
#define DDR_BASE_ADDR		XPAR_AXI_7SDDR_0_S_AXI_BASEADDR
#elif XPAR_MIG7SERIES_0_BASEADDR
#define DDR_BASE_ADDR	XPAR_MIG7SERIES_0_BASEADDR
#elif XPAR_MIG_0_BASEADDR
#define DDR_BASE_ADDR	XPAR_MIG_0_BASEADDR
#elif XPAR_PSU_DDR_0_S_AXI_BASEADDR
#define DDR_BASE_ADDR	XPAR_PSU_DDR_0_S_AXI_BASEADDR
#endif

#ifndef DDR_BASE_ADDR
#warning CHECK FOR THE VALID DDR ADDRESS IN XPARAMETERS.H, \
			DEFAULT SET TO 0x01000000
#define MEM_BASE_ADDR		0x01000000
#else
#define MEM_BASE_ADDR		(DDR_BASE_ADDR + 0x1000000)
#endif

#define TX_BD_SPACE_BASE	(MEM_BASE_ADDR)
#define TX_BD_SPACE_HIGH	(MEM_BASE_ADDR + 0x0000FFFF) // was FFFF
#define TX_BUFFER_BASE		(MEM_BASE_ADDR + 0x00010000)
#define TX_BUFFER_HIGH		(MEM_BASE_ADDR + 0x0001FFFF)

#define RX_BD_SPACE_BASE	(MEM_BASE_ADDR + 0x00020000) // was 1000
#define RX_BD_SPACE_HIGH	(MEM_BASE_ADDR + 0x0002FFFF) // was 1FFF
#define RX_BUFFER_BASE		(MEM_BASE_ADDR + 0x00030000)
#define RX_BUFFER_HIGH		(MEM_BASE_ADDR + 0x0003FFFF)

#define MAX_PKT_LEN				8192//16384	// this is Bytes
#define MARK_UNCACHEABLE        0x701

#define TEST_START_VALUE	0xC

#define DELAY_TIMER_DEVICE_ID	XPAR_XTTCPS_0_DEVICE_ID
#define DELAY_TIMER_INTERRUPT_ID	XPAR_XTTCPS_0_INTR
#define	TICK_TIMER_FREQ_HZ	100000  /* Tick timer counter's output frequency */
#define TICKS_PER_CHANGE_PERIOD	TICK_TIMER_FREQ_HZ /* Tick signals per update */

int numberDataSamples;
Xuint32 outputDataBuffer[MAX_PKT_LEN/4];

typedef struct {
	u32 OutputHz;	/* Output frequency */
	XInterval Interval;	/* Interval value */
	u8 Prescaler;	/* Prescaler value */
	u16 Options;	/* Option settings */
} TmrCntrSetup;

// ---------------

#define INTC_INTERRUPT_ID_0 63 // IRQ_F2P[2:2]
#define INTC_INTERRUPT_ID_1 64 // IRQ_F2P[3:3]
#define INTC_INTERRUPT_ID_2 65 // IRQ_F2P[4:4]

// instance of interrupt controller
static XScuGic intc;

// address of AXI PL interrupt generator
Xuint32* baseaddr_p           = (Xuint32*) XPAR_AXI4_PL_INTERRUPT_GE_0_S00_AXI_BASEADDR;
Xuint32* baseaddr_spi         = (Xuint32*) 0x43C10000;
Xuint32* baseaddr_channel     = (Xuint32*) 0x43C20000;
Xuint32* baseaddr_rx_fifo     = (Xuint32*) 0x43C30000;
Xuint32* baseaddr_tx_fifo     = (Xuint32*) 0x43C40000;

int flag;
int setup_interrupt_system();
int Status;
unsigned int state = 0;
static XScuGic interrupt_controller;	//instance of the interrupt controller
XUartPs UartPs;							// Instance of the UART Device

static u8 UartRxData[RX_BUFFER_SIZE];	// Buffer for Receiving Data
static u8 UartTxData[TX_BUFFER_SIZE];	// Buffer for Transmitting Data

u16 ADC_calData[8];			// store ADC cal data read from chip before transmit

u8	FPGA_outputs_state = 2; 	// 1=on, 2=0ff
u8  FPGA_hsi_state = 1;			// 1=disabled, 2=enabled
u8  FPGA_channel_state = 1;     //

#define MAX_TADC_RESULTS_SIZE 512
static u16 testADCresults[MAX_TADC_RESULTS_SIZE];


void isr0 (void *intc_inst_ptr);
void isr1 (void *intc_inst_ptr);
void isr2 (void *intc_inst_ptr);
void nops(unsigned int num);

static XTtcPs DelayTimer;		/* Timer counter instance */
static u8 TimerErrorCount;		/* Errors seen at interrupt time */
static volatile u8 timerRunning;


// --- DMA Device Global Variables.

int Status;
XAxiDma_Config *Config;


/**************************** Type Definitions *******************************/
/***************** Macros (Inline Functions) Definitions *********************/
/************************** Function Prototypes ******************************/

#if defined(XPAR_UARTNS550_0_BASEADDR)
static void Uart550_Setup(void);
#endif

static int  initSPI();
static void readSPIStatus();
static void setSPIControl(Xuint32 v);
static void disableSPI();
static void enableSPI();

void modify_register(unsigned int *data, unsigned int address,
					unsigned int newVal);

static int RxSetup(XAxiDma * AxiDmaInstPtr);
static int TxSetup(XAxiDma * AxiDmaInstPtr);

static int sendDMApacket(XAxiDma * AxiDmaInstPtr, int debug_mode);
static int receiveDMApacket(XAxiDma * AxiDmaInstPtr, int debug_mode);
static int sendDMApackets(int npackets);
static int receiveDMApackets(int npackets);

static int SaveData(int debug_mode);
static int CheckDmaResult(XAxiDma * AxiDmaInstPtr, int debug_mode, int skip);

static int openDMADevice();
static int closeDMADevice();

static int readGyroTxFIFODebugData();
static int readGyroRxFIFODebugData();

static int resetGyroTxFIFO();
static int resetGyroRxFIFO();

static int resetGyroTxFIFOLooping();
static int   setGyroTxFIFOLooping();

static int  initGyroChannel();
static void disableGyroChannel();
static void enableGyroChannel();
static void disableHSIGyroChannel();
static void enableHSIGyroChannel();
static void readGyroChannelStatus();
static int  readGyroChannelDebugData();
static int  setGyroChannelConfiguration(unsigned int v);
static int  setGyroChannelControl(unsigned int v);
static void fillTxPacketBuffer(int npoints, u8 *TxPacket);

static int 	SetupUartPs(XScuGic *IntcInstPtr, XUartPs *UartInstPtr,
					u16 DeviceId, u16 UartIntrId);
static void UartPsISR(void *CallBackRef, u32 Event, unsigned int EventData);
static int 	SetupUartInterruptSystem(XScuGic *IntcInstancePtr,
					XUartPs *UartInstancePtr,
					u16 UartIntrId);
static void read_uart_bytes(void);
static unsigned int get_num_data_points(u8 *RxData);
static void send_Tx_data_over_UART(unsigned int num_points_to_send);
static void send_data_over_UART(unsigned int num_points_to_send, u8 *dataArray);
static void send_byte_over_UART(Xuint8 byteToSend);
static int InitializeDelayTimer(void);
void SetTimerDuration(XInterval interval, u8 prescalar);
static void DelayTimerInterruptHandler(void *CallBackRef);
static Xuint8 ProgramOTP(u32 otp32BitValue);
static Xuint8 ProgramOTP_chipID(u32 id);
Xuint8 ProgramOTP_VbgTrim(u8 trimVal);
static u32 readOTP32bits(void);
static void run_ADC0_calibration(void);
static void run_ADC1_calibration(void);
static void read_ADC0_cal_data(void);
static void read_ADC1_cal_data(void);
static int initDMADevice(void);
static int sendPacketButton(void);
static int receivePacketButton(void);
static void fill_testADC_results_array(u16 signalToMeasure, u16 numReadings);
static void changeSPIclockDivision(u8 divSetting);
static void changeMCLKdivision(u8 divSetting);
static void changeHSI_ADC_selection(u8 selection);
static void sendConfigBytesOverUart(void);
/************************** Variable Definitions *****************************/
/*
 * Device instance definitions
 */
XAxiDma AxiDma;

/*
 * Buffer for transmit packet. Must be 32-bit aligned to be used by DMA.
 */
u32 *Packet = (u32 *) TX_BUFFER_BASE;

// -------------------------------------------------------------------
int initGyroChannel(){
  // --- clear GYRO stream channel registers
  *(baseaddr_channel+0) = 0x80000000; // reset
  *(baseaddr_channel+0) = 0x00000000;
  *(baseaddr_channel+1) = 0x00000000;
  *(baseaddr_channel+2) = 0x00000000;
  *(baseaddr_channel+3) = 0x00000000;
  return 0;
}

// -------------------------------------------------------------------
void readGyroChannelStatus(){
  xil_printf("Gyro Channel reg0: 0x%08x\n\r", *(baseaddr_channel+0));
  xil_printf("Gyro Channel reg1: 0x%08x\n\r", *(baseaddr_channel+1));
  xil_printf("Gyro Channel reg2: 0x%08x\n\r", *(baseaddr_channel+2));
  xil_printf("Gyro Channel reg3: 0x%08x\n\r", *(baseaddr_channel+3));
}

// -------------------------------------------------------------------
int setGyroChannelConfiguration(unsigned int v){
  // --- clear GYRO stream channel registers
	Xuint32 x;
    x = (Xuint32)(v);
  *(baseaddr_channel+0) = x;
  return 0;
}
// -------------------------------------------------------------------

 void disableGyroChannel(){
	  *(baseaddr_channel+2) = 0x00000000;
	  FPGA_hsi_state = 2;
	  FPGA_channel_state = 2;
 }
 // -------------------------------------------------------------------

 void enableGyroChannel(){
	  *(baseaddr_channel+2) = 0x00000011;
	  FPGA_hsi_state = 1;
	  FPGA_channel_state = 1;
 }
 // -------------------------------------------------------------------

 void disableHSIGyroChannel(){
	 if(FPGA_channel_state == 1){ // 1=enabled, 2=disabled
	  *(baseaddr_channel+2) = 0x000000001;
	  FPGA_hsi_state = 2;
	 }

 }
 // -------------------------------------------------------------------

 void enableHSIGyroChannel(){
	 if(FPGA_channel_state == 1){
	  *(baseaddr_channel+2) = 0x000000011;
	  FPGA_hsi_state = 1;
	 }
 }

// -------------------------------------------------------------------
int setGyroChannelControl(unsigned int v){
  // --- clear GYRO stream channel registers
	Xuint32 x;
    x = (Xuint32)(v);
  *(baseaddr_channel+1) = x;
  return 0;
}
// -------------------------------------------------------------------
int readGyroChannelDebugData(){
  // ---
  xil_printf("Gyro Channel Buffer Info: 0x%08x\n\r", *(baseaddr_channel+2));
  xil_printf("Gyro Channel ClkGen Info: 0x%08x\n\r", *(baseaddr_channel+3));
  return 0;
}
// -------------------------------------------------------------------
int readGyroRxFIFODebugData(){
  // ---
  xil_printf("Gyro RxFIFO Debug Word 0: 0x%08x\n\r", *(baseaddr_rx_fifo+0));
  xil_printf("Gyro RxFIFO Debug Word 1: 0x%08x\n\r", *(baseaddr_rx_fifo+1));
  xil_printf("Gyro RxFIFO Debug Word 2: 0x%08x\n\r", *(baseaddr_rx_fifo+2));
  xil_printf("Gyro RxFIFO Debug Word 3: 0x%08x\n\r", *(baseaddr_rx_fifo+3));
  return 0;
}
// -------------------------------------------------------------------
int readGyroTxFIFODebugData(){
  // ---
  xil_printf("Gyro TxFIFO Debug Word 0: 0x%08x\n\r", *(baseaddr_tx_fifo+0));
  xil_printf("Gyro TxFIFO Debug Word 1: 0x%08x\n\r", *(baseaddr_tx_fifo+1));
  xil_printf("Gyro TxFIFO Debug Word 2: 0x%08x\n\r", *(baseaddr_tx_fifo+2));
  xil_printf("Gyro TxFIFO Debug Word 3: 0x%08x\n\r", *(baseaddr_tx_fifo+3));
  return 0;
}

// -------------------------------------------------------------------
int resetGyroTxFIFO(){
	*(baseaddr_tx_fifo+0) = 0x00000001;
	*(baseaddr_tx_fifo+0) = 0x00000000;
	  return 0;
}

// -------------------------------------------------------------------
int resetGyroRxFIFO(){
	*(baseaddr_rx_fifo+0) = 0x00000001;
	*(baseaddr_rx_fifo+0) = 0x00000000;
	  return 0;
}

int resetGyroTxFIFOLooping(){
	*(baseaddr_tx_fifo+1) = 0x00000000;
	  return 0;
}

int setGyroTxFIFOLooping(){
	*(baseaddr_tx_fifo+1) = 0x00000001;
	  return 0;
}
// -------------------------------------------------------------------
//   SPI FUNCTIONS
// -------------------------------------------------------------------
int initSPI(){
    // clear SPI registers
    *(baseaddr_spi+0) = 0x00000000;
    *(baseaddr_spi+1) = 0x00000000;
    *(baseaddr_spi+2) = 0x00000000;
    *(baseaddr_spi+3) = 0x00000000;
    return 0;
}

// -------------------------------------------------------------------
void readSPIStatus(){
    xil_printf("baseaddr_spi+0: 0x%08x\n", *(baseaddr_spi+0));
    xil_printf("baseaddr_spi+1: 0x%08x\n", *(baseaddr_spi+1));
    xil_printf("baseaddr_spi+2: 0x%08x\n", *(baseaddr_spi+2));
    xil_printf("baseaddr_spi+3: 0x%08x\n\n", *(baseaddr_spi+3));
}

// -------------------------------------------------------------------
void setSPIControl(Xuint32 v){
	*(baseaddr_spi+3) = v;
}

// -------------------------------------------------------------------
 void setSPIClockDivision(unsigned int v){
   Xuint32 x;

   x = (Xuint32)(v & 0x00000007);
   *(baseaddr_spi+3) = x;
}

 // -------------------------------------------------------------------
  int readSPIClockDivision(){
     Xuint32 x;
     x = *(baseaddr_spi+3);
     return (((int)x) & 0x00000007);
}

// -------------------------------------------------------------------
int writeSPI_blocking(unsigned int address, unsigned int data){
	Xuint32 d, m;
	int x, y, v;

	x = (address & 0x0000007f) << 16;
	y = ((0x0000FFFF) & data);
	v = 0x80000000 | (x | y);
    m = (Xuint32)v;
//    xil_printf("== m  0x%08x \n",m);
	*(baseaddr_spi+0) = m;
	while(1){
	  d = *(baseaddr_spi+1);
//	  xil_printf("== read d  0x%08x \n",d);

	  v = (unsigned int)d;
	  if(v & 0x80000000){
		break;
	  }

    }
    *(baseaddr_spi+0) = 0x00000000;
    return 0;
}
// -------------------------------------------------------------------
 int writeSPI_non_blocking(unsigned int address, unsigned int data){
    Xuint32 d, m;
    int i, x, y, v;
    int clk_div, delay;

    clk_div = readSPIClockDivision(); // binary representation
    delay = 16000;

    x = (address & 0x0000007f) << 16;
    y = ((0x0000FFFF) & data);
    v = 0x80000000 | (x | y);
    m = (Xuint32)v;

   *(baseaddr_spi+0) = m;
   //*(baseaddr_spi+0) = 0x80800F57; // debug only...

   for(i = 0; i <= clk_div; i++){
     nops(delay << i);
     d = *(baseaddr_spi+1);
     v = (unsigned int)d;
     if(v & 0x80000000){
       *(baseaddr_spi+0) = 0x00000000;
       return 0;
     }
   }
   *(baseaddr_spi+0) = 0x00000000;
   return 1;
 }

 // -------------------------------------------------------------------
int writeSPI_non_blocking_orig(unsigned int address, unsigned int data){
	Xuint32 d, m;
	int i, x, y, v;
	int delay;

	delay = 2000;
	x = (address & 0x0000007f) << 16;
	y = ((0x0000FFFF) & data);
	v = 0x80000000 | (x | y);
    m = (Xuint32)v;
    //xil_printf("== m  0x%08x \n\r",m);
	*(baseaddr_spi+0) = m;
    //*(baseaddr_spi+0) = 0x80800F51; // debug only....
    for(i = 0; i < 5; i++){
    	nops(delay << i);
	  d = *(baseaddr_spi+1);
	   //xil_printf("== read d  0x%08x \n\r",d);
	  v = (unsigned int)d;
	  if(v & 0x80000000){
		*(baseaddr_spi+0) = 0x00000000;
		return 0;
	  }
    }
    *(baseaddr_spi+0) = 0x00000000;
    return 1;
}

// -------------------------------------------------------------------
int readSPI(unsigned int *data, unsigned int address){
  Xuint32 d, m;
  int i, x, v, r;
  int res, delay, clk_div;

  clk_div = readSPIClockDivision(); // binary representation
  delay = 16000;

  res = 1;
  *data = 0x00000000;           // clears result
  x = ((address & 0x0000007F) << 16) | 0x00800000;	// DEBUG: the 8F51 is a test pattern
  v = (0x80000000 | x);         // set the start bit
  m = (Xuint32)v;
  *(baseaddr_spi+0) = m;
  for(i = 0; i < clk_div; i++){
    nops(delay << i);
    d = *(baseaddr_spi+1);
    r = (unsigned int)d;
    if(r & 0x80000000){
      *data = (0x0000FFFF & r); // only lower 16 bits matter
      res = 0;
#ifdef FAKE_IC
      *data = (0x0000ABCD);
#endif
      break;
    }
  }
  v = (0x7FFFFFFF & x);
  m = (Xuint32)v;
  *(baseaddr_spi+0) = m;        // clear start
  return res;
}

void disableSPI(){
    *(baseaddr_spi+2) = 0x00000000;
}

void enableSPI(){
    *(baseaddr_spi+2) = 0x00000001;
}
// -------------------------------------------------------------------
void modify_register(unsigned int *data, unsigned int address, unsigned int newVal)
{
	readSPI(data,address);
	xil_printf("\n   reading reg %d: 0x%04x\n",address,*data);
	writeSPI_non_blocking_orig(address,newVal);
	xil_printf("   wrote a 0x%04x to reg%d\n",newVal,address);
	readSPI(data,address);
	xil_printf("   reading reg %d: 0x%04x\n",address,*data);
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------
// NOTE: old code for the FEB_04 project where we had a sample generator
// inside the FPGA.
//
/*
void sendGyroPacket(int nsamples){

*(baseaddr_channel+3) = 0x23000010;
*(baseaddr_channel+2) = 0x80000000;
 nops(100000);
*(baseaddr_channel+2) = 0x00000000;

 }
*/

// -------------------------------------------------------------------
// interrupt service routine for IRQ_F2P[0:0]
void isr0 (void *intc_inst_ptr) {
    xil_printf("isr0 called\n\r");
    *(baseaddr_p+0) = 0x00000000;
}

// interrupt service routine for IRQ_F2P[1:1]
void isr1 (void *intc_inst_ptr) {
    xil_printf("isr1 called\n\r");
    *(baseaddr_p+1) = 0x00000000;
}

// interrupt service routine for IRQ_F2P[2:2]
void isr2 (void *intc_inst_ptr) {
    xil_printf("isr2 called\n\r");
    *(baseaddr_p+2) = 0x00000000;
    xil_printf("read inside isr2:    slv_reg3: 0x%08x\n\r", *(baseaddr_p+3));
    flag = 0;
}

// sets up the interrupt system and enables interrupts for IRQ_F2P[1:0]
int setup_interrupt_system() {

    int result;
    XScuGic *intc_instance_ptr = &intc;
    XScuGic_Config *intc_config;

    // get config for interrupt controller
    intc_config = XScuGic_LookupConfig(XPAR_PS7_SCUGIC_0_DEVICE_ID);
    if (NULL == intc_config) {
        return XST_FAILURE;
    }

    // initialize the interrupt controller driver
    result = XScuGic_CfgInitialize(intc_instance_ptr, intc_config, intc_config->CpuBaseAddress);

    if (result != XST_SUCCESS) {
        return result;
    }

    // set the priority of IRQ_F2P[0:0] to 0xA0 (highest 0xF8, lowest 0x00) and a trigger for a rising edge 0x3.
    XScuGic_SetPriorityTriggerType(intc_instance_ptr, INTC_INTERRUPT_ID_0, 0xA0, 0x3);
    xil_printf("slv_reg3: 0x%08x\n\r", *(baseaddr_p+3));
    // connect the interrupt service routine isr0 to the interrupt controller
    result = XScuGic_Connect(intc_instance_ptr, INTC_INTERRUPT_ID_0, (Xil_ExceptionHandler)isr0, (void *)&intc);

    if (result != XST_SUCCESS) {
        return result;
    }

    // enable interrupts for IRQ_F2P[0:0]
    XScuGic_Enable(intc_instance_ptr, INTC_INTERRUPT_ID_0);

    // set the priority of IRQ_F2P[1:1] to 0xA8 (highest 0xF8, lowest 0x00) and a trigger for a rising edge 0x3.
    XScuGic_SetPriorityTriggerType(intc_instance_ptr, INTC_INTERRUPT_ID_1, 0xA8, 0x3);

    // connect the interrupt service routine isr1 to the interrupt controller
    result = XScuGic_Connect(intc_instance_ptr, INTC_INTERRUPT_ID_1, (Xil_ExceptionHandler)isr1, (void *)&intc);

    if (result != XST_SUCCESS) {
        return result;
    }

    // enable interrupts for IRQ_F2P[1:1]
    XScuGic_Enable(intc_instance_ptr, INTC_INTERRUPT_ID_1);


    // set the priority of IRQ_F2P[1:1] to 0xA8 (highest 0xF8, lowest 0x00) and a trigger for a rising edge 0x3.
    XScuGic_SetPriorityTriggerType(intc_instance_ptr, INTC_INTERRUPT_ID_2, 0xA8, 0x3);
    // connect the interrupt service routine isr1 to the interrupt controller
    result = XScuGic_Connect(intc_instance_ptr, INTC_INTERRUPT_ID_2, (Xil_ExceptionHandler)isr2, (void *)&intc);

    if (result != XST_SUCCESS) {
        return result;
    }
    // enable interrupts for IRQ_F2P[2:2]
    XScuGic_Enable(intc_instance_ptr, INTC_INTERRUPT_ID_2);

    // initialize the exception table and register the interrupt controller handler with the exception table
    Xil_ExceptionInit();

    Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT, (Xil_ExceptionHandler)XScuGic_InterruptHandler, intc_instance_ptr);

    // enable non-critical exceptions
    Xil_ExceptionEnable();

    return XST_SUCCESS;
}

// -----------------------------------------------------------------------
//   DMA FUNCTIONS
// ---------- functions from dma -----------------------------------------

#if defined(XPAR_UARTNS550_0_BASEADDR)
/*****************************************************************************/
/*
*
* Uart16550 setup routine, need to set baudrate to 9600, and data bits to 8
*
*/

static void Uart550_Setup(void){

	/* Set the baudrate to be predictable
	 */
	XUartNs550_SetBaud(XPAR_UARTNS550_0_BASEADDR,
			XPAR_XUARTNS550_CLOCK_HZ, 9600);

	XUartNs550_SetLineControlReg(XPAR_UARTNS550_0_BASEADDR,
			XUN_LCR_8_DATA_BITS);

}
#endif

static int closeDMADevice(){
  return XST_SUCCESS;
}

static int openDMADevice(){

//#if defined(XPAR_UARTNS550_0_BASEADDR)
//	Uart550_Setup();
//#endif

#ifdef __aarch64__
Xil_SetTlbAttributes(TX_BD_SPACE_BASE, MARK_UNCACHEABLE);
Xil_SetTlbAttributes(RX_BD_SPACE_BASE, MARK_UNCACHEABLE);
#endif

Config = XAxiDma_LookupConfig(DMA_DEV_ID);
if (!Config) {
	xil_printf(" *** Error: No config found for %d\r\n", DMA_DEV_ID);
	return XST_FAILURE;
} else {
	xil_printf(" >>> config found for %d\r\n", DMA_DEV_ID);
}

/* Initialize DMA engine */
Status = XAxiDma_CfgInitialize(&AxiDma, Config);
if (Status != XST_SUCCESS) {
   xil_printf(" *** Error: Initialization failed %d\r\n", Status);
   return XST_FAILURE;
} else {
	xil_printf(" >>> Initialization succeeded\r\n");
}

if(!XAxiDma_HasSg(&AxiDma)) {
   xil_printf("Could not configure device as Simple mode \r\n");
   return XST_FAILURE;
} else {
	 xil_printf("Device configured as Simple mode \r\n");
}
  return XST_SUCCESS;
}
/*****************************************************************************/
/**
*
* This function sets up RX channel of the DMA engine to be ready for packet
* reception
*
* @param	AxiDmaInstPtr is the pointer to the instance of the DMA engine.
*
* @return	XST_SUCCESS if the setup is successful, XST_FAILURE otherwise.
*
* @note		None.
*
******************************************************************************/
static int RxSetup(XAxiDma * AxiDmaInstPtr){
	XAxiDma_BdRing *RxRingPtr;
	int Delay = 0;
	int Coalesce = 1;
	int Status;
	XAxiDma_Bd BdTemplate;
	XAxiDma_Bd *BdPtr;
	XAxiDma_Bd *BdCurPtr;
	u32 BdCount;
	u32 FreeBdCount;
	UINTPTR RxBufferPtr;
	int Index;

	RxRingPtr = XAxiDma_GetRxRing(&AxiDma);

	/* Disable all RX interrupts before RxBD space setup */

	XAxiDma_BdRingIntDisable(RxRingPtr, XAXIDMA_IRQ_ALL_MASK);

	/* Set delay and coalescing */
	XAxiDma_BdRingSetCoalesce(RxRingPtr, Coalesce, Delay);

	/* Setup Rx BD space */
	BdCount = XAxiDma_BdRingCntCalc(XAXIDMA_BD_MINIMUM_ALIGNMENT,
				RX_BD_SPACE_HIGH - RX_BD_SPACE_BASE + 1);

	Status = XAxiDma_BdRingCreate(RxRingPtr, RX_BD_SPACE_BASE,
				RX_BD_SPACE_BASE,
				XAXIDMA_BD_MINIMUM_ALIGNMENT, BdCount);

	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: RX create BD ring failed %d\r\n", Status);
		return XST_FAILURE;
	}

	/*
	 * Setup an all-zero BD as the template for the Rx channel.
	 */
	XAxiDma_BdClear(&BdTemplate);

	Status = XAxiDma_BdRingClone(RxRingPtr, &BdTemplate);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: RX clone BD failed %d\r\n", Status);
		return XST_FAILURE;
	}

	/* Attach buffers to RxBD ring so we are ready to receive packets */

	FreeBdCount = XAxiDma_BdRingGetFreeCnt(RxRingPtr);

	Status = XAxiDma_BdRingAlloc(RxRingPtr, FreeBdCount, &BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: RX alloc BD failed %d\r\n", Status);
		return XST_FAILURE;
	}

	BdCurPtr = BdPtr;
	RxBufferPtr = RX_BUFFER_BASE;
	for (Index = 0; Index < FreeBdCount; Index++) {
		Status = XAxiDma_BdSetBufAddr(BdCurPtr, RxBufferPtr);

		if (Status != XST_SUCCESS) {
		  xil_printf(" *** Error: Set buffer addr %x on BD %x failed %d\r\n",
			(unsigned int)RxBufferPtr,(UINTPTR)BdCurPtr, Status);
		  return XST_FAILURE;
		}

		Status = XAxiDma_BdSetLength(BdCurPtr, MAX_PKT_LEN,
				RxRingPtr->MaxTransferLen);
		if (Status != XST_SUCCESS) {
			xil_printf(" *** Error: Rx set length %d on BD %x failed %d\r\n",
			    MAX_PKT_LEN, (UINTPTR)BdCurPtr, Status);
			return XST_FAILURE;
		}

		/* Receive BDs do not need to set anything for the control
		 * The hardware will set the SOF/EOF bits per stream status
		 */
		XAxiDma_BdSetCtrl(BdCurPtr, 0);
		XAxiDma_BdSetId(BdCurPtr, RxBufferPtr);

		RxBufferPtr += MAX_PKT_LEN;
		BdCurPtr = (XAxiDma_Bd *)XAxiDma_BdRingNext(RxRingPtr, BdCurPtr);
	}

	/* Clear the receive buffer, so we can verify data
	 */
	memset((void *)RX_BUFFER_BASE, 0, MAX_PKT_LEN);

	Status = XAxiDma_BdRingToHw(RxRingPtr, FreeBdCount, BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: RX submit hw failed %d\r\n", Status);
		return XST_FAILURE;
	}

	/* Start RX DMA channel */
	Status = XAxiDma_BdRingStart(RxRingPtr);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: RX start hw failed %d\r\n", Status);
		return XST_FAILURE;
	}
	return XST_SUCCESS;
}

/*****************************************************************************/
/**
*
* This function sets up the TX channel of a DMA engine to be ready for packet
* transmission
*
* @param	AxiDmaInstPtr is the instance pointer to the DMA engine.
*
* @return	XST_SUCCESS if the setup is successful, XST_FAILURE otherwise.
*
* @note		None.
*
******************************************************************************/
static int TxSetup(XAxiDma * AxiDmaInstPtr){
	XAxiDma_BdRing *TxRingPtr;
	XAxiDma_Bd BdTemplate;
	int Delay = 0;
	int Coalesce = 1;
	int Status;
	u32 BdCount;

	TxRingPtr = XAxiDma_GetTxRing(&AxiDma);

	/* Disable all TX interrupts before TxBD space setup */

	XAxiDma_BdRingIntDisable(TxRingPtr, XAXIDMA_IRQ_ALL_MASK);

	/* Set TX delay and coalesce */
	XAxiDma_BdRingSetCoalesce(TxRingPtr, Coalesce, Delay);

	/* Setup TxBD space  */
	BdCount = XAxiDma_BdRingCntCalc(XAXIDMA_BD_MINIMUM_ALIGNMENT,
				TX_BD_SPACE_HIGH - TX_BD_SPACE_BASE + 1);

	Status = XAxiDma_BdRingCreate(TxRingPtr, TX_BD_SPACE_BASE,
				TX_BD_SPACE_BASE,
				XAXIDMA_BD_MINIMUM_ALIGNMENT, BdCount);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: failed to create BD ring in TxSetup\r\n");
		return XST_FAILURE;
	}

	/*
	 * We create an all-zero BD as the template.
	 */
	XAxiDma_BdClear(&BdTemplate);

	Status = XAxiDma_BdRingClone(TxRingPtr, &BdTemplate);
	if (Status != XST_SUCCESS) {
		xil_printf(" ** Error: failed bdring clone in TxSetup %d\r\n", Status);
		return XST_FAILURE;
	}

	/* Start the TX channel */
	Status = XAxiDma_BdRingStart(TxRingPtr);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: failed to start bdring TxSetup %d\r\n", Status);
		return XST_FAILURE;
	}
	return XST_SUCCESS;
}


/*****************************************************************************/
static void fillTxPacketBufferSineWave(int npoints, u8 *TxPacket){
	int Index;
	u8 Value1,Value2;
	u8 Value;


}

// -------------------------------------------------------------
//
// -------------------------------------------------------------
// N is the number of samples and each sample is 1 micro secs
// Example:  generateSineWave(50.0*1E3, N);
// --------------------------------------------------------
void emitDataToBuffer(int idx, double value) {
  signed short int v;

  v = (signed short int)(value);
  v = v & 0x0FFF;
  v = v << 4;
  printf("TxPacket[%d] = 0x%02x;\n",((idx*2)^2),v&0x00FF);
  printf("TxPacket[%d] = 0x%02x;\n",((idx*2+1)^2),((v&0xFF00) >> 8) & 0xFF);
}

void generateSineWave(double freq, int num_samples, int AMP) {
  double f, x, y, base, mult;
  signed short int i, v, w;

  // printf(" size: %d\n",sizeof(v));
  // for N = 128 we get base = 7.8 KHz : 1.0/(128 * 1 micro secs)
  base = 1.0/(num_samples*1.0E-6);
  f = (3.151526/180.0);
  mult = freq / base;

  for(i = 0; i < num_samples; i++){
    //x = sin(mult*f*i*(360.0/(num_samples * 1.0)));
    emitDataToBuffer(i, x*((AMP)*1.0)+ (AMP*1.0));
  }
}





/*****************************************************************************/
static void fillTxPacketBuffer(int npoints, u8 *TxPacket){
	int Index;
/*
	  for(Index = 0; Index < (npoints/4); Index = Index+2) {
		TxPacket[Index] = Value1;
		TxPacket[Index+1] = Value2;
	  }
*/

/*
		Value = 0x00;
		for(Index = 0; Index < npoints/2; Index++){
			TxPacket[Index*2] = 0xf0;
			TxPacket[Index*2+1] =((2*Value) & 0xff);
			Value = (Value +1) & 0xFF;
		}
*/
/*
 		//============== ramp data ======================
		u16 rampValue = 0x00;
		u16 dataShifted;
		for(Index = 0; Index < npoints; Index++){
			dataShifted = rampValue << 4;

			if (Index < 2048)
			{	//first half of the buffer
				TxPacket[Index*2] = (u8)(dataShifted & 0xFF); //store the LSbyte
				TxPacket[Index*2+1] = (u8)(dataShifted >> 8); //store the MSbyte
				rampValue++;
			}
			else
			{	//second half of the buffer
				TxPacket[Index*2] = (u8)(dataShifted & 0xFF); //store the LSbyte
				TxPacket[Index*2+1] = (u8)(dataShifted >> 8); //store the MSbyte
				rampValue--;

			}
		}
		//===============================================

*/

/*     	//=========== static DC value ===================
		u16 dataShifted = 0xAA5 << 4;
		for(Index = 0; Index < npoints; Index++){
			TxPacket[Index*2] = (u8)(dataShifted & 0xFF);
			TxPacket[Index*2+1] = (u8)(dataShifted >> 8);
		}
*/		//===============================================
		u16 sine[4096];
/*
		//debug samples
		sine[0]=0;
		sine[1]=256;
		sine[2]=512;
		sine[3]=768;
		sine[4]=0;
		sine[5]=256;
		sine[6]=512;
		sine[7]=768;
		sine[8]=0;
		sine[9]=256;
		sine[10]=512;
		sine[11]=768;
		sine[12]=0;
		sine[13]=256;
		sine[14]=512;
		sine[15]=768;
		sine[16]=0;
		sine[17]=256;
		sine[18]=512;
		sine[19]=768;
		sine[20]=0;
		sine[21]=256;
		sine[22]=512;
		sine[23]=768;
		sine[24]=0;
		sine[25]=256;
		sine[26]=512;
		sine[27]=768;
		sine[28]=0;
		sine[29]=256;
		sine[30]=512;
		sine[31]=768;
		sine[32]=0;
		sine[33]=256;
		sine[34]=512;
		sine[35]=768;
		sine[36]=0;
		sine[37]=256;
		sine[38]=512;
		sine[39]=768;
		sine[40]=0;
		sine[41]=256;
		sine[42]=512;
		sine[43]=768;
		sine[44]=0;
		sine[45]=256;
		sine[46]=512;
		sine[47]=768;
		sine[48]=0;
		sine[49]=256;
		sine[50]=512;
		sine[51]=768;
		sine[52]=0;
		sine[53]=256;
		sine[54]=512;
		sine[55]=768;
		sine[56]=0;
		sine[57]=256;
		sine[58]=512;
		sine[59]=768;
		sine[60]=0;
		sine[61]=256;
		sine[62]=512;
		sine[63]=768;
		sine[64]=0;
		sine[65]=256;
		sine[66]=512;
		sine[67]=768;
		sine[68]=0;
		sine[69]=256;
		sine[70]=512;
		sine[71]=768;
		sine[72]=0;
		sine[73]=256;
		sine[74]=512;
		sine[75]=768;
		sine[76]=0;
		sine[77]=256;
		sine[78]=512;
		sine[79]=768;
		sine[80]=0;
		sine[81]=256;
		sine[82]=512;
		sine[83]=768;
		sine[84]=0;
		sine[85]=256;
		sine[86]=512;
		sine[87]=768;
		sine[88]=0;
		sine[89]=256;
		sine[90]=512;
		sine[91]=768;
		sine[92]=0;
		sine[93]=256;
		sine[94]=512;
		sine[95]=768;
		sine[96]=0;
		sine[97]=256;
		sine[98]=512;
		sine[99]=768;
		sine[100]=0;
		sine[101]=256;
		sine[102]=512;
		sine[103]=768;
		sine[104]=0;
		sine[105]=256;
		sine[106]=512;
		sine[107]=768;
		sine[108]=0;
		sine[109]=256;
		sine[110]=512;
		sine[111]=768;
		sine[112]=0;
		sine[113]=256;
		sine[114]=512;
		sine[115]=768;
		sine[116]=0;
		sine[117]=256;
		sine[118]=512;
		sine[119]=768;
		sine[120]=0;
		sine[121]=256;
		sine[122]=512;
		sine[123]=768;
		sine[124]=0;
		sine[125]=256;
		sine[126]=512;
		sine[127]=768;
		sine[128]=0;
		sine[129]=256;
		sine[130]=512;
		sine[131]=768;
		sine[132]=0;
		sine[133]=256;
		sine[134]=512;
		sine[135]=768;
		sine[136]=0;
		sine[137]=256;
		sine[138]=512;
		sine[139]=768;
		sine[140]=0;
		sine[141]=256;
		sine[142]=512;
		sine[143]=768;
		sine[144]=0;
		sine[145]=256;
		sine[146]=512;
		sine[147]=768;
		sine[148]=0;
		sine[149]=256;
		sine[150]=512;
		sine[151]=768;
		sine[152]=0;
		sine[153]=256;
		sine[154]=512;
		sine[155]=768;
		sine[156]=0;
		sine[157]=256;
		sine[158]=512;
		sine[159]=768;
		sine[160]=0;
		sine[161]=256;
		sine[162]=512;
		sine[163]=768;
		sine[164]=0;
		sine[165]=256;
		sine[166]=512;
		sine[167]=768;
		sine[168]=0;
		sine[169]=256;
		sine[170]=512;
		sine[171]=768;
		sine[172]=0;
		sine[173]=256;
		sine[174]=512;
		sine[175]=768;
		sine[176]=0;
		sine[177]=256;
		sine[178]=512;
		sine[179]=768;
		sine[180]=0;
		sine[181]=256;
		sine[182]=512;
		sine[183]=768;
		sine[184]=0;
		sine[185]=256;
		sine[186]=512;
		sine[187]=768;
		sine[188]=0;
		sine[189]=256;
		sine[190]=512;
		sine[191]=768;
		sine[192]=0;
		sine[193]=256;
		sine[194]=512;
		sine[195]=768;
		sine[196]=0;
		sine[197]=256;
		sine[198]=512;
		sine[199]=768;
		sine[200]=0;
		sine[201]=256;
		sine[202]=512;
		sine[203]=768;
		sine[204]=0;
		sine[205]=256;
		sine[206]=512;
		sine[207]=768;
		sine[208]=0;
		sine[209]=256;
		sine[210]=512;
		sine[211]=768;
		sine[212]=0;
		sine[213]=256;
		sine[214]=512;
		sine[215]=768;
		sine[216]=0;
		sine[217]=256;
		sine[218]=512;
		sine[219]=768;
		sine[220]=0;
		sine[221]=256;
		sine[222]=512;
		sine[223]=768;
		sine[224]=0;
		sine[225]=256;
		sine[226]=512;
		sine[227]=768;
		sine[228]=0;
		sine[229]=256;
		sine[230]=512;
		sine[231]=768;
		sine[232]=0;
		sine[233]=256;
		sine[234]=512;
		sine[235]=768;
		sine[236]=0;
		sine[237]=256;
		sine[238]=512;
		sine[239]=768;
		sine[240]=0;
		sine[241]=256;
		sine[242]=512;
		sine[243]=768;
		sine[244]=0;
		sine[245]=256;
		sine[246]=512;
		sine[247]=768;
		sine[248]=0;
		sine[249]=256;
		sine[250]=512;
		sine[251]=768;
		sine[252]=0;
		sine[253]=256;
		sine[254]=512;
		sine[255]=768;
		sine[256]=0;
		sine[257]=256;
		sine[258]=512;
		sine[259]=768;
		sine[260]=0;
		sine[261]=256;
		sine[262]=512;
		sine[263]=768;
		sine[264]=0;
		sine[265]=256;
		sine[266]=512;
		sine[267]=768;
		sine[268]=0;
		sine[269]=256;
		sine[270]=512;
		sine[271]=768;
		sine[272]=0;
		sine[273]=256;
		sine[274]=512;
		sine[275]=768;
		sine[276]=0;
		sine[277]=256;
		sine[278]=512;
		sine[279]=768;
		sine[280]=0;
		sine[281]=256;
		sine[282]=512;
		sine[283]=768;
		sine[284]=0;
		sine[285]=256;
		sine[286]=512;
		sine[287]=768;
		sine[288]=0;
		sine[289]=256;
		sine[290]=512;
		sine[291]=768;
		sine[292]=0;
		sine[293]=256;
		sine[294]=512;
		sine[295]=768;
		sine[296]=0;
		sine[297]=256;
		sine[298]=512;
		sine[299]=768;
		sine[300]=0;
		sine[301]=256;
		sine[302]=512;
		sine[303]=768;
		sine[304]=0;
		sine[305]=256;
		sine[306]=512;
		sine[307]=768;
		sine[308]=0;
		sine[309]=256;
		sine[310]=512;
		sine[311]=768;
		sine[312]=0;
		sine[313]=256;
		sine[314]=512;
		sine[315]=768;
		sine[316]=0;
		sine[317]=256;
		sine[318]=512;
		sine[319]=768;
		sine[320]=0;
		sine[321]=256;
		sine[322]=512;
		sine[323]=768;
		sine[324]=0;
		sine[325]=256;
		sine[326]=512;
		sine[327]=768;
		sine[328]=0;
		sine[329]=256;
		sine[330]=512;
		sine[331]=768;
		sine[332]=0;
		sine[333]=256;
		sine[334]=512;
		sine[335]=768;
		sine[336]=0;
		sine[337]=256;
		sine[338]=512;
		sine[339]=768;
		sine[340]=0;
		sine[341]=256;
		sine[342]=512;
		sine[343]=768;
		sine[344]=0;
		sine[345]=256;
		sine[346]=512;
		sine[347]=768;
		sine[348]=0;
		sine[349]=256;
		sine[350]=512;
		sine[351]=768;
		sine[352]=0;
		sine[353]=256;
		sine[354]=512;
		sine[355]=768;
		sine[356]=0;
		sine[357]=256;
		sine[358]=512;
		sine[359]=768;
		sine[360]=0;
		sine[361]=256;
		sine[362]=512;
		sine[363]=768;
		sine[364]=0;
		sine[365]=256;
		sine[366]=512;
		sine[367]=768;
		sine[368]=0;
		sine[369]=256;
		sine[370]=512;
		sine[371]=768;
		sine[372]=0;
		sine[373]=256;
		sine[374]=512;
		sine[375]=768;
		sine[376]=0;
		sine[377]=256;
		sine[378]=512;
		sine[379]=768;
		sine[380]=0;
		sine[381]=256;
		sine[382]=512;
		sine[383]=768;
		sine[384]=0;
		sine[385]=256;
		sine[386]=512;
		sine[387]=768;
		sine[388]=0;
		sine[389]=256;
		sine[390]=512;
		sine[391]=768;
		sine[392]=0;
		sine[393]=256;
		sine[394]=512;
		sine[395]=768;
		sine[396]=0;
		sine[397]=256;
		sine[398]=512;
		sine[399]=768;
		sine[400]=0;
		sine[401]=256;
		sine[402]=512;
		sine[403]=768;
		sine[404]=0;
		sine[405]=256;
		sine[406]=512;
		sine[407]=768;
		sine[408]=0;
		sine[409]=256;
		sine[410]=512;
		sine[411]=768;
		sine[412]=0;
		sine[413]=256;
		sine[414]=512;
		sine[415]=768;
		sine[416]=0;
		sine[417]=256;
		sine[418]=512;
		sine[419]=768;
		sine[420]=0;
		sine[421]=256;
		sine[422]=512;
		sine[423]=768;
		sine[424]=0;
		sine[425]=256;
		sine[426]=512;
		sine[427]=768;
		sine[428]=0;
		sine[429]=256;
		sine[430]=512;
		sine[431]=768;
		sine[432]=0;
		sine[433]=256;
		sine[434]=512;
		sine[435]=768;
		sine[436]=0;
		sine[437]=256;
		sine[438]=512;
		sine[439]=768;
		sine[440]=0;
		sine[441]=256;
		sine[442]=512;
		sine[443]=768;
		sine[444]=0;
		sine[445]=256;
		sine[446]=512;
		sine[447]=768;
		sine[448]=0;
		sine[449]=256;
		sine[450]=512;
		sine[451]=768;
		sine[452]=0;
		sine[453]=256;
		sine[454]=512;
		sine[455]=768;
		sine[456]=0;
		sine[457]=256;
		sine[458]=512;
		sine[459]=768;
		sine[460]=0;
		sine[461]=256;
		sine[462]=512;
		sine[463]=768;
		sine[464]=0;
		sine[465]=256;
		sine[466]=512;
		sine[467]=768;
		sine[468]=0;
		sine[469]=256;
		sine[470]=512;
		sine[471]=768;
		sine[472]=0;
		sine[473]=256;
		sine[474]=512;
		sine[475]=768;
		sine[476]=0;
		sine[477]=256;
		sine[478]=512;
		sine[479]=768;
		sine[480]=0;
		sine[481]=256;
		sine[482]=512;
		sine[483]=768;
		sine[484]=0;
		sine[485]=256;
		sine[486]=512;
		sine[487]=768;
		sine[488]=0;
		sine[489]=256;
		sine[490]=512;
		sine[491]=768;
		sine[492]=0;
		sine[493]=256;
		sine[494]=512;
		sine[495]=768;
		sine[496]=0;
		sine[497]=256;
		sine[498]=512;
		sine[499]=768;
		sine[500]=0;
		sine[501]=256;
		sine[502]=512;
		sine[503]=768;
		sine[504]=0;
		sine[505]=256;
		sine[506]=512;
		sine[507]=768;
		sine[508]=0;
		sine[509]=256;
		sine[510]=512;
		sine[511]=768;
		sine[512]=0;
		sine[513]=256;
		sine[514]=512;
		sine[515]=768;
		sine[516]=0;
		sine[517]=256;
		sine[518]=512;
		sine[519]=768;
		sine[520]=0;
		sine[521]=256;
		sine[522]=512;
		sine[523]=768;
		sine[524]=0;
		sine[525]=256;
		sine[526]=512;
		sine[527]=768;
		sine[528]=0;
		sine[529]=256;
		sine[530]=512;
		sine[531]=768;
		sine[532]=0;
		sine[533]=256;
		sine[534]=512;
		sine[535]=768;
		sine[536]=0;
		sine[537]=256;
		sine[538]=512;
		sine[539]=768;
		sine[540]=0;
		sine[541]=256;
		sine[542]=512;
		sine[543]=768;
		sine[544]=0;
		sine[545]=256;
		sine[546]=512;
		sine[547]=768;
		sine[548]=0;
		sine[549]=256;
		sine[550]=512;
		sine[551]=768;
		sine[552]=0;
		sine[553]=256;
		sine[554]=512;
		sine[555]=768;
		sine[556]=0;
		sine[557]=256;
		sine[558]=512;
		sine[559]=768;
		sine[560]=0;
		sine[561]=256;
		sine[562]=512;
		sine[563]=768;
		sine[564]=0;
		sine[565]=256;
		sine[566]=512;
		sine[567]=768;
		sine[568]=0;
		sine[569]=256;
		sine[570]=512;
		sine[571]=768;
		sine[572]=0;
		sine[573]=256;
		sine[574]=512;
		sine[575]=768;
		sine[576]=0;
		sine[577]=256;
		sine[578]=512;
		sine[579]=768;
		sine[580]=0;
		sine[581]=256;
		sine[582]=512;
		sine[583]=768;
		sine[584]=0;
		sine[585]=256;
		sine[586]=512;
		sine[587]=768;
		sine[588]=0;
		sine[589]=256;
		sine[590]=512;
		sine[591]=768;
		sine[592]=0;
		sine[593]=256;
		sine[594]=512;
		sine[595]=768;
		sine[596]=0;
		sine[597]=256;
		sine[598]=512;
		sine[599]=768;
		sine[600]=0;
		sine[601]=256;
		sine[602]=512;
		sine[603]=768;
		sine[604]=0;
		sine[605]=256;
		sine[606]=512;
		sine[607]=768;
		sine[608]=0;
		sine[609]=256;
		sine[610]=512;
		sine[611]=768;
		sine[612]=0;
		sine[613]=256;
		sine[614]=512;
		sine[615]=768;
		sine[616]=0;
		sine[617]=256;
		sine[618]=512;
		sine[619]=768;
		sine[620]=0;
		sine[621]=256;
		sine[622]=512;
		sine[623]=768;
		sine[624]=0;
		sine[625]=256;
		sine[626]=512;
		sine[627]=768;
		sine[628]=0;
		sine[629]=256;
		sine[630]=512;
		sine[631]=768;
		sine[632]=0;
		sine[633]=256;
		sine[634]=512;
		sine[635]=768;
		sine[636]=0;
		sine[637]=256;
		sine[638]=512;
		sine[639]=768;
		sine[640]=0;
		sine[641]=256;
		sine[642]=512;
		sine[643]=768;
		sine[644]=0;
		sine[645]=256;
		sine[646]=512;
		sine[647]=768;
		sine[648]=0;
		sine[649]=256;
		sine[650]=512;
		sine[651]=768;
		sine[652]=0;
		sine[653]=256;
		sine[654]=512;
		sine[655]=768;
		sine[656]=0;
		sine[657]=256;
		sine[658]=512;
		sine[659]=768;
		sine[660]=0;
		sine[661]=256;
		sine[662]=512;
		sine[663]=768;
		sine[664]=0;
		sine[665]=256;
		sine[666]=512;
		sine[667]=768;
		sine[668]=0;
		sine[669]=256;
		sine[670]=512;
		sine[671]=768;
		sine[672]=0;
		sine[673]=256;
		sine[674]=512;
		sine[675]=768;
		sine[676]=0;
		sine[677]=256;
		sine[678]=512;
		sine[679]=768;
		sine[680]=0;
		sine[681]=256;
		sine[682]=512;
		sine[683]=768;
		sine[684]=0;
		sine[685]=256;
		sine[686]=512;
		sine[687]=768;
		sine[688]=0;
		sine[689]=256;
		sine[690]=512;
		sine[691]=768;
		sine[692]=0;
		sine[693]=256;
		sine[694]=512;
		sine[695]=768;
		sine[696]=0;
		sine[697]=256;
		sine[698]=512;
		sine[699]=768;
		sine[700]=0;
		sine[701]=256;
		sine[702]=512;
		sine[703]=768;
		sine[704]=0;
		sine[705]=256;
		sine[706]=512;
		sine[707]=768;
		sine[708]=0;
		sine[709]=256;
		sine[710]=512;
		sine[711]=768;
		sine[712]=0;
		sine[713]=256;
		sine[714]=512;
		sine[715]=768;
		sine[716]=0;
		sine[717]=256;
		sine[718]=512;
		sine[719]=768;
		sine[720]=0;
		sine[721]=256;
		sine[722]=512;
		sine[723]=768;
		sine[724]=0;
		sine[725]=256;
		sine[726]=512;
		sine[727]=768;
		sine[728]=0;
		sine[729]=256;
		sine[730]=512;
		sine[731]=768;
		sine[732]=0;
		sine[733]=256;
		sine[734]=512;
		sine[735]=768;
		sine[736]=0;
		sine[737]=256;
		sine[738]=512;
		sine[739]=768;
		sine[740]=0;
		sine[741]=256;
		sine[742]=512;
		sine[743]=768;
		sine[744]=0;
		sine[745]=256;
		sine[746]=512;
		sine[747]=768;
		sine[748]=0;
		sine[749]=256;
		sine[750]=512;
		sine[751]=768;
		sine[752]=0;
		sine[753]=256;
		sine[754]=512;
		sine[755]=768;
		sine[756]=0;
		sine[757]=256;
		sine[758]=512;
		sine[759]=768;
		sine[760]=0;
		sine[761]=256;
		sine[762]=512;
		sine[763]=768;
		sine[764]=0;
		sine[765]=256;
		sine[766]=512;
		sine[767]=768;
		sine[768]=0;
		sine[769]=256;
		sine[770]=512;
		sine[771]=768;
		sine[772]=0;
		sine[773]=256;
		sine[774]=512;
		sine[775]=768;
		sine[776]=0;
		sine[777]=256;
		sine[778]=512;
		sine[779]=768;
		sine[780]=0;
		sine[781]=256;
		sine[782]=512;
		sine[783]=768;
		sine[784]=0;
		sine[785]=256;
		sine[786]=512;
		sine[787]=768;
		sine[788]=0;
		sine[789]=256;
		sine[790]=512;
		sine[791]=768;
		sine[792]=0;
		sine[793]=256;
		sine[794]=512;
		sine[795]=768;
		sine[796]=0;
		sine[797]=256;
		sine[798]=512;
		sine[799]=768;
		sine[800]=0;
		sine[801]=256;
		sine[802]=512;
		sine[803]=768;
		sine[804]=0;
		sine[805]=256;
		sine[806]=512;
		sine[807]=768;
		sine[808]=0;
		sine[809]=256;
		sine[810]=512;
		sine[811]=768;
		sine[812]=0;
		sine[813]=256;
		sine[814]=512;
		sine[815]=768;
		sine[816]=0;
		sine[817]=256;
		sine[818]=512;
		sine[819]=768;
		sine[820]=0;
		sine[821]=256;
		sine[822]=512;
		sine[823]=768;
		sine[824]=0;
		sine[825]=256;
		sine[826]=512;
		sine[827]=768;
		sine[828]=0;
		sine[829]=256;
		sine[830]=512;
		sine[831]=768;
		sine[832]=0;
		sine[833]=256;
		sine[834]=512;
		sine[835]=768;
		sine[836]=0;
		sine[837]=256;
		sine[838]=512;
		sine[839]=768;
		sine[840]=0;
		sine[841]=256;
		sine[842]=512;
		sine[843]=768;
		sine[844]=0;
		sine[845]=256;
		sine[846]=512;
		sine[847]=768;
		sine[848]=0;
		sine[849]=256;
		sine[850]=512;
		sine[851]=768;
		sine[852]=0;
		sine[853]=256;
		sine[854]=512;
		sine[855]=768;
		sine[856]=0;
		sine[857]=256;
		sine[858]=512;
		sine[859]=768;
		sine[860]=0;
		sine[861]=256;
		sine[862]=512;
		sine[863]=768;
		sine[864]=0;
		sine[865]=256;
		sine[866]=512;
		sine[867]=768;
		sine[868]=0;
		sine[869]=256;
		sine[870]=512;
		sine[871]=768;
		sine[872]=0;
		sine[873]=256;
		sine[874]=512;
		sine[875]=768;
		sine[876]=0;
		sine[877]=256;
		sine[878]=512;
		sine[879]=768;
		sine[880]=0;
		sine[881]=256;
		sine[882]=512;
		sine[883]=768;
		sine[884]=0;
		sine[885]=256;
		sine[886]=512;
		sine[887]=768;
		sine[888]=0;
		sine[889]=256;
		sine[890]=512;
		sine[891]=768;
		sine[892]=0;
		sine[893]=256;
		sine[894]=512;
		sine[895]=768;
		sine[896]=0;
		sine[897]=256;
		sine[898]=512;
		sine[899]=768;
		sine[900]=0;
		sine[901]=256;
		sine[902]=512;
		sine[903]=768;
		sine[904]=0;
		sine[905]=256;
		sine[906]=512;
		sine[907]=768;
		sine[908]=0;
		sine[909]=256;
		sine[910]=512;
		sine[911]=768;
		sine[912]=0;
		sine[913]=256;
		sine[914]=512;
		sine[915]=768;
		sine[916]=0;
		sine[917]=256;
		sine[918]=512;
		sine[919]=768;
		sine[920]=0;
		sine[921]=256;
		sine[922]=512;
		sine[923]=768;
		sine[924]=0;
		sine[925]=256;
		sine[926]=512;
		sine[927]=768;
		sine[928]=0;
		sine[929]=256;
		sine[930]=512;
		sine[931]=768;
		sine[932]=0;
		sine[933]=256;
		sine[934]=512;
		sine[935]=768;
		sine[936]=0;
		sine[937]=256;
		sine[938]=512;
		sine[939]=768;
		sine[940]=0;
		sine[941]=256;
		sine[942]=512;
		sine[943]=768;
		sine[944]=0;
		sine[945]=256;
		sine[946]=512;
		sine[947]=768;
		sine[948]=0;
		sine[949]=256;
		sine[950]=512;
		sine[951]=768;
		sine[952]=0;
		sine[953]=256;
		sine[954]=512;
		sine[955]=768;
		sine[956]=0;
		sine[957]=256;
		sine[958]=512;
		sine[959]=768;
		sine[960]=0;
		sine[961]=256;
		sine[962]=512;
		sine[963]=768;
		sine[964]=0;
		sine[965]=256;
		sine[966]=512;
		sine[967]=768;
		sine[968]=0;
		sine[969]=256;
		sine[970]=512;
		sine[971]=768;
		sine[972]=0;
		sine[973]=256;
		sine[974]=512;
		sine[975]=768;
		sine[976]=0;
		sine[977]=256;
		sine[978]=512;
		sine[979]=768;
		sine[980]=0;
		sine[981]=256;
		sine[982]=512;
		sine[983]=768;
		sine[984]=0;
		sine[985]=256;
		sine[986]=512;
		sine[987]=768;
		sine[988]=0;
		sine[989]=256;
		sine[990]=512;
		sine[991]=768;
		sine[992]=0;
		sine[993]=256;
		sine[994]=512;
		sine[995]=768;
		sine[996]=0;
		sine[997]=256;
		sine[998]=512;
		sine[999]=768;
		sine[1000]=0;
		sine[1001]=256;
		sine[1002]=512;
		sine[1003]=768;
		sine[1004]=0;
		sine[1005]=256;
		sine[1006]=512;
		sine[1007]=768;
		sine[1008]=0;
		sine[1009]=256;
		sine[1010]=512;
		sine[1011]=768;
		sine[1012]=0;
		sine[1013]=256;
		sine[1014]=512;
		sine[1015]=768;
		sine[1016]=0;
		sine[1017]=256;
		sine[1018]=512;
		sine[1019]=768;
		sine[1020]=0;
		sine[1021]=256;
		sine[1022]=512;
		sine[1023]=768;
		sine[1024]=0;
		sine[1025]=256;
		sine[1026]=512;
		sine[1027]=768;
		sine[1028]=0;
		sine[1029]=256;
		sine[1030]=512;
		sine[1031]=768;
		sine[1032]=0;
		sine[1033]=256;
		sine[1034]=512;
		sine[1035]=768;
		sine[1036]=0;
		sine[1037]=256;
		sine[1038]=512;
		sine[1039]=768;
		sine[1040]=0;
		sine[1041]=256;
		sine[1042]=512;
		sine[1043]=768;
		sine[1044]=0;
		sine[1045]=256;
		sine[1046]=512;
		sine[1047]=768;
		sine[1048]=0;
		sine[1049]=256;
		sine[1050]=512;
		sine[1051]=768;
		sine[1052]=0;
		sine[1053]=256;
		sine[1054]=512;
		sine[1055]=768;
		sine[1056]=0;
		sine[1057]=256;
		sine[1058]=512;
		sine[1059]=768;
		sine[1060]=0;
		sine[1061]=256;
		sine[1062]=512;
		sine[1063]=768;
		sine[1064]=0;
		sine[1065]=256;
		sine[1066]=512;
		sine[1067]=768;
		sine[1068]=0;
		sine[1069]=256;
		sine[1070]=512;
		sine[1071]=768;
		sine[1072]=0;
		sine[1073]=256;
		sine[1074]=512;
		sine[1075]=768;
		sine[1076]=0;
		sine[1077]=256;
		sine[1078]=512;
		sine[1079]=768;
		sine[1080]=0;
		sine[1081]=256;
		sine[1082]=512;
		sine[1083]=768;
		sine[1084]=0;
		sine[1085]=256;
		sine[1086]=512;
		sine[1087]=768;
		sine[1088]=0;
		sine[1089]=256;
		sine[1090]=512;
		sine[1091]=768;
		sine[1092]=0;
		sine[1093]=256;
		sine[1094]=512;
		sine[1095]=768;
		sine[1096]=0;
		sine[1097]=256;
		sine[1098]=512;
		sine[1099]=768;
		sine[1100]=0;
		sine[1101]=256;
		sine[1102]=512;
		sine[1103]=768;
		sine[1104]=0;
		sine[1105]=256;
		sine[1106]=512;
		sine[1107]=768;
		sine[1108]=0;
		sine[1109]=256;
		sine[1110]=512;
		sine[1111]=768;
		sine[1112]=0;
		sine[1113]=256;
		sine[1114]=512;
		sine[1115]=768;
		sine[1116]=0;
		sine[1117]=256;
		sine[1118]=512;
		sine[1119]=768;
		sine[1120]=0;
		sine[1121]=256;
		sine[1122]=512;
		sine[1123]=768;
		sine[1124]=0;
		sine[1125]=256;
		sine[1126]=512;
		sine[1127]=768;
		sine[1128]=0;
		sine[1129]=256;
		sine[1130]=512;
		sine[1131]=768;
		sine[1132]=0;
		sine[1133]=256;
		sine[1134]=512;
		sine[1135]=768;
		sine[1136]=0;
		sine[1137]=256;
		sine[1138]=512;
		sine[1139]=768;
		sine[1140]=0;
		sine[1141]=256;
		sine[1142]=512;
		sine[1143]=768;
		sine[1144]=0;
		sine[1145]=256;
		sine[1146]=512;
		sine[1147]=768;
		sine[1148]=0;
		sine[1149]=256;
		sine[1150]=512;
		sine[1151]=768;
		sine[1152]=0;
		sine[1153]=256;
		sine[1154]=512;
		sine[1155]=768;
		sine[1156]=0;
		sine[1157]=256;
		sine[1158]=512;
		sine[1159]=768;
		sine[1160]=0;
		sine[1161]=256;
		sine[1162]=512;
		sine[1163]=768;
		sine[1164]=0;
		sine[1165]=256;
		sine[1166]=512;
		sine[1167]=768;
		sine[1168]=0;
		sine[1169]=256;
		sine[1170]=512;
		sine[1171]=768;
		sine[1172]=0;
		sine[1173]=256;
		sine[1174]=512;
		sine[1175]=768;
		sine[1176]=0;
		sine[1177]=256;
		sine[1178]=512;
		sine[1179]=768;
		sine[1180]=0;
		sine[1181]=256;
		sine[1182]=512;
		sine[1183]=768;
		sine[1184]=0;
		sine[1185]=256;
		sine[1186]=512;
		sine[1187]=768;
		sine[1188]=0;
		sine[1189]=256;
		sine[1190]=512;
		sine[1191]=768;
		sine[1192]=0;
		sine[1193]=256;
		sine[1194]=512;
		sine[1195]=768;
		sine[1196]=0;
		sine[1197]=256;
		sine[1198]=512;
		sine[1199]=768;
		sine[1200]=0;
		sine[1201]=256;
		sine[1202]=512;
		sine[1203]=768;
		sine[1204]=0;
		sine[1205]=256;
		sine[1206]=512;
		sine[1207]=768;
		sine[1208]=0;
		sine[1209]=256;
		sine[1210]=512;
		sine[1211]=768;
		sine[1212]=0;
		sine[1213]=256;
		sine[1214]=512;
		sine[1215]=768;
		sine[1216]=0;
		sine[1217]=256;
		sine[1218]=512;
		sine[1219]=768;
		sine[1220]=0;
		sine[1221]=256;
		sine[1222]=512;
		sine[1223]=768;
		sine[1224]=0;
		sine[1225]=256;
		sine[1226]=512;
		sine[1227]=768;
		sine[1228]=0;
		sine[1229]=256;
		sine[1230]=512;
		sine[1231]=768;
		sine[1232]=0;
		sine[1233]=256;
		sine[1234]=512;
		sine[1235]=768;
		sine[1236]=0;
		sine[1237]=256;
		sine[1238]=512;
		sine[1239]=768;
		sine[1240]=0;
		sine[1241]=256;
		sine[1242]=512;
		sine[1243]=768;
		sine[1244]=0;
		sine[1245]=256;
		sine[1246]=512;
		sine[1247]=768;
		sine[1248]=0;
		sine[1249]=256;
		sine[1250]=512;
		sine[1251]=768;
		sine[1252]=0;
		sine[1253]=256;
		sine[1254]=512;
		sine[1255]=768;
		sine[1256]=0;
		sine[1257]=256;
		sine[1258]=512;
		sine[1259]=768;
		sine[1260]=0;
		sine[1261]=256;
		sine[1262]=512;
		sine[1263]=768;
		sine[1264]=0;
		sine[1265]=256;
		sine[1266]=512;
		sine[1267]=768;
		sine[1268]=0;
		sine[1269]=256;
		sine[1270]=512;
		sine[1271]=768;
		sine[1272]=0;
		sine[1273]=256;
		sine[1274]=512;
		sine[1275]=768;
		sine[1276]=0;
		sine[1277]=256;
		sine[1278]=512;
		sine[1279]=768;
		sine[1280]=0;
		sine[1281]=256;
		sine[1282]=512;
		sine[1283]=768;
		sine[1284]=0;
		sine[1285]=256;
		sine[1286]=512;
		sine[1287]=768;
		sine[1288]=0;
		sine[1289]=256;
		sine[1290]=512;
		sine[1291]=768;
		sine[1292]=0;
		sine[1293]=256;
		sine[1294]=512;
		sine[1295]=768;
		sine[1296]=0;
		sine[1297]=256;
		sine[1298]=512;
		sine[1299]=768;
		sine[1300]=0;
		sine[1301]=256;
		sine[1302]=512;
		sine[1303]=768;
		sine[1304]=0;
		sine[1305]=256;
		sine[1306]=512;
		sine[1307]=768;
		sine[1308]=0;
		sine[1309]=256;
		sine[1310]=512;
		sine[1311]=768;
		sine[1312]=0;
		sine[1313]=256;
		sine[1314]=512;
		sine[1315]=768;
		sine[1316]=0;
		sine[1317]=256;
		sine[1318]=512;
		sine[1319]=768;
		sine[1320]=0;
		sine[1321]=256;
		sine[1322]=512;
		sine[1323]=768;
		sine[1324]=0;
		sine[1325]=256;
		sine[1326]=512;
		sine[1327]=768;
		sine[1328]=0;
		sine[1329]=256;
		sine[1330]=512;
		sine[1331]=768;
		sine[1332]=0;
		sine[1333]=256;
		sine[1334]=512;
		sine[1335]=768;
		sine[1336]=0;
		sine[1337]=256;
		sine[1338]=512;
		sine[1339]=768;
		sine[1340]=0;
		sine[1341]=256;
		sine[1342]=512;
		sine[1343]=768;
		sine[1344]=0;
		sine[1345]=256;
		sine[1346]=512;
		sine[1347]=768;
		sine[1348]=0;
		sine[1349]=256;
		sine[1350]=512;
		sine[1351]=768;
		sine[1352]=0;
		sine[1353]=256;
		sine[1354]=512;
		sine[1355]=768;
		sine[1356]=0;
		sine[1357]=256;
		sine[1358]=512;
		sine[1359]=768;
		sine[1360]=0;
		sine[1361]=256;
		sine[1362]=512;
		sine[1363]=768;
		sine[1364]=0;
		sine[1365]=256;
		sine[1366]=512;
		sine[1367]=768;
		sine[1368]=0;
		sine[1369]=256;
		sine[1370]=512;
		sine[1371]=768;
		sine[1372]=0;
		sine[1373]=256;
		sine[1374]=512;
		sine[1375]=768;
		sine[1376]=0;
		sine[1377]=256;
		sine[1378]=512;
		sine[1379]=768;
		sine[1380]=0;
		sine[1381]=256;
		sine[1382]=512;
		sine[1383]=768;
		sine[1384]=0;
		sine[1385]=256;
		sine[1386]=512;
		sine[1387]=768;
		sine[1388]=0;
		sine[1389]=256;
		sine[1390]=512;
		sine[1391]=768;
		sine[1392]=0;
		sine[1393]=256;
		sine[1394]=512;
		sine[1395]=768;
		sine[1396]=0;
		sine[1397]=256;
		sine[1398]=512;
		sine[1399]=768;
		sine[1400]=0;
		sine[1401]=256;
		sine[1402]=512;
		sine[1403]=768;
		sine[1404]=0;
		sine[1405]=256;
		sine[1406]=512;
		sine[1407]=768;
		sine[1408]=0;
		sine[1409]=256;
		sine[1410]=512;
		sine[1411]=768;
		sine[1412]=0;
		sine[1413]=256;
		sine[1414]=512;
		sine[1415]=768;
		sine[1416]=0;
		sine[1417]=256;
		sine[1418]=512;
		sine[1419]=768;
		sine[1420]=0;
		sine[1421]=256;
		sine[1422]=512;
		sine[1423]=768;
		sine[1424]=0;
		sine[1425]=256;
		sine[1426]=512;
		sine[1427]=768;
		sine[1428]=0;
		sine[1429]=256;
		sine[1430]=512;
		sine[1431]=768;
		sine[1432]=0;
		sine[1433]=256;
		sine[1434]=512;
		sine[1435]=768;
		sine[1436]=0;
		sine[1437]=256;
		sine[1438]=512;
		sine[1439]=768;
		sine[1440]=0;
		sine[1441]=256;
		sine[1442]=512;
		sine[1443]=768;
		sine[1444]=0;
		sine[1445]=256;
		sine[1446]=512;
		sine[1447]=768;
		sine[1448]=0;
		sine[1449]=256;
		sine[1450]=512;
		sine[1451]=768;
		sine[1452]=0;
		sine[1453]=256;
		sine[1454]=512;
		sine[1455]=768;
		sine[1456]=0;
		sine[1457]=256;
		sine[1458]=512;
		sine[1459]=768;
		sine[1460]=0;
		sine[1461]=256;
		sine[1462]=512;
		sine[1463]=768;
		sine[1464]=0;
		sine[1465]=256;
		sine[1466]=512;
		sine[1467]=768;
		sine[1468]=0;
		sine[1469]=256;
		sine[1470]=512;
		sine[1471]=768;
		sine[1472]=0;
		sine[1473]=256;
		sine[1474]=512;
		sine[1475]=768;
		sine[1476]=0;
		sine[1477]=256;
		sine[1478]=512;
		sine[1479]=768;
		sine[1480]=0;
		sine[1481]=256;
		sine[1482]=512;
		sine[1483]=768;
		sine[1484]=0;
		sine[1485]=256;
		sine[1486]=512;
		sine[1487]=768;
		sine[1488]=0;
		sine[1489]=256;
		sine[1490]=512;
		sine[1491]=768;
		sine[1492]=0;
		sine[1493]=256;
		sine[1494]=512;
		sine[1495]=768;
		sine[1496]=0;
		sine[1497]=256;
		sine[1498]=512;
		sine[1499]=768;
		sine[1500]=0;
		sine[1501]=256;
		sine[1502]=512;
		sine[1503]=768;
		sine[1504]=0;
		sine[1505]=256;
		sine[1506]=512;
		sine[1507]=768;
		sine[1508]=0;
		sine[1509]=256;
		sine[1510]=512;
		sine[1511]=768;
		sine[1512]=0;
		sine[1513]=256;
		sine[1514]=512;
		sine[1515]=768;
		sine[1516]=0;
		sine[1517]=256;
		sine[1518]=512;
		sine[1519]=768;
		sine[1520]=0;
		sine[1521]=256;
		sine[1522]=512;
		sine[1523]=768;
		sine[1524]=0;
		sine[1525]=256;
		sine[1526]=512;
		sine[1527]=768;
		sine[1528]=0;
		sine[1529]=256;
		sine[1530]=512;
		sine[1531]=768;
		sine[1532]=0;
		sine[1533]=256;
		sine[1534]=512;
		sine[1535]=768;
		sine[1536]=0;
		sine[1537]=256;
		sine[1538]=512;
		sine[1539]=768;
		sine[1540]=0;
		sine[1541]=256;
		sine[1542]=512;
		sine[1543]=768;
		sine[1544]=0;
		sine[1545]=256;
		sine[1546]=512;
		sine[1547]=768;
		sine[1548]=0;
		sine[1549]=256;
		sine[1550]=512;
		sine[1551]=768;
		sine[1552]=0;
		sine[1553]=256;
		sine[1554]=512;
		sine[1555]=768;
		sine[1556]=0;
		sine[1557]=256;
		sine[1558]=512;
		sine[1559]=768;
		sine[1560]=0;
		sine[1561]=256;
		sine[1562]=512;
		sine[1563]=768;
		sine[1564]=0;
		sine[1565]=256;
		sine[1566]=512;
		sine[1567]=768;
		sine[1568]=0;
		sine[1569]=256;
		sine[1570]=512;
		sine[1571]=768;
		sine[1572]=0;
		sine[1573]=256;
		sine[1574]=512;
		sine[1575]=768;
		sine[1576]=0;
		sine[1577]=256;
		sine[1578]=512;
		sine[1579]=768;
		sine[1580]=0;
		sine[1581]=256;
		sine[1582]=512;
		sine[1583]=768;
		sine[1584]=0;
		sine[1585]=256;
		sine[1586]=512;
		sine[1587]=768;
		sine[1588]=0;
		sine[1589]=256;
		sine[1590]=512;
		sine[1591]=768;
		sine[1592]=0;
		sine[1593]=256;
		sine[1594]=512;
		sine[1595]=768;
		sine[1596]=0;
		sine[1597]=256;
		sine[1598]=512;
		sine[1599]=768;
		sine[1600]=0;
		sine[1601]=256;
		sine[1602]=512;
		sine[1603]=768;
		sine[1604]=0;
		sine[1605]=256;
		sine[1606]=512;
		sine[1607]=768;
		sine[1608]=0;
		sine[1609]=256;
		sine[1610]=512;
		sine[1611]=768;
		sine[1612]=0;
		sine[1613]=256;
		sine[1614]=512;
		sine[1615]=768;
		sine[1616]=0;
		sine[1617]=256;
		sine[1618]=512;
		sine[1619]=768;
		sine[1620]=0;
		sine[1621]=256;
		sine[1622]=512;
		sine[1623]=768;
		sine[1624]=0;
		sine[1625]=256;
		sine[1626]=512;
		sine[1627]=768;
		sine[1628]=0;
		sine[1629]=256;
		sine[1630]=512;
		sine[1631]=768;
		sine[1632]=0;
		sine[1633]=256;
		sine[1634]=512;
		sine[1635]=768;
		sine[1636]=0;
		sine[1637]=256;
		sine[1638]=512;
		sine[1639]=768;
		sine[1640]=0;
		sine[1641]=256;
		sine[1642]=512;
		sine[1643]=768;
		sine[1644]=0;
		sine[1645]=256;
		sine[1646]=512;
		sine[1647]=768;
		sine[1648]=0;
		sine[1649]=256;
		sine[1650]=512;
		sine[1651]=768;
		sine[1652]=0;
		sine[1653]=256;
		sine[1654]=512;
		sine[1655]=768;
		sine[1656]=0;
		sine[1657]=256;
		sine[1658]=512;
		sine[1659]=768;
		sine[1660]=0;
		sine[1661]=256;
		sine[1662]=512;
		sine[1663]=768;
		sine[1664]=0;
		sine[1665]=256;
		sine[1666]=512;
		sine[1667]=768;
		sine[1668]=0;
		sine[1669]=256;
		sine[1670]=512;
		sine[1671]=768;
		sine[1672]=0;
		sine[1673]=256;
		sine[1674]=512;
		sine[1675]=768;
		sine[1676]=0;
		sine[1677]=256;
		sine[1678]=512;
		sine[1679]=768;
		sine[1680]=0;
		sine[1681]=256;
		sine[1682]=512;
		sine[1683]=768;
		sine[1684]=0;
		sine[1685]=256;
		sine[1686]=512;
		sine[1687]=768;
		sine[1688]=0;
		sine[1689]=256;
		sine[1690]=512;
		sine[1691]=768;
		sine[1692]=0;
		sine[1693]=256;
		sine[1694]=512;
		sine[1695]=768;
		sine[1696]=0;
		sine[1697]=256;
		sine[1698]=512;
		sine[1699]=768;
		sine[1700]=0;
		sine[1701]=256;
		sine[1702]=512;
		sine[1703]=768;
		sine[1704]=0;
		sine[1705]=256;
		sine[1706]=512;
		sine[1707]=768;
		sine[1708]=0;
		sine[1709]=256;
		sine[1710]=512;
		sine[1711]=768;
		sine[1712]=0;
		sine[1713]=256;
		sine[1714]=512;
		sine[1715]=768;
		sine[1716]=0;
		sine[1717]=256;
		sine[1718]=512;
		sine[1719]=768;
		sine[1720]=0;
		sine[1721]=256;
		sine[1722]=512;
		sine[1723]=768;
		sine[1724]=0;
		sine[1725]=256;
		sine[1726]=512;
		sine[1727]=768;
		sine[1728]=0;
		sine[1729]=256;
		sine[1730]=512;
		sine[1731]=768;
		sine[1732]=0;
		sine[1733]=256;
		sine[1734]=512;
		sine[1735]=768;
		sine[1736]=0;
		sine[1737]=256;
		sine[1738]=512;
		sine[1739]=768;
		sine[1740]=0;
		sine[1741]=256;
		sine[1742]=512;
		sine[1743]=768;
		sine[1744]=0;
		sine[1745]=256;
		sine[1746]=512;
		sine[1747]=768;
		sine[1748]=0;
		sine[1749]=256;
		sine[1750]=512;
		sine[1751]=768;
		sine[1752]=0;
		sine[1753]=256;
		sine[1754]=512;
		sine[1755]=768;
		sine[1756]=0;
		sine[1757]=256;
		sine[1758]=512;
		sine[1759]=768;
		sine[1760]=0;
		sine[1761]=256;
		sine[1762]=512;
		sine[1763]=768;
		sine[1764]=0;
		sine[1765]=256;
		sine[1766]=512;
		sine[1767]=768;
		sine[1768]=0;
		sine[1769]=256;
		sine[1770]=512;
		sine[1771]=768;
		sine[1772]=0;
		sine[1773]=256;
		sine[1774]=512;
		sine[1775]=768;
		sine[1776]=0;
		sine[1777]=256;
		sine[1778]=512;
		sine[1779]=768;
		sine[1780]=0;
		sine[1781]=256;
		sine[1782]=512;
		sine[1783]=768;
		sine[1784]=0;
		sine[1785]=256;
		sine[1786]=512;
		sine[1787]=768;
		sine[1788]=0;
		sine[1789]=256;
		sine[1790]=512;
		sine[1791]=768;
		sine[1792]=0;
		sine[1793]=256;
		sine[1794]=512;
		sine[1795]=768;
		sine[1796]=0;
		sine[1797]=256;
		sine[1798]=512;
		sine[1799]=768;
		sine[1800]=0;
		sine[1801]=256;
		sine[1802]=512;
		sine[1803]=768;
		sine[1804]=0;
		sine[1805]=256;
		sine[1806]=512;
		sine[1807]=768;
		sine[1808]=0;
		sine[1809]=256;
		sine[1810]=512;
		sine[1811]=768;
		sine[1812]=0;
		sine[1813]=256;
		sine[1814]=512;
		sine[1815]=768;
		sine[1816]=0;
		sine[1817]=256;
		sine[1818]=512;
		sine[1819]=768;
		sine[1820]=0;
		sine[1821]=256;
		sine[1822]=512;
		sine[1823]=768;
		sine[1824]=0;
		sine[1825]=256;
		sine[1826]=512;
		sine[1827]=768;
		sine[1828]=0;
		sine[1829]=256;
		sine[1830]=512;
		sine[1831]=768;
		sine[1832]=0;
		sine[1833]=256;
		sine[1834]=512;
		sine[1835]=768;
		sine[1836]=0;
		sine[1837]=256;
		sine[1838]=512;
		sine[1839]=768;
		sine[1840]=0;
		sine[1841]=256;
		sine[1842]=512;
		sine[1843]=768;
		sine[1844]=0;
		sine[1845]=256;
		sine[1846]=512;
		sine[1847]=768;
		sine[1848]=0;
		sine[1849]=256;
		sine[1850]=512;
		sine[1851]=768;
		sine[1852]=0;
		sine[1853]=256;
		sine[1854]=512;
		sine[1855]=768;
		sine[1856]=0;
		sine[1857]=256;
		sine[1858]=512;
		sine[1859]=768;
		sine[1860]=0;
		sine[1861]=256;
		sine[1862]=512;
		sine[1863]=768;
		sine[1864]=0;
		sine[1865]=256;
		sine[1866]=512;
		sine[1867]=768;
		sine[1868]=0;
		sine[1869]=256;
		sine[1870]=512;
		sine[1871]=768;
		sine[1872]=0;
		sine[1873]=256;
		sine[1874]=512;
		sine[1875]=768;
		sine[1876]=0;
		sine[1877]=256;
		sine[1878]=512;
		sine[1879]=768;
		sine[1880]=0;
		sine[1881]=256;
		sine[1882]=512;
		sine[1883]=768;
		sine[1884]=0;
		sine[1885]=256;
		sine[1886]=512;
		sine[1887]=768;
		sine[1888]=0;
		sine[1889]=256;
		sine[1890]=512;
		sine[1891]=768;
		sine[1892]=0;
		sine[1893]=256;
		sine[1894]=512;
		sine[1895]=768;
		sine[1896]=0;
		sine[1897]=256;
		sine[1898]=512;
		sine[1899]=768;
		sine[1900]=0;
		sine[1901]=256;
		sine[1902]=512;
		sine[1903]=768;
		sine[1904]=0;
		sine[1905]=256;
		sine[1906]=512;
		sine[1907]=768;
		sine[1908]=0;
		sine[1909]=256;
		sine[1910]=512;
		sine[1911]=768;
		sine[1912]=0;
		sine[1913]=256;
		sine[1914]=512;
		sine[1915]=768;
		sine[1916]=0;
		sine[1917]=256;
		sine[1918]=512;
		sine[1919]=768;
		sine[1920]=0;
		sine[1921]=256;
		sine[1922]=512;
		sine[1923]=768;
		sine[1924]=0;
		sine[1925]=256;
		sine[1926]=512;
		sine[1927]=768;
		sine[1928]=0;
		sine[1929]=256;
		sine[1930]=512;
		sine[1931]=768;
		sine[1932]=0;
		sine[1933]=256;
		sine[1934]=512;
		sine[1935]=768;
		sine[1936]=0;
		sine[1937]=256;
		sine[1938]=512;
		sine[1939]=768;
		sine[1940]=0;
		sine[1941]=256;
		sine[1942]=512;
		sine[1943]=768;
		sine[1944]=0;
		sine[1945]=256;
		sine[1946]=512;
		sine[1947]=768;
		sine[1948]=0;
		sine[1949]=256;
		sine[1950]=512;
		sine[1951]=768;
		sine[1952]=0;
		sine[1953]=256;
		sine[1954]=512;
		sine[1955]=768;
		sine[1956]=0;
		sine[1957]=256;
		sine[1958]=512;
		sine[1959]=768;
		sine[1960]=0;
		sine[1961]=256;
		sine[1962]=512;
		sine[1963]=768;
		sine[1964]=0;
		sine[1965]=256;
		sine[1966]=512;
		sine[1967]=768;
		sine[1968]=0;
		sine[1969]=256;
		sine[1970]=512;
		sine[1971]=768;
		sine[1972]=0;
		sine[1973]=256;
		sine[1974]=512;
		sine[1975]=768;
		sine[1976]=0;
		sine[1977]=256;
		sine[1978]=512;
		sine[1979]=768;
		sine[1980]=0;
		sine[1981]=256;
		sine[1982]=512;
		sine[1983]=768;
		sine[1984]=0;
		sine[1985]=256;
		sine[1986]=512;
		sine[1987]=768;
		sine[1988]=0;
		sine[1989]=256;
		sine[1990]=512;
		sine[1991]=768;
		sine[1992]=0;
		sine[1993]=256;
		sine[1994]=512;
		sine[1995]=768;
		sine[1996]=0;
		sine[1997]=256;
		sine[1998]=512;
		sine[1999]=768;
		sine[2000]=0;
		sine[2001]=256;
		sine[2002]=512;
		sine[2003]=768;
		sine[2004]=0;
		sine[2005]=256;
		sine[2006]=512;
		sine[2007]=768;
		sine[2008]=0;
		sine[2009]=256;
		sine[2010]=512;
		sine[2011]=768;
		sine[2012]=0;
		sine[2013]=256;
		sine[2014]=512;
		sine[2015]=768;
		sine[2016]=0;
		sine[2017]=256;
		sine[2018]=512;
		sine[2019]=768;
		sine[2020]=0;
		sine[2021]=256;
		sine[2022]=512;
		sine[2023]=768;
		sine[2024]=0;
		sine[2025]=256;
		sine[2026]=512;
		sine[2027]=768;
		sine[2028]=0;
		sine[2029]=256;
		sine[2030]=512;
		sine[2031]=768;
		sine[2032]=0;
		sine[2033]=256;
		sine[2034]=512;
		sine[2035]=768;
		sine[2036]=0;
		sine[2037]=256;
		sine[2038]=512;
		sine[2039]=768;
		sine[2040]=0;
		sine[2041]=256;
		sine[2042]=512;
		sine[2043]=768;
		sine[2044]=0;
		sine[2045]=256;
		sine[2046]=512;
		sine[2047]=768;
		sine[2048]=0;
		sine[2049]=256;
		sine[2050]=512;
		sine[2051]=768;
		sine[2052]=0;
		sine[2053]=256;
		sine[2054]=512;
		sine[2055]=768;
		sine[2056]=0;
		sine[2057]=256;
		sine[2058]=512;
		sine[2059]=768;
		sine[2060]=0;
		sine[2061]=256;
		sine[2062]=512;
		sine[2063]=768;
		sine[2064]=0;
		sine[2065]=256;
		sine[2066]=512;
		sine[2067]=768;
		sine[2068]=0;
		sine[2069]=256;
		sine[2070]=512;
		sine[2071]=768;
		sine[2072]=0;
		sine[2073]=256;
		sine[2074]=512;
		sine[2075]=768;
		sine[2076]=0;
		sine[2077]=256;
		sine[2078]=512;
		sine[2079]=768;
		sine[2080]=0;
		sine[2081]=256;
		sine[2082]=512;
		sine[2083]=768;
		sine[2084]=0;
		sine[2085]=256;
		sine[2086]=512;
		sine[2087]=768;
		sine[2088]=0;
		sine[2089]=256;
		sine[2090]=512;
		sine[2091]=768;
		sine[2092]=0;
		sine[2093]=256;
		sine[2094]=512;
		sine[2095]=768;
		sine[2096]=0;
		sine[2097]=256;
		sine[2098]=512;
		sine[2099]=768;
		sine[2100]=0;
		sine[2101]=256;
		sine[2102]=512;
		sine[2103]=768;
		sine[2104]=0;
		sine[2105]=256;
		sine[2106]=512;
		sine[2107]=768;
		sine[2108]=0;
		sine[2109]=256;
		sine[2110]=512;
		sine[2111]=768;
		sine[2112]=0;
		sine[2113]=256;
		sine[2114]=512;
		sine[2115]=768;
		sine[2116]=0;
		sine[2117]=256;
		sine[2118]=512;
		sine[2119]=768;
		sine[2120]=0;
		sine[2121]=256;
		sine[2122]=512;
		sine[2123]=768;
		sine[2124]=0;
		sine[2125]=256;
		sine[2126]=512;
		sine[2127]=768;
		sine[2128]=0;
		sine[2129]=256;
		sine[2130]=512;
		sine[2131]=768;
		sine[2132]=0;
		sine[2133]=256;
		sine[2134]=512;
		sine[2135]=768;
		sine[2136]=0;
		sine[2137]=256;
		sine[2138]=512;
		sine[2139]=768;
		sine[2140]=0;
		sine[2141]=256;
		sine[2142]=512;
		sine[2143]=768;
		sine[2144]=0;
		sine[2145]=256;
		sine[2146]=512;
		sine[2147]=768;
		sine[2148]=0;
		sine[2149]=256;
		sine[2150]=512;
		sine[2151]=768;
		sine[2152]=0;
		sine[2153]=256;
		sine[2154]=512;
		sine[2155]=768;
		sine[2156]=0;
		sine[2157]=256;
		sine[2158]=512;
		sine[2159]=768;
		sine[2160]=0;
		sine[2161]=256;
		sine[2162]=512;
		sine[2163]=768;
		sine[2164]=0;
		sine[2165]=256;
		sine[2166]=512;
		sine[2167]=768;
		sine[2168]=0;
		sine[2169]=256;
		sine[2170]=512;
		sine[2171]=768;
		sine[2172]=0;
		sine[2173]=256;
		sine[2174]=512;
		sine[2175]=768;
		sine[2176]=0;
		sine[2177]=256;
		sine[2178]=512;
		sine[2179]=768;
		sine[2180]=0;
		sine[2181]=256;
		sine[2182]=512;
		sine[2183]=768;
		sine[2184]=0;
		sine[2185]=256;
		sine[2186]=512;
		sine[2187]=768;
		sine[2188]=0;
		sine[2189]=256;
		sine[2190]=512;
		sine[2191]=768;
		sine[2192]=0;
		sine[2193]=256;
		sine[2194]=512;
		sine[2195]=768;
		sine[2196]=0;
		sine[2197]=256;
		sine[2198]=512;
		sine[2199]=768;
		sine[2200]=0;
		sine[2201]=256;
		sine[2202]=512;
		sine[2203]=768;
		sine[2204]=0;
		sine[2205]=256;
		sine[2206]=512;
		sine[2207]=768;
		sine[2208]=0;
		sine[2209]=256;
		sine[2210]=512;
		sine[2211]=768;
		sine[2212]=0;
		sine[2213]=256;
		sine[2214]=512;
		sine[2215]=768;
		sine[2216]=0;
		sine[2217]=256;
		sine[2218]=512;
		sine[2219]=768;
		sine[2220]=0;
		sine[2221]=256;
		sine[2222]=512;
		sine[2223]=768;
		sine[2224]=0;
		sine[2225]=256;
		sine[2226]=512;
		sine[2227]=768;
		sine[2228]=0;
		sine[2229]=256;
		sine[2230]=512;
		sine[2231]=768;
		sine[2232]=0;
		sine[2233]=256;
		sine[2234]=512;
		sine[2235]=768;
		sine[2236]=0;
		sine[2237]=256;
		sine[2238]=512;
		sine[2239]=768;
		sine[2240]=0;
		sine[2241]=256;
		sine[2242]=512;
		sine[2243]=768;
		sine[2244]=0;
		sine[2245]=256;
		sine[2246]=512;
		sine[2247]=768;
		sine[2248]=0;
		sine[2249]=256;
		sine[2250]=512;
		sine[2251]=768;
		sine[2252]=0;
		sine[2253]=256;
		sine[2254]=512;
		sine[2255]=768;
		sine[2256]=0;
		sine[2257]=256;
		sine[2258]=512;
		sine[2259]=768;
		sine[2260]=0;
		sine[2261]=256;
		sine[2262]=512;
		sine[2263]=768;
		sine[2264]=0;
		sine[2265]=256;
		sine[2266]=512;
		sine[2267]=768;
		sine[2268]=0;
		sine[2269]=256;
		sine[2270]=512;
		sine[2271]=768;
		sine[2272]=0;
		sine[2273]=256;
		sine[2274]=512;
		sine[2275]=768;
		sine[2276]=0;
		sine[2277]=256;
		sine[2278]=512;
		sine[2279]=768;
		sine[2280]=0;
		sine[2281]=256;
		sine[2282]=512;
		sine[2283]=768;
		sine[2284]=0;
		sine[2285]=256;
		sine[2286]=512;
		sine[2287]=768;
		sine[2288]=0;
		sine[2289]=256;
		sine[2290]=512;
		sine[2291]=768;
		sine[2292]=0;
		sine[2293]=256;
		sine[2294]=512;
		sine[2295]=768;
		sine[2296]=0;
		sine[2297]=256;
		sine[2298]=512;
		sine[2299]=768;
		sine[2300]=0;
		sine[2301]=256;
		sine[2302]=512;
		sine[2303]=768;
		sine[2304]=0;
		sine[2305]=256;
		sine[2306]=512;
		sine[2307]=768;
		sine[2308]=0;
		sine[2309]=256;
		sine[2310]=512;
		sine[2311]=768;
		sine[2312]=0;
		sine[2313]=256;
		sine[2314]=512;
		sine[2315]=768;
		sine[2316]=0;
		sine[2317]=256;
		sine[2318]=512;
		sine[2319]=768;
		sine[2320]=0;
		sine[2321]=256;
		sine[2322]=512;
		sine[2323]=768;
		sine[2324]=0;
		sine[2325]=256;
		sine[2326]=512;
		sine[2327]=768;
		sine[2328]=0;
		sine[2329]=256;
		sine[2330]=512;
		sine[2331]=768;
		sine[2332]=0;
		sine[2333]=256;
		sine[2334]=512;
		sine[2335]=768;
		sine[2336]=0;
		sine[2337]=256;
		sine[2338]=512;
		sine[2339]=768;
		sine[2340]=0;
		sine[2341]=256;
		sine[2342]=512;
		sine[2343]=768;
		sine[2344]=0;
		sine[2345]=256;
		sine[2346]=512;
		sine[2347]=768;
		sine[2348]=0;
		sine[2349]=256;
		sine[2350]=512;
		sine[2351]=768;
		sine[2352]=0;
		sine[2353]=256;
		sine[2354]=512;
		sine[2355]=768;
		sine[2356]=0;
		sine[2357]=256;
		sine[2358]=512;
		sine[2359]=768;
		sine[2360]=0;
		sine[2361]=256;
		sine[2362]=512;
		sine[2363]=768;
		sine[2364]=0;
		sine[2365]=256;
		sine[2366]=512;
		sine[2367]=768;
		sine[2368]=0;
		sine[2369]=256;
		sine[2370]=512;
		sine[2371]=768;
		sine[2372]=0;
		sine[2373]=256;
		sine[2374]=512;
		sine[2375]=768;
		sine[2376]=0;
		sine[2377]=256;
		sine[2378]=512;
		sine[2379]=768;
		sine[2380]=0;
		sine[2381]=256;
		sine[2382]=512;
		sine[2383]=768;
		sine[2384]=0;
		sine[2385]=256;
		sine[2386]=512;
		sine[2387]=768;
		sine[2388]=0;
		sine[2389]=256;
		sine[2390]=512;
		sine[2391]=768;
		sine[2392]=0;
		sine[2393]=256;
		sine[2394]=512;
		sine[2395]=768;
		sine[2396]=0;
		sine[2397]=256;
		sine[2398]=512;
		sine[2399]=768;
		sine[2400]=0;
		sine[2401]=256;
		sine[2402]=512;
		sine[2403]=768;
		sine[2404]=0;
		sine[2405]=256;
		sine[2406]=512;
		sine[2407]=768;
		sine[2408]=0;
		sine[2409]=256;
		sine[2410]=512;
		sine[2411]=768;
		sine[2412]=0;
		sine[2413]=256;
		sine[2414]=512;
		sine[2415]=768;
		sine[2416]=0;
		sine[2417]=256;
		sine[2418]=512;
		sine[2419]=768;
		sine[2420]=0;
		sine[2421]=256;
		sine[2422]=512;
		sine[2423]=768;
		sine[2424]=0;
		sine[2425]=256;
		sine[2426]=512;
		sine[2427]=768;
		sine[2428]=0;
		sine[2429]=256;
		sine[2430]=512;
		sine[2431]=768;
		sine[2432]=0;
		sine[2433]=256;
		sine[2434]=512;
		sine[2435]=768;
		sine[2436]=0;
		sine[2437]=256;
		sine[2438]=512;
		sine[2439]=768;
		sine[2440]=0;
		sine[2441]=256;
		sine[2442]=512;
		sine[2443]=768;
		sine[2444]=0;
		sine[2445]=256;
		sine[2446]=512;
		sine[2447]=768;
		sine[2448]=0;
		sine[2449]=256;
		sine[2450]=512;
		sine[2451]=768;
		sine[2452]=0;
		sine[2453]=256;
		sine[2454]=512;
		sine[2455]=768;
		sine[2456]=0;
		sine[2457]=256;
		sine[2458]=512;
		sine[2459]=768;
		sine[2460]=0;
		sine[2461]=256;
		sine[2462]=512;
		sine[2463]=768;
		sine[2464]=0;
		sine[2465]=256;
		sine[2466]=512;
		sine[2467]=768;
		sine[2468]=0;
		sine[2469]=256;
		sine[2470]=512;
		sine[2471]=768;
		sine[2472]=0;
		sine[2473]=256;
		sine[2474]=512;
		sine[2475]=768;
		sine[2476]=0;
		sine[2477]=256;
		sine[2478]=512;
		sine[2479]=768;
		sine[2480]=0;
		sine[2481]=256;
		sine[2482]=512;
		sine[2483]=768;
		sine[2484]=0;
		sine[2485]=256;
		sine[2486]=512;
		sine[2487]=768;
		sine[2488]=0;
		sine[2489]=256;
		sine[2490]=512;
		sine[2491]=768;
		sine[2492]=0;
		sine[2493]=256;
		sine[2494]=512;
		sine[2495]=768;
		sine[2496]=0;
		sine[2497]=256;
		sine[2498]=512;
		sine[2499]=768;
		sine[2500]=0;
		sine[2501]=256;
		sine[2502]=512;
		sine[2503]=768;
		sine[2504]=0;
		sine[2505]=256;
		sine[2506]=512;
		sine[2507]=768;
		sine[2508]=0;
		sine[2509]=256;
		sine[2510]=512;
		sine[2511]=768;
		sine[2512]=0;
		sine[2513]=256;
		sine[2514]=512;
		sine[2515]=768;
		sine[2516]=0;
		sine[2517]=256;
		sine[2518]=512;
		sine[2519]=768;
		sine[2520]=0;
		sine[2521]=256;
		sine[2522]=512;
		sine[2523]=768;
		sine[2524]=0;
		sine[2525]=256;
		sine[2526]=512;
		sine[2527]=768;
		sine[2528]=0;
		sine[2529]=256;
		sine[2530]=512;
		sine[2531]=768;
		sine[2532]=0;
		sine[2533]=256;
		sine[2534]=512;
		sine[2535]=768;
		sine[2536]=0;
		sine[2537]=256;
		sine[2538]=512;
		sine[2539]=768;
		sine[2540]=0;
		sine[2541]=256;
		sine[2542]=512;
		sine[2543]=768;
		sine[2544]=0;
		sine[2545]=256;
		sine[2546]=512;
		sine[2547]=768;
		sine[2548]=0;
		sine[2549]=256;
		sine[2550]=512;
		sine[2551]=768;
		sine[2552]=0;
		sine[2553]=256;
		sine[2554]=512;
		sine[2555]=768;
		sine[2556]=0;
		sine[2557]=256;
		sine[2558]=512;
		sine[2559]=768;
		sine[2560]=0;
		sine[2561]=256;
		sine[2562]=512;
		sine[2563]=768;
		sine[2564]=0;
		sine[2565]=256;
		sine[2566]=512;
		sine[2567]=768;
		sine[2568]=0;
		sine[2569]=256;
		sine[2570]=512;
		sine[2571]=768;
		sine[2572]=0;
		sine[2573]=256;
		sine[2574]=512;
		sine[2575]=768;
		sine[2576]=0;
		sine[2577]=256;
		sine[2578]=512;
		sine[2579]=768;
		sine[2580]=0;
		sine[2581]=256;
		sine[2582]=512;
		sine[2583]=768;
		sine[2584]=0;
		sine[2585]=256;
		sine[2586]=512;
		sine[2587]=768;
		sine[2588]=0;
		sine[2589]=256;
		sine[2590]=512;
		sine[2591]=768;
		sine[2592]=0;
		sine[2593]=256;
		sine[2594]=512;
		sine[2595]=768;
		sine[2596]=0;
		sine[2597]=256;
		sine[2598]=512;
		sine[2599]=768;
		sine[2600]=0;
		sine[2601]=256;
		sine[2602]=512;
		sine[2603]=768;
		sine[2604]=0;
		sine[2605]=256;
		sine[2606]=512;
		sine[2607]=768;
		sine[2608]=0;
		sine[2609]=256;
		sine[2610]=512;
		sine[2611]=768;
		sine[2612]=0;
		sine[2613]=256;
		sine[2614]=512;
		sine[2615]=768;
		sine[2616]=0;
		sine[2617]=256;
		sine[2618]=512;
		sine[2619]=768;
		sine[2620]=0;
		sine[2621]=256;
		sine[2622]=512;
		sine[2623]=768;
		sine[2624]=0;
		sine[2625]=256;
		sine[2626]=512;
		sine[2627]=768;
		sine[2628]=0;
		sine[2629]=256;
		sine[2630]=512;
		sine[2631]=768;
		sine[2632]=0;
		sine[2633]=256;
		sine[2634]=512;
		sine[2635]=768;
		sine[2636]=0;
		sine[2637]=256;
		sine[2638]=512;
		sine[2639]=768;
		sine[2640]=0;
		sine[2641]=256;
		sine[2642]=512;
		sine[2643]=768;
		sine[2644]=0;
		sine[2645]=256;
		sine[2646]=512;
		sine[2647]=768;
		sine[2648]=0;
		sine[2649]=256;
		sine[2650]=512;
		sine[2651]=768;
		sine[2652]=0;
		sine[2653]=256;
		sine[2654]=512;
		sine[2655]=768;
		sine[2656]=0;
		sine[2657]=256;
		sine[2658]=512;
		sine[2659]=768;
		sine[2660]=0;
		sine[2661]=256;
		sine[2662]=512;
		sine[2663]=768;
		sine[2664]=0;
		sine[2665]=256;
		sine[2666]=512;
		sine[2667]=768;
		sine[2668]=0;
		sine[2669]=256;
		sine[2670]=512;
		sine[2671]=768;
		sine[2672]=0;
		sine[2673]=256;
		sine[2674]=512;
		sine[2675]=768;
		sine[2676]=0;
		sine[2677]=256;
		sine[2678]=512;
		sine[2679]=768;
		sine[2680]=0;
		sine[2681]=256;
		sine[2682]=512;
		sine[2683]=768;
		sine[2684]=0;
		sine[2685]=256;
		sine[2686]=512;
		sine[2687]=768;
		sine[2688]=0;
		sine[2689]=256;
		sine[2690]=512;
		sine[2691]=768;
		sine[2692]=0;
		sine[2693]=256;
		sine[2694]=512;
		sine[2695]=768;
		sine[2696]=0;
		sine[2697]=256;
		sine[2698]=512;
		sine[2699]=768;
		sine[2700]=0;
		sine[2701]=256;
		sine[2702]=512;
		sine[2703]=768;
		sine[2704]=0;
		sine[2705]=256;
		sine[2706]=512;
		sine[2707]=768;
		sine[2708]=0;
		sine[2709]=256;
		sine[2710]=512;
		sine[2711]=768;
		sine[2712]=0;
		sine[2713]=256;
		sine[2714]=512;
		sine[2715]=768;
		sine[2716]=0;
		sine[2717]=256;
		sine[2718]=512;
		sine[2719]=768;
		sine[2720]=0;
		sine[2721]=256;
		sine[2722]=512;
		sine[2723]=768;
		sine[2724]=0;
		sine[2725]=256;
		sine[2726]=512;
		sine[2727]=768;
		sine[2728]=0;
		sine[2729]=256;
		sine[2730]=512;
		sine[2731]=768;
		sine[2732]=0;
		sine[2733]=256;
		sine[2734]=512;
		sine[2735]=768;
		sine[2736]=0;
		sine[2737]=256;
		sine[2738]=512;
		sine[2739]=768;
		sine[2740]=0;
		sine[2741]=256;
		sine[2742]=512;
		sine[2743]=768;
		sine[2744]=0;
		sine[2745]=256;
		sine[2746]=512;
		sine[2747]=768;
		sine[2748]=0;
		sine[2749]=256;
		sine[2750]=512;
		sine[2751]=768;
		sine[2752]=0;
		sine[2753]=256;
		sine[2754]=512;
		sine[2755]=768;
		sine[2756]=0;
		sine[2757]=256;
		sine[2758]=512;
		sine[2759]=768;
		sine[2760]=0;
		sine[2761]=256;
		sine[2762]=512;
		sine[2763]=768;
		sine[2764]=0;
		sine[2765]=256;
		sine[2766]=512;
		sine[2767]=768;
		sine[2768]=0;
		sine[2769]=256;
		sine[2770]=512;
		sine[2771]=768;
		sine[2772]=0;
		sine[2773]=256;
		sine[2774]=512;
		sine[2775]=768;
		sine[2776]=0;
		sine[2777]=256;
		sine[2778]=512;
		sine[2779]=768;
		sine[2780]=0;
		sine[2781]=256;
		sine[2782]=512;
		sine[2783]=768;
		sine[2784]=0;
		sine[2785]=256;
		sine[2786]=512;
		sine[2787]=768;
		sine[2788]=0;
		sine[2789]=256;
		sine[2790]=512;
		sine[2791]=768;
		sine[2792]=0;
		sine[2793]=256;
		sine[2794]=512;
		sine[2795]=768;
		sine[2796]=0;
		sine[2797]=256;
		sine[2798]=512;
		sine[2799]=768;
		sine[2800]=0;
		sine[2801]=256;
		sine[2802]=512;
		sine[2803]=768;
		sine[2804]=0;
		sine[2805]=256;
		sine[2806]=512;
		sine[2807]=768;
		sine[2808]=0;
		sine[2809]=256;
		sine[2810]=512;
		sine[2811]=768;
		sine[2812]=0;
		sine[2813]=256;
		sine[2814]=512;
		sine[2815]=768;
		sine[2816]=0;
		sine[2817]=256;
		sine[2818]=512;
		sine[2819]=768;
		sine[2820]=0;
		sine[2821]=256;
		sine[2822]=512;
		sine[2823]=768;
		sine[2824]=0;
		sine[2825]=256;
		sine[2826]=512;
		sine[2827]=768;
		sine[2828]=0;
		sine[2829]=256;
		sine[2830]=512;
		sine[2831]=768;
		sine[2832]=0;
		sine[2833]=256;
		sine[2834]=512;
		sine[2835]=768;
		sine[2836]=0;
		sine[2837]=256;
		sine[2838]=512;
		sine[2839]=768;
		sine[2840]=0;
		sine[2841]=256;
		sine[2842]=512;
		sine[2843]=768;
		sine[2844]=0;
		sine[2845]=256;
		sine[2846]=512;
		sine[2847]=768;
		sine[2848]=0;
		sine[2849]=256;
		sine[2850]=512;
		sine[2851]=768;
		sine[2852]=0;
		sine[2853]=256;
		sine[2854]=512;
		sine[2855]=768;
		sine[2856]=0;
		sine[2857]=256;
		sine[2858]=512;
		sine[2859]=768;
		sine[2860]=0;
		sine[2861]=256;
		sine[2862]=512;
		sine[2863]=768;
		sine[2864]=0;
		sine[2865]=256;
		sine[2866]=512;
		sine[2867]=768;
		sine[2868]=0;
		sine[2869]=256;
		sine[2870]=512;
		sine[2871]=768;
		sine[2872]=0;
		sine[2873]=256;
		sine[2874]=512;
		sine[2875]=768;
		sine[2876]=0;
		sine[2877]=256;
		sine[2878]=512;
		sine[2879]=768;
		sine[2880]=0;
		sine[2881]=256;
		sine[2882]=512;
		sine[2883]=768;
		sine[2884]=0;
		sine[2885]=256;
		sine[2886]=512;
		sine[2887]=768;
		sine[2888]=0;
		sine[2889]=256;
		sine[2890]=512;
		sine[2891]=768;
		sine[2892]=0;
		sine[2893]=256;
		sine[2894]=512;
		sine[2895]=768;
		sine[2896]=0;
		sine[2897]=256;
		sine[2898]=512;
		sine[2899]=768;
		sine[2900]=0;
		sine[2901]=256;
		sine[2902]=512;
		sine[2903]=768;
		sine[2904]=0;
		sine[2905]=256;
		sine[2906]=512;
		sine[2907]=768;
		sine[2908]=0;
		sine[2909]=256;
		sine[2910]=512;
		sine[2911]=768;
		sine[2912]=0;
		sine[2913]=256;
		sine[2914]=512;
		sine[2915]=768;
		sine[2916]=0;
		sine[2917]=256;
		sine[2918]=512;
		sine[2919]=768;
		sine[2920]=0;
		sine[2921]=256;
		sine[2922]=512;
		sine[2923]=768;
		sine[2924]=0;
		sine[2925]=256;
		sine[2926]=512;
		sine[2927]=768;
		sine[2928]=0;
		sine[2929]=256;
		sine[2930]=512;
		sine[2931]=768;
		sine[2932]=0;
		sine[2933]=256;
		sine[2934]=512;
		sine[2935]=768;
		sine[2936]=0;
		sine[2937]=256;
		sine[2938]=512;
		sine[2939]=768;
		sine[2940]=0;
		sine[2941]=256;
		sine[2942]=512;
		sine[2943]=768;
		sine[2944]=0;
		sine[2945]=256;
		sine[2946]=512;
		sine[2947]=768;
		sine[2948]=0;
		sine[2949]=256;
		sine[2950]=512;
		sine[2951]=768;
		sine[2952]=0;
		sine[2953]=256;
		sine[2954]=512;
		sine[2955]=768;
		sine[2956]=0;
		sine[2957]=256;
		sine[2958]=512;
		sine[2959]=768;
		sine[2960]=0;
		sine[2961]=256;
		sine[2962]=512;
		sine[2963]=768;
		sine[2964]=0;
		sine[2965]=256;
		sine[2966]=512;
		sine[2967]=768;
		sine[2968]=0;
		sine[2969]=256;
		sine[2970]=512;
		sine[2971]=768;
		sine[2972]=0;
		sine[2973]=256;
		sine[2974]=512;
		sine[2975]=768;
		sine[2976]=0;
		sine[2977]=256;
		sine[2978]=512;
		sine[2979]=768;
		sine[2980]=0;
		sine[2981]=256;
		sine[2982]=512;
		sine[2983]=768;
		sine[2984]=0;
		sine[2985]=256;
		sine[2986]=512;
		sine[2987]=768;
		sine[2988]=0;
		sine[2989]=256;
		sine[2990]=512;
		sine[2991]=768;
		sine[2992]=0;
		sine[2993]=256;
		sine[2994]=512;
		sine[2995]=768;
		sine[2996]=0;
		sine[2997]=256;
		sine[2998]=512;
		sine[2999]=768;
		sine[3000]=0;
		sine[3001]=256;
		sine[3002]=512;
		sine[3003]=768;
		sine[3004]=0;
		sine[3005]=256;
		sine[3006]=512;
		sine[3007]=768;
		sine[3008]=0;
		sine[3009]=256;
		sine[3010]=512;
		sine[3011]=768;
		sine[3012]=0;
		sine[3013]=256;
		sine[3014]=512;
		sine[3015]=768;
		sine[3016]=0;
		sine[3017]=256;
		sine[3018]=512;
		sine[3019]=768;
		sine[3020]=0;
		sine[3021]=256;
		sine[3022]=512;
		sine[3023]=768;
		sine[3024]=0;
		sine[3025]=256;
		sine[3026]=512;
		sine[3027]=768;
		sine[3028]=0;
		sine[3029]=256;
		sine[3030]=512;
		sine[3031]=768;
		sine[3032]=0;
		sine[3033]=256;
		sine[3034]=512;
		sine[3035]=768;
		sine[3036]=0;
		sine[3037]=256;
		sine[3038]=512;
		sine[3039]=768;
		sine[3040]=0;
		sine[3041]=256;
		sine[3042]=512;
		sine[3043]=768;
		sine[3044]=0;
		sine[3045]=256;
		sine[3046]=512;
		sine[3047]=768;
		sine[3048]=0;
		sine[3049]=256;
		sine[3050]=512;
		sine[3051]=768;
		sine[3052]=0;
		sine[3053]=256;
		sine[3054]=512;
		sine[3055]=768;
		sine[3056]=0;
		sine[3057]=256;
		sine[3058]=512;
		sine[3059]=768;
		sine[3060]=0;
		sine[3061]=256;
		sine[3062]=512;
		sine[3063]=768;
		sine[3064]=0;
		sine[3065]=256;
		sine[3066]=512;
		sine[3067]=768;
		sine[3068]=0;
		sine[3069]=256;
		sine[3070]=512;
		sine[3071]=768;
		sine[3072]=0;
		sine[3073]=256;
		sine[3074]=512;
		sine[3075]=768;
		sine[3076]=0;
		sine[3077]=256;
		sine[3078]=512;
		sine[3079]=768;
		sine[3080]=0;
		sine[3081]=256;
		sine[3082]=512;
		sine[3083]=768;
		sine[3084]=0;
		sine[3085]=256;
		sine[3086]=512;
		sine[3087]=768;
		sine[3088]=0;
		sine[3089]=256;
		sine[3090]=512;
		sine[3091]=768;
		sine[3092]=0;
		sine[3093]=256;
		sine[3094]=512;
		sine[3095]=768;
		sine[3096]=0;
		sine[3097]=256;
		sine[3098]=512;
		sine[3099]=768;
		sine[3100]=0;
		sine[3101]=256;
		sine[3102]=512;
		sine[3103]=768;
		sine[3104]=0;
		sine[3105]=256;
		sine[3106]=512;
		sine[3107]=768;
		sine[3108]=0;
		sine[3109]=256;
		sine[3110]=512;
		sine[3111]=768;
		sine[3112]=0;
		sine[3113]=256;
		sine[3114]=512;
		sine[3115]=768;
		sine[3116]=0;
		sine[3117]=256;
		sine[3118]=512;
		sine[3119]=768;
		sine[3120]=0;
		sine[3121]=256;
		sine[3122]=512;
		sine[3123]=768;
		sine[3124]=0;
		sine[3125]=256;
		sine[3126]=512;
		sine[3127]=768;
		sine[3128]=0;
		sine[3129]=256;
		sine[3130]=512;
		sine[3131]=768;
		sine[3132]=0;
		sine[3133]=256;
		sine[3134]=512;
		sine[3135]=768;
		sine[3136]=0;
		sine[3137]=256;
		sine[3138]=512;
		sine[3139]=768;
		sine[3140]=0;
		sine[3141]=256;
		sine[3142]=512;
		sine[3143]=768;
		sine[3144]=0;
		sine[3145]=256;
		sine[3146]=512;
		sine[3147]=768;
		sine[3148]=0;
		sine[3149]=256;
		sine[3150]=512;
		sine[3151]=768;
		sine[3152]=0;
		sine[3153]=256;
		sine[3154]=512;
		sine[3155]=768;
		sine[3156]=0;
		sine[3157]=256;
		sine[3158]=512;
		sine[3159]=768;
		sine[3160]=0;
		sine[3161]=256;
		sine[3162]=512;
		sine[3163]=768;
		sine[3164]=0;
		sine[3165]=256;
		sine[3166]=512;
		sine[3167]=768;
		sine[3168]=0;
		sine[3169]=256;
		sine[3170]=512;
		sine[3171]=768;
		sine[3172]=0;
		sine[3173]=256;
		sine[3174]=512;
		sine[3175]=768;
		sine[3176]=0;
		sine[3177]=256;
		sine[3178]=512;
		sine[3179]=768;
		sine[3180]=0;
		sine[3181]=256;
		sine[3182]=512;
		sine[3183]=768;
		sine[3184]=0;
		sine[3185]=256;
		sine[3186]=512;
		sine[3187]=768;
		sine[3188]=0;
		sine[3189]=256;
		sine[3190]=512;
		sine[3191]=768;
		sine[3192]=0;
		sine[3193]=256;
		sine[3194]=512;
		sine[3195]=768;
		sine[3196]=0;
		sine[3197]=256;
		sine[3198]=512;
		sine[3199]=768;
		sine[3200]=0;
		sine[3201]=256;
		sine[3202]=512;
		sine[3203]=768;
		sine[3204]=0;
		sine[3205]=256;
		sine[3206]=512;
		sine[3207]=768;
		sine[3208]=0;
		sine[3209]=256;
		sine[3210]=512;
		sine[3211]=768;
		sine[3212]=0;
		sine[3213]=256;
		sine[3214]=512;
		sine[3215]=768;
		sine[3216]=0;
		sine[3217]=256;
		sine[3218]=512;
		sine[3219]=768;
		sine[3220]=0;
		sine[3221]=256;
		sine[3222]=512;
		sine[3223]=768;
		sine[3224]=0;
		sine[3225]=256;
		sine[3226]=512;
		sine[3227]=768;
		sine[3228]=0;
		sine[3229]=256;
		sine[3230]=512;
		sine[3231]=768;
		sine[3232]=0;
		sine[3233]=256;
		sine[3234]=512;
		sine[3235]=768;
		sine[3236]=0;
		sine[3237]=256;
		sine[3238]=512;
		sine[3239]=768;
		sine[3240]=0;
		sine[3241]=256;
		sine[3242]=512;
		sine[3243]=768;
		sine[3244]=0;
		sine[3245]=256;
		sine[3246]=512;
		sine[3247]=768;
		sine[3248]=0;
		sine[3249]=256;
		sine[3250]=512;
		sine[3251]=768;
		sine[3252]=0;
		sine[3253]=256;
		sine[3254]=512;
		sine[3255]=768;
		sine[3256]=0;
		sine[3257]=256;
		sine[3258]=512;
		sine[3259]=768;
		sine[3260]=0;
		sine[3261]=256;
		sine[3262]=512;
		sine[3263]=768;
		sine[3264]=0;
		sine[3265]=256;
		sine[3266]=512;
		sine[3267]=768;
		sine[3268]=0;
		sine[3269]=256;
		sine[3270]=512;
		sine[3271]=768;
		sine[3272]=0;
		sine[3273]=256;
		sine[3274]=512;
		sine[3275]=768;
		sine[3276]=0;
		sine[3277]=256;
		sine[3278]=512;
		sine[3279]=768;
		sine[3280]=0;
		sine[3281]=256;
		sine[3282]=512;
		sine[3283]=768;
		sine[3284]=0;
		sine[3285]=256;
		sine[3286]=512;
		sine[3287]=768;
		sine[3288]=0;
		sine[3289]=256;
		sine[3290]=512;
		sine[3291]=768;
		sine[3292]=0;
		sine[3293]=256;
		sine[3294]=512;
		sine[3295]=768;
		sine[3296]=0;
		sine[3297]=256;
		sine[3298]=512;
		sine[3299]=768;
		sine[3300]=0;
		sine[3301]=256;
		sine[3302]=512;
		sine[3303]=768;
		sine[3304]=0;
		sine[3305]=256;
		sine[3306]=512;
		sine[3307]=768;
		sine[3308]=0;
		sine[3309]=256;
		sine[3310]=512;
		sine[3311]=768;
		sine[3312]=0;
		sine[3313]=256;
		sine[3314]=512;
		sine[3315]=768;
		sine[3316]=0;
		sine[3317]=256;
		sine[3318]=512;
		sine[3319]=768;
		sine[3320]=0;
		sine[3321]=256;
		sine[3322]=512;
		sine[3323]=768;
		sine[3324]=0;
		sine[3325]=256;
		sine[3326]=512;
		sine[3327]=768;
		sine[3328]=0;
		sine[3329]=256;
		sine[3330]=512;
		sine[3331]=768;
		sine[3332]=0;
		sine[3333]=256;
		sine[3334]=512;
		sine[3335]=768;
		sine[3336]=0;
		sine[3337]=256;
		sine[3338]=512;
		sine[3339]=768;
		sine[3340]=0;
		sine[3341]=256;
		sine[3342]=512;
		sine[3343]=768;
		sine[3344]=0;
		sine[3345]=256;
		sine[3346]=512;
		sine[3347]=768;
		sine[3348]=0;
		sine[3349]=256;
		sine[3350]=512;
		sine[3351]=768;
		sine[3352]=0;
		sine[3353]=256;
		sine[3354]=512;
		sine[3355]=768;
		sine[3356]=0;
		sine[3357]=256;
		sine[3358]=512;
		sine[3359]=768;
		sine[3360]=0;
		sine[3361]=256;
		sine[3362]=512;
		sine[3363]=768;
		sine[3364]=0;
		sine[3365]=256;
		sine[3366]=512;
		sine[3367]=768;
		sine[3368]=0;
		sine[3369]=256;
		sine[3370]=512;
		sine[3371]=768;
		sine[3372]=0;
		sine[3373]=256;
		sine[3374]=512;
		sine[3375]=768;
		sine[3376]=0;
		sine[3377]=256;
		sine[3378]=512;
		sine[3379]=768;
		sine[3380]=0;
		sine[3381]=256;
		sine[3382]=512;
		sine[3383]=768;
		sine[3384]=0;
		sine[3385]=256;
		sine[3386]=512;
		sine[3387]=768;
		sine[3388]=0;
		sine[3389]=256;
		sine[3390]=512;
		sine[3391]=768;
		sine[3392]=0;
		sine[3393]=256;
		sine[3394]=512;
		sine[3395]=768;
		sine[3396]=0;
		sine[3397]=256;
		sine[3398]=512;
		sine[3399]=768;
		sine[3400]=0;
		sine[3401]=256;
		sine[3402]=512;
		sine[3403]=768;
		sine[3404]=0;
		sine[3405]=256;
		sine[3406]=512;
		sine[3407]=768;
		sine[3408]=0;
		sine[3409]=256;
		sine[3410]=512;
		sine[3411]=768;
		sine[3412]=0;
		sine[3413]=256;
		sine[3414]=512;
		sine[3415]=768;
		sine[3416]=0;
		sine[3417]=256;
		sine[3418]=512;
		sine[3419]=768;
		sine[3420]=0;
		sine[3421]=256;
		sine[3422]=512;
		sine[3423]=768;
		sine[3424]=0;
		sine[3425]=256;
		sine[3426]=512;
		sine[3427]=768;
		sine[3428]=0;
		sine[3429]=256;
		sine[3430]=512;
		sine[3431]=768;
		sine[3432]=0;
		sine[3433]=256;
		sine[3434]=512;
		sine[3435]=768;
		sine[3436]=0;
		sine[3437]=256;
		sine[3438]=512;
		sine[3439]=768;
		sine[3440]=0;
		sine[3441]=256;
		sine[3442]=512;
		sine[3443]=768;
		sine[3444]=0;
		sine[3445]=256;
		sine[3446]=512;
		sine[3447]=768;
		sine[3448]=0;
		sine[3449]=256;
		sine[3450]=512;
		sine[3451]=768;
		sine[3452]=0;
		sine[3453]=256;
		sine[3454]=512;
		sine[3455]=768;
		sine[3456]=0;
		sine[3457]=256;
		sine[3458]=512;
		sine[3459]=768;
		sine[3460]=0;
		sine[3461]=256;
		sine[3462]=512;
		sine[3463]=768;
		sine[3464]=0;
		sine[3465]=256;
		sine[3466]=512;
		sine[3467]=768;
		sine[3468]=0;
		sine[3469]=256;
		sine[3470]=512;
		sine[3471]=768;
		sine[3472]=0;
		sine[3473]=256;
		sine[3474]=512;
		sine[3475]=768;
		sine[3476]=0;
		sine[3477]=256;
		sine[3478]=512;
		sine[3479]=768;
		sine[3480]=0;
		sine[3481]=256;
		sine[3482]=512;
		sine[3483]=768;
		sine[3484]=0;
		sine[3485]=256;
		sine[3486]=512;
		sine[3487]=768;
		sine[3488]=0;
		sine[3489]=256;
		sine[3490]=512;
		sine[3491]=768;
		sine[3492]=0;
		sine[3493]=256;
		sine[3494]=512;
		sine[3495]=768;
		sine[3496]=0;
		sine[3497]=256;
		sine[3498]=512;
		sine[3499]=768;
		sine[3500]=0;
		sine[3501]=256;
		sine[3502]=512;
		sine[3503]=768;
		sine[3504]=0;
		sine[3505]=256;
		sine[3506]=512;
		sine[3507]=768;
		sine[3508]=0;
		sine[3509]=256;
		sine[3510]=512;
		sine[3511]=768;
		sine[3512]=0;
		sine[3513]=256;
		sine[3514]=512;
		sine[3515]=768;
		sine[3516]=0;
		sine[3517]=256;
		sine[3518]=512;
		sine[3519]=768;
		sine[3520]=0;
		sine[3521]=256;
		sine[3522]=512;
		sine[3523]=768;
		sine[3524]=0;
		sine[3525]=256;
		sine[3526]=512;
		sine[3527]=768;
		sine[3528]=0;
		sine[3529]=256;
		sine[3530]=512;
		sine[3531]=768;
		sine[3532]=0;
		sine[3533]=256;
		sine[3534]=512;
		sine[3535]=768;
		sine[3536]=0;
		sine[3537]=256;
		sine[3538]=512;
		sine[3539]=768;
		sine[3540]=0;
		sine[3541]=256;
		sine[3542]=512;
		sine[3543]=768;
		sine[3544]=0;
		sine[3545]=256;
		sine[3546]=512;
		sine[3547]=768;
		sine[3548]=0;
		sine[3549]=256;
		sine[3550]=512;
		sine[3551]=768;
		sine[3552]=0;
		sine[3553]=256;
		sine[3554]=512;
		sine[3555]=768;
		sine[3556]=0;
		sine[3557]=256;
		sine[3558]=512;
		sine[3559]=768;
		sine[3560]=0;
		sine[3561]=256;
		sine[3562]=512;
		sine[3563]=768;
		sine[3564]=0;
		sine[3565]=256;
		sine[3566]=512;
		sine[3567]=768;
		sine[3568]=0;
		sine[3569]=256;
		sine[3570]=512;
		sine[3571]=768;
		sine[3572]=0;
		sine[3573]=256;
		sine[3574]=512;
		sine[3575]=768;
		sine[3576]=0;
		sine[3577]=256;
		sine[3578]=512;
		sine[3579]=768;
		sine[3580]=0;
		sine[3581]=256;
		sine[3582]=512;
		sine[3583]=768;
		sine[3584]=0;
		sine[3585]=256;
		sine[3586]=512;
		sine[3587]=768;
		sine[3588]=0;
		sine[3589]=256;
		sine[3590]=512;
		sine[3591]=768;
		sine[3592]=0;
		sine[3593]=256;
		sine[3594]=512;
		sine[3595]=768;
		sine[3596]=0;
		sine[3597]=256;
		sine[3598]=512;
		sine[3599]=768;
		sine[3600]=0;
		sine[3601]=256;
		sine[3602]=512;
		sine[3603]=768;
		sine[3604]=0;
		sine[3605]=256;
		sine[3606]=512;
		sine[3607]=768;
		sine[3608]=0;
		sine[3609]=256;
		sine[3610]=512;
		sine[3611]=768;
		sine[3612]=0;
		sine[3613]=256;
		sine[3614]=512;
		sine[3615]=768;
		sine[3616]=0;
		sine[3617]=256;
		sine[3618]=512;
		sine[3619]=768;
		sine[3620]=0;
		sine[3621]=256;
		sine[3622]=512;
		sine[3623]=768;
		sine[3624]=0;
		sine[3625]=256;
		sine[3626]=512;
		sine[3627]=768;
		sine[3628]=0;
		sine[3629]=256;
		sine[3630]=512;
		sine[3631]=768;
		sine[3632]=0;
		sine[3633]=256;
		sine[3634]=512;
		sine[3635]=768;
		sine[3636]=0;
		sine[3637]=256;
		sine[3638]=512;
		sine[3639]=768;
		sine[3640]=0;
		sine[3641]=256;
		sine[3642]=512;
		sine[3643]=768;
		sine[3644]=0;
		sine[3645]=256;
		sine[3646]=512;
		sine[3647]=768;
		sine[3648]=0;
		sine[3649]=256;
		sine[3650]=512;
		sine[3651]=768;
		sine[3652]=0;
		sine[3653]=256;
		sine[3654]=512;
		sine[3655]=768;
		sine[3656]=0;
		sine[3657]=256;
		sine[3658]=512;
		sine[3659]=768;
		sine[3660]=0;
		sine[3661]=256;
		sine[3662]=512;
		sine[3663]=768;
		sine[3664]=0;
		sine[3665]=256;
		sine[3666]=512;
		sine[3667]=768;
		sine[3668]=0;
		sine[3669]=256;
		sine[3670]=512;
		sine[3671]=768;
		sine[3672]=0;
		sine[3673]=256;
		sine[3674]=512;
		sine[3675]=768;
		sine[3676]=0;
		sine[3677]=256;
		sine[3678]=512;
		sine[3679]=768;
		sine[3680]=0;
		sine[3681]=256;
		sine[3682]=512;
		sine[3683]=768;
		sine[3684]=0;
		sine[3685]=256;
		sine[3686]=512;
		sine[3687]=768;
		sine[3688]=0;
		sine[3689]=256;
		sine[3690]=512;
		sine[3691]=768;
		sine[3692]=0;
		sine[3693]=256;
		sine[3694]=512;
		sine[3695]=768;
		sine[3696]=0;
		sine[3697]=256;
		sine[3698]=512;
		sine[3699]=768;
		sine[3700]=0;
		sine[3701]=256;
		sine[3702]=512;
		sine[3703]=768;
		sine[3704]=0;
		sine[3705]=256;
		sine[3706]=512;
		sine[3707]=768;
		sine[3708]=0;
		sine[3709]=256;
		sine[3710]=512;
		sine[3711]=768;
		sine[3712]=0;
		sine[3713]=256;
		sine[3714]=512;
		sine[3715]=768;
		sine[3716]=0;
		sine[3717]=256;
		sine[3718]=512;
		sine[3719]=768;
		sine[3720]=0;
		sine[3721]=256;
		sine[3722]=512;
		sine[3723]=768;
		sine[3724]=0;
		sine[3725]=256;
		sine[3726]=512;
		sine[3727]=768;
		sine[3728]=0;
		sine[3729]=256;
		sine[3730]=512;
		sine[3731]=768;
		sine[3732]=0;
		sine[3733]=256;
		sine[3734]=512;
		sine[3735]=768;
		sine[3736]=0;
		sine[3737]=256;
		sine[3738]=512;
		sine[3739]=768;
		sine[3740]=0;
		sine[3741]=256;
		sine[3742]=512;
		sine[3743]=768;
		sine[3744]=0;
		sine[3745]=256;
		sine[3746]=512;
		sine[3747]=768;
		sine[3748]=0;
		sine[3749]=256;
		sine[3750]=512;
		sine[3751]=768;
		sine[3752]=0;
		sine[3753]=256;
		sine[3754]=512;
		sine[3755]=768;
		sine[3756]=0;
		sine[3757]=256;
		sine[3758]=512;
		sine[3759]=768;
		sine[3760]=0;
		sine[3761]=256;
		sine[3762]=512;
		sine[3763]=768;
		sine[3764]=0;
		sine[3765]=256;
		sine[3766]=512;
		sine[3767]=768;
		sine[3768]=0;
		sine[3769]=256;
		sine[3770]=512;
		sine[3771]=768;
		sine[3772]=0;
		sine[3773]=256;
		sine[3774]=512;
		sine[3775]=768;
		sine[3776]=0;
		sine[3777]=256;
		sine[3778]=512;
		sine[3779]=768;
		sine[3780]=0;
		sine[3781]=256;
		sine[3782]=512;
		sine[3783]=768;
		sine[3784]=0;
		sine[3785]=256;
		sine[3786]=512;
		sine[3787]=768;
		sine[3788]=0;
		sine[3789]=256;
		sine[3790]=512;
		sine[3791]=768;
		sine[3792]=0;
		sine[3793]=256;
		sine[3794]=512;
		sine[3795]=768;
		sine[3796]=0;
		sine[3797]=256;
		sine[3798]=512;
		sine[3799]=768;
		sine[3800]=0;
		sine[3801]=256;
		sine[3802]=512;
		sine[3803]=768;
		sine[3804]=0;
		sine[3805]=256;
		sine[3806]=512;
		sine[3807]=768;
		sine[3808]=0;
		sine[3809]=256;
		sine[3810]=512;
		sine[3811]=768;
		sine[3812]=0;
		sine[3813]=256;
		sine[3814]=512;
		sine[3815]=768;
		sine[3816]=0;
		sine[3817]=256;
		sine[3818]=512;
		sine[3819]=768;
		sine[3820]=0;
		sine[3821]=256;
		sine[3822]=512;
		sine[3823]=768;
		sine[3824]=0;
		sine[3825]=256;
		sine[3826]=512;
		sine[3827]=768;
		sine[3828]=0;
		sine[3829]=256;
		sine[3830]=512;
		sine[3831]=768;
		sine[3832]=0;
		sine[3833]=256;
		sine[3834]=512;
		sine[3835]=768;
		sine[3836]=0;
		sine[3837]=256;
		sine[3838]=512;
		sine[3839]=768;
		sine[3840]=0;
		sine[3841]=256;
		sine[3842]=512;
		sine[3843]=768;
		sine[3844]=0;
		sine[3845]=256;
		sine[3846]=512;
		sine[3847]=768;
		sine[3848]=0;
		sine[3849]=256;
		sine[3850]=512;
		sine[3851]=768;
		sine[3852]=0;
		sine[3853]=256;
		sine[3854]=512;
		sine[3855]=768;
		sine[3856]=0;
		sine[3857]=256;
		sine[3858]=512;
		sine[3859]=768;
		sine[3860]=0;
		sine[3861]=256;
		sine[3862]=512;
		sine[3863]=768;
		sine[3864]=0;
		sine[3865]=256;
		sine[3866]=512;
		sine[3867]=768;
		sine[3868]=0;
		sine[3869]=256;
		sine[3870]=512;
		sine[3871]=768;
		sine[3872]=0;
		sine[3873]=256;
		sine[3874]=512;
		sine[3875]=768;
		sine[3876]=0;
		sine[3877]=256;
		sine[3878]=512;
		sine[3879]=768;
		sine[3880]=0;
		sine[3881]=256;
		sine[3882]=512;
		sine[3883]=768;
		sine[3884]=0;
		sine[3885]=256;
		sine[3886]=512;
		sine[3887]=768;
		sine[3888]=0;
		sine[3889]=256;
		sine[3890]=512;
		sine[3891]=768;
		sine[3892]=0;
		sine[3893]=256;
		sine[3894]=512;
		sine[3895]=768;
		sine[3896]=0;
		sine[3897]=256;
		sine[3898]=512;
		sine[3899]=768;
		sine[3900]=0;
		sine[3901]=256;
		sine[3902]=512;
		sine[3903]=768;
		sine[3904]=0;
		sine[3905]=256;
		sine[3906]=512;
		sine[3907]=768;
		sine[3908]=0;
		sine[3909]=256;
		sine[3910]=512;
		sine[3911]=768;
		sine[3912]=0;
		sine[3913]=256;
		sine[3914]=512;
		sine[3915]=768;
		sine[3916]=0;
		sine[3917]=256;
		sine[3918]=512;
		sine[3919]=768;
		sine[3920]=0;
		sine[3921]=256;
		sine[3922]=512;
		sine[3923]=768;
		sine[3924]=0;
		sine[3925]=256;
		sine[3926]=512;
		sine[3927]=768;
		sine[3928]=0;
		sine[3929]=256;
		sine[3930]=512;
		sine[3931]=768;
		sine[3932]=0;
		sine[3933]=256;
		sine[3934]=512;
		sine[3935]=768;
		sine[3936]=0;
		sine[3937]=256;
		sine[3938]=512;
		sine[3939]=768;
		sine[3940]=0;
		sine[3941]=256;
		sine[3942]=512;
		sine[3943]=768;
		sine[3944]=0;
		sine[3945]=256;
		sine[3946]=512;
		sine[3947]=768;
		sine[3948]=0;
		sine[3949]=256;
		sine[3950]=512;
		sine[3951]=768;
		sine[3952]=0;
		sine[3953]=256;
		sine[3954]=512;
		sine[3955]=768;
		sine[3956]=0;
		sine[3957]=256;
		sine[3958]=512;
		sine[3959]=768;
		sine[3960]=0;
		sine[3961]=256;
		sine[3962]=512;
		sine[3963]=768;
		sine[3964]=0;
		sine[3965]=256;
		sine[3966]=512;
		sine[3967]=768;
		sine[3968]=0;
		sine[3969]=256;
		sine[3970]=512;
		sine[3971]=768;
		sine[3972]=0;
		sine[3973]=256;
		sine[3974]=512;
		sine[3975]=768;
		sine[3976]=0;
		sine[3977]=256;
		sine[3978]=512;
		sine[3979]=768;
		sine[3980]=0;
		sine[3981]=256;
		sine[3982]=512;
		sine[3983]=768;
		sine[3984]=0;
		sine[3985]=256;
		sine[3986]=512;
		sine[3987]=768;
		sine[3988]=0;
		sine[3989]=256;
		sine[3990]=512;
		sine[3991]=768;
		sine[3992]=0;
		sine[3993]=256;
		sine[3994]=512;
		sine[3995]=768;
		sine[3996]=0;
		sine[3997]=256;
		sine[3998]=512;
		sine[3999]=768;
		sine[4000]=0;
		sine[4001]=256;
		sine[4002]=512;
		sine[4003]=768;
		sine[4004]=0;
		sine[4005]=256;
		sine[4006]=512;
		sine[4007]=768;
		sine[4008]=0;
		sine[4009]=256;
		sine[4010]=512;
		sine[4011]=768;
		sine[4012]=0;
		sine[4013]=256;
		sine[4014]=512;
		sine[4015]=768;
		sine[4016]=0;
		sine[4017]=256;
		sine[4018]=512;
		sine[4019]=768;
		sine[4020]=0;
		sine[4021]=256;
		sine[4022]=512;
		sine[4023]=768;
		sine[4024]=0;
		sine[4025]=256;
		sine[4026]=512;
		sine[4027]=768;
		sine[4028]=0;
		sine[4029]=256;
		sine[4030]=512;
		sine[4031]=768;
		sine[4032]=0;
		sine[4033]=256;
		sine[4034]=512;
		sine[4035]=768;
		sine[4036]=0;
		sine[4037]=256;
		sine[4038]=512;
		sine[4039]=768;
		sine[4040]=0;
		sine[4041]=256;
		sine[4042]=512;
		sine[4043]=768;
		sine[4044]=0;
		sine[4045]=256;
		sine[4046]=512;
		sine[4047]=768;
		sine[4048]=0;
		sine[4049]=256;
		sine[4050]=512;
		sine[4051]=768;
		sine[4052]=0;
		sine[4053]=256;
		sine[4054]=512;
		sine[4055]=768;
		sine[4056]=0;
		sine[4057]=256;
		sine[4058]=512;
		sine[4059]=768;
		sine[4060]=0;
		sine[4061]=256;
		sine[4062]=512;
		sine[4063]=768;
		sine[4064]=0;
		sine[4065]=256;
		sine[4066]=512;
		sine[4067]=768;
		sine[4068]=0;
		sine[4069]=256;
		sine[4070]=512;
		sine[4071]=768;
		sine[4072]=0;
		sine[4073]=256;
		sine[4074]=512;
		sine[4075]=768;
		sine[4076]=0;
		sine[4077]=256;
		sine[4078]=512;
		sine[4079]=768;
		sine[4080]=0;
		sine[4081]=256;
		sine[4082]=512;
		sine[4083]=768;
		sine[4084]=0;
		sine[4085]=256;
		sine[4086]=512;
		sine[4087]=768;
		sine[4088]=0;
		sine[4089]=256;
		sine[4090]=512;
		sine[4091]=768;
		sine[4092]=0;
		sine[4093]=256;
		sine[4094]=512;
		sine[4095]=768;
*/
/*
		//250Hz samples
		sine[0] = 0x800;
		sine[1] = 0x803;
		sine[2] = 0x806;
		sine[3] = 0x809;
		sine[4] = 0x80c;
		sine[5] = 0x80f;
		sine[6] = 0x812;
		sine[7] = 0x815;
		sine[8] = 0x819;
		sine[9] = 0x81c;
		sine[10] = 0x81f;
		sine[11] = 0x822;
		sine[12] = 0x825;
		sine[13] = 0x828;
		sine[14] = 0x82b;
		sine[15] = 0x82f;
		sine[16] = 0x832;
		sine[17] = 0x835;
		sine[18] = 0x838;
		sine[19] = 0x83b;
		sine[20] = 0x83e;
		sine[21] = 0x841;
		sine[22] = 0x845;
		sine[23] = 0x848;
		sine[24] = 0x84b;
		sine[25] = 0x84e;
		sine[26] = 0x851;
		sine[27] = 0x854;
		sine[28] = 0x857;
		sine[29] = 0x85b;
		sine[30] = 0x85e;
		sine[31] = 0x861;
		sine[32] = 0x864;
		sine[33] = 0x867;
		sine[34] = 0x86a;
		sine[35] = 0x86d;
		sine[36] = 0x871;
		sine[37] = 0x874;
		sine[38] = 0x877;
		sine[39] = 0x87a;
		sine[40] = 0x87d;
		sine[41] = 0x880;
		sine[42] = 0x883;
		sine[43] = 0x886;
		sine[44] = 0x88a;
		sine[45] = 0x88d;
		sine[46] = 0x890;
		sine[47] = 0x893;
		sine[48] = 0x896;
		sine[49] = 0x899;
		sine[50] = 0x89c;
		sine[51] = 0x8a0;
		sine[52] = 0x8a3;
		sine[53] = 0x8a6;
		sine[54] = 0x8a9;
		sine[55] = 0x8ac;
		sine[56] = 0x8af;
		sine[57] = 0x8b2;
		sine[58] = 0x8b5;
		sine[59] = 0x8b9;
		sine[60] = 0x8bc;
		sine[61] = 0x8bf;
		sine[62] = 0x8c2;
		sine[63] = 0x8c5;
		sine[64] = 0x8c8;
		sine[65] = 0x8cb;
		sine[66] = 0x8ce;
		sine[67] = 0x8d2;
		sine[68] = 0x8d5;
		sine[69] = 0x8d8;
		sine[70] = 0x8db;
		sine[71] = 0x8de;
		sine[72] = 0x8e1;
		sine[73] = 0x8e4;
		sine[74] = 0x8e7;
		sine[75] = 0x8eb;
		sine[76] = 0x8ee;
		sine[77] = 0x8f1;
		sine[78] = 0x8f4;
		sine[79] = 0x8f7;
		sine[80] = 0x8fa;
		sine[81] = 0x8fd;
		sine[82] = 0x900;
		sine[83] = 0x903;
		sine[84] = 0x907;
		sine[85] = 0x90a;
		sine[86] = 0x90d;
		sine[87] = 0x910;
		sine[88] = 0x913;
		sine[89] = 0x916;
		sine[90] = 0x919;
		sine[91] = 0x91c;
		sine[92] = 0x91f;
		sine[93] = 0x923;
		sine[94] = 0x926;
		sine[95] = 0x929;
		sine[96] = 0x92c;
		sine[97] = 0x92f;
		sine[98] = 0x932;
		sine[99] = 0x935;
		sine[100] = 0x938;
		sine[101] = 0x93b;
		sine[102] = 0x93f;
		sine[103] = 0x942;
		sine[104] = 0x945;
		sine[105] = 0x948;
		sine[106] = 0x94b;
		sine[107] = 0x94e;
		sine[108] = 0x951;
		sine[109] = 0x954;
		sine[110] = 0x957;
		sine[111] = 0x95a;
		sine[112] = 0x95e;
		sine[113] = 0x961;
		sine[114] = 0x964;
		sine[115] = 0x967;
		sine[116] = 0x96a;
		sine[117] = 0x96d;
		sine[118] = 0x970;
		sine[119] = 0x973;
		sine[120] = 0x976;
		sine[121] = 0x979;
		sine[122] = 0x97c;
		sine[123] = 0x980;
		sine[124] = 0x983;
		sine[125] = 0x986;
		sine[126] = 0x989;
		sine[127] = 0x98c;
		sine[128] = 0x98f;
		sine[129] = 0x992;
		sine[130] = 0x995;
		sine[131] = 0x998;
		sine[132] = 0x99b;
		sine[133] = 0x99e;
		sine[134] = 0x9a1;
		sine[135] = 0x9a4;
		sine[136] = 0x9a8;
		sine[137] = 0x9ab;
		sine[138] = 0x9ae;
		sine[139] = 0x9b1;
		sine[140] = 0x9b4;
		sine[141] = 0x9b7;
		sine[142] = 0x9ba;
		sine[143] = 0x9bd;
		sine[144] = 0x9c0;
		sine[145] = 0x9c3;
		sine[146] = 0x9c6;
		sine[147] = 0x9c9;
		sine[148] = 0x9cc;
		sine[149] = 0x9cf;
		sine[150] = 0x9d2;
		sine[151] = 0x9d6;
		sine[152] = 0x9d9;
		sine[153] = 0x9dc;
		sine[154] = 0x9df;
		sine[155] = 0x9e2;
		sine[156] = 0x9e5;
		sine[157] = 0x9e8;
		sine[158] = 0x9eb;
		sine[159] = 0x9ee;
		sine[160] = 0x9f1;
		sine[161] = 0x9f4;
		sine[162] = 0x9f7;
		sine[163] = 0x9fa;
		sine[164] = 0x9fd;
		sine[165] = 0xa00;
		sine[166] = 0xa03;
		sine[167] = 0xa06;
		sine[168] = 0xa09;
		sine[169] = 0xa0c;
		sine[170] = 0xa0f;
		sine[171] = 0xa12;
		sine[172] = 0xa15;
		sine[173] = 0xa19;
		sine[174] = 0xa1c;
		sine[175] = 0xa1f;
		sine[176] = 0xa22;
		sine[177] = 0xa25;
		sine[178] = 0xa28;
		sine[179] = 0xa2b;
		sine[180] = 0xa2e;
		sine[181] = 0xa31;
		sine[182] = 0xa34;
		sine[183] = 0xa37;
		sine[184] = 0xa3a;
		sine[185] = 0xa3d;
		sine[186] = 0xa40;
		sine[187] = 0xa43;
		sine[188] = 0xa46;
		sine[189] = 0xa49;
		sine[190] = 0xa4c;
		sine[191] = 0xa4f;
		sine[192] = 0xa52;
		sine[193] = 0xa55;
		sine[194] = 0xa58;
		sine[195] = 0xa5b;
		sine[196] = 0xa5e;
		sine[197] = 0xa61;
		sine[198] = 0xa64;
		sine[199] = 0xa67;
		sine[200] = 0xa6a;
		sine[201] = 0xa6d;
		sine[202] = 0xa70;
		sine[203] = 0xa73;
		sine[204] = 0xa76;
		sine[205] = 0xa79;
		sine[206] = 0xa7c;
		sine[207] = 0xa7f;
		sine[208] = 0xa82;
		sine[209] = 0xa85;
		sine[210] = 0xa88;
		sine[211] = 0xa8b;
		sine[212] = 0xa8e;
		sine[213] = 0xa91;
		sine[214] = 0xa94;
		sine[215] = 0xa97;
		sine[216] = 0xa9a;
		sine[217] = 0xa9d;
		sine[218] = 0xaa0;
		sine[219] = 0xaa2;
		sine[220] = 0xaa5;
		sine[221] = 0xaa8;
		sine[222] = 0xaab;
		sine[223] = 0xaae;
		sine[224] = 0xab1;
		sine[225] = 0xab4;
		sine[226] = 0xab7;
		sine[227] = 0xaba;
		sine[228] = 0xabd;
		sine[229] = 0xac0;
		sine[230] = 0xac3;
		sine[231] = 0xac6;
		sine[232] = 0xac9;
		sine[233] = 0xacc;
		sine[234] = 0xacf;
		sine[235] = 0xad2;
		sine[236] = 0xad5;
		sine[237] = 0xad8;
		sine[238] = 0xadb;
		sine[239] = 0xadd;
		sine[240] = 0xae0;
		sine[241] = 0xae3;
		sine[242] = 0xae6;
		sine[243] = 0xae9;
		sine[244] = 0xaec;
		sine[245] = 0xaef;
		sine[246] = 0xaf2;
		sine[247] = 0xaf5;
		sine[248] = 0xaf8;
		sine[249] = 0xafb;
		sine[250] = 0xafe;
		sine[251] = 0xb01;
		sine[252] = 0xb03;
		sine[253] = 0xb06;
		sine[254] = 0xb09;
		sine[255] = 0xb0c;
		sine[256] = 0xb0f;
		sine[257] = 0xb12;
		sine[258] = 0xb15;
		sine[259] = 0xb18;
		sine[260] = 0xb1b;
		sine[261] = 0xb1e;
		sine[262] = 0xb20;
		sine[263] = 0xb23;
		sine[264] = 0xb26;
		sine[265] = 0xb29;
		sine[266] = 0xb2c;
		sine[267] = 0xb2f;
		sine[268] = 0xb32;
		sine[269] = 0xb35;
		sine[270] = 0xb37;
		sine[271] = 0xb3a;
		sine[272] = 0xb3d;
		sine[273] = 0xb40;
		sine[274] = 0xb43;
		sine[275] = 0xb46;
		sine[276] = 0xb49;
		sine[277] = 0xb4c;
		sine[278] = 0xb4e;
		sine[279] = 0xb51;
		sine[280] = 0xb54;
		sine[281] = 0xb57;
		sine[282] = 0xb5a;
		sine[283] = 0xb5d;
		sine[284] = 0xb60;
		sine[285] = 0xb62;
		sine[286] = 0xb65;
		sine[287] = 0xb68;
		sine[288] = 0xb6b;
		sine[289] = 0xb6e;
		sine[290] = 0xb71;
		sine[291] = 0xb73;
		sine[292] = 0xb76;
		sine[293] = 0xb79;
		sine[294] = 0xb7c;
		sine[295] = 0xb7f;
		sine[296] = 0xb82;
		sine[297] = 0xb84;
		sine[298] = 0xb87;
		sine[299] = 0xb8a;
		sine[300] = 0xb8d;
		sine[301] = 0xb90;
		sine[302] = 0xb92;
		sine[303] = 0xb95;
		sine[304] = 0xb98;
		sine[305] = 0xb9b;
		sine[306] = 0xb9e;
		sine[307] = 0xba0;
		sine[308] = 0xba3;
		sine[309] = 0xba6;
		sine[310] = 0xba9;
		sine[311] = 0xbac;
		sine[312] = 0xbae;
		sine[313] = 0xbb1;
		sine[314] = 0xbb4;
		sine[315] = 0xbb7;
		sine[316] = 0xbba;
		sine[317] = 0xbbc;
		sine[318] = 0xbbf;
		sine[319] = 0xbc2;
		sine[320] = 0xbc5;
		sine[321] = 0xbc7;
		sine[322] = 0xbca;
		sine[323] = 0xbcd;
		sine[324] = 0xbd0;
		sine[325] = 0xbd3;
		sine[326] = 0xbd5;
		sine[327] = 0xbd8;
		sine[328] = 0xbdb;
		sine[329] = 0xbde;
		sine[330] = 0xbe0;
		sine[331] = 0xbe3;
		sine[332] = 0xbe6;
		sine[333] = 0xbe9;
		sine[334] = 0xbeb;
		sine[335] = 0xbee;
		sine[336] = 0xbf1;
		sine[337] = 0xbf3;
		sine[338] = 0xbf6;
		sine[339] = 0xbf9;
		sine[340] = 0xbfc;
		sine[341] = 0xbfe;
		sine[342] = 0xc01;
		sine[343] = 0xc04;
		sine[344] = 0xc06;
		sine[345] = 0xc09;
		sine[346] = 0xc0c;
		sine[347] = 0xc0f;
		sine[348] = 0xc11;
		sine[349] = 0xc14;
		sine[350] = 0xc17;
		sine[351] = 0xc19;
		sine[352] = 0xc1c;
		sine[353] = 0xc1f;
		sine[354] = 0xc22;
		sine[355] = 0xc24;
		sine[356] = 0xc27;
		sine[357] = 0xc2a;
		sine[358] = 0xc2c;
		sine[359] = 0xc2f;
		sine[360] = 0xc32;
		sine[361] = 0xc34;
		sine[362] = 0xc37;
		sine[363] = 0xc3a;
		sine[364] = 0xc3c;
		sine[365] = 0xc3f;
		sine[366] = 0xc42;
		sine[367] = 0xc44;
		sine[368] = 0xc47;
		sine[369] = 0xc4a;
		sine[370] = 0xc4c;
		sine[371] = 0xc4f;
		sine[372] = 0xc52;
		sine[373] = 0xc54;
		sine[374] = 0xc57;
		sine[375] = 0xc59;
		sine[376] = 0xc5c;
		sine[377] = 0xc5f;
		sine[378] = 0xc61;
		sine[379] = 0xc64;
		sine[380] = 0xc67;
		sine[381] = 0xc69;
		sine[382] = 0xc6c;
		sine[383] = 0xc6e;
		sine[384] = 0xc71;
		sine[385] = 0xc74;
		sine[386] = 0xc76;
		sine[387] = 0xc79;
		sine[388] = 0xc7b;
		sine[389] = 0xc7e;
		sine[390] = 0xc81;
		sine[391] = 0xc83;
		sine[392] = 0xc86;
		sine[393] = 0xc88;
		sine[394] = 0xc8b;
		sine[395] = 0xc8e;
		sine[396] = 0xc90;
		sine[397] = 0xc93;
		sine[398] = 0xc95;
		sine[399] = 0xc98;
		sine[400] = 0xc9a;
		sine[401] = 0xc9d;
		sine[402] = 0xca0;
		sine[403] = 0xca2;
		sine[404] = 0xca5;
		sine[405] = 0xca7;
		sine[406] = 0xcaa;
		sine[407] = 0xcac;
		sine[408] = 0xcaf;
		sine[409] = 0xcb1;
		sine[410] = 0xcb4;
		sine[411] = 0xcb7;
		sine[412] = 0xcb9;
		sine[413] = 0xcbc;
		sine[414] = 0xcbe;
		sine[415] = 0xcc1;
		sine[416] = 0xcc3;
		sine[417] = 0xcc6;
		sine[418] = 0xcc8;
		sine[419] = 0xccb;
		sine[420] = 0xccd;
		sine[421] = 0xcd0;
		sine[422] = 0xcd2;
		sine[423] = 0xcd5;
		sine[424] = 0xcd7;
		sine[425] = 0xcda;
		sine[426] = 0xcdc;
		sine[427] = 0xcdf;
		sine[428] = 0xce1;
		sine[429] = 0xce4;
		sine[430] = 0xce6;
		sine[431] = 0xce9;
		sine[432] = 0xceb;
		sine[433] = 0xcee;
		sine[434] = 0xcf0;
		sine[435] = 0xcf3;
		sine[436] = 0xcf5;
		sine[437] = 0xcf8;
		sine[438] = 0xcfa;
		sine[439] = 0xcfc;
		sine[440] = 0xcff;
		sine[441] = 0xd01;
		sine[442] = 0xd04;
		sine[443] = 0xd06;
		sine[444] = 0xd09;
		sine[445] = 0xd0b;
		sine[446] = 0xd0e;
		sine[447] = 0xd10;
		sine[448] = 0xd12;
		sine[449] = 0xd15;
		sine[450] = 0xd17;
		sine[451] = 0xd1a;
		sine[452] = 0xd1c;
		sine[453] = 0xd1f;
		sine[454] = 0xd21;
		sine[455] = 0xd23;
		sine[456] = 0xd26;
		sine[457] = 0xd28;
		sine[458] = 0xd2b;
		sine[459] = 0xd2d;
		sine[460] = 0xd2f;
		sine[461] = 0xd32;
		sine[462] = 0xd34;
		sine[463] = 0xd36;
		sine[464] = 0xd39;
		sine[465] = 0xd3b;
		sine[466] = 0xd3e;
		sine[467] = 0xd40;
		sine[468] = 0xd42;
		sine[469] = 0xd45;
		sine[470] = 0xd47;
		sine[471] = 0xd49;
		sine[472] = 0xd4c;
		sine[473] = 0xd4e;
		sine[474] = 0xd50;
		sine[475] = 0xd53;
		sine[476] = 0xd55;
		sine[477] = 0xd58;
		sine[478] = 0xd5a;
		sine[479] = 0xd5c;
		sine[480] = 0xd5f;
		sine[481] = 0xd61;
		sine[482] = 0xd63;
		sine[483] = 0xd65;
		sine[484] = 0xd68;
		sine[485] = 0xd6a;
		sine[486] = 0xd6c;
		sine[487] = 0xd6f;
		sine[488] = 0xd71;
		sine[489] = 0xd73;
		sine[490] = 0xd76;
		sine[491] = 0xd78;
		sine[492] = 0xd7a;
		sine[493] = 0xd7c;
		sine[494] = 0xd7f;
		sine[495] = 0xd81;
		sine[496] = 0xd83;
		sine[497] = 0xd86;
		sine[498] = 0xd88;
		sine[499] = 0xd8a;
		sine[500] = 0xd8c;
		sine[501] = 0xd8f;
		sine[502] = 0xd91;
		sine[503] = 0xd93;
		sine[504] = 0xd95;
		sine[505] = 0xd98;
		sine[506] = 0xd9a;
		sine[507] = 0xd9c;
		sine[508] = 0xd9e;
		sine[509] = 0xda1;
		sine[510] = 0xda3;
		sine[511] = 0xda5;
		sine[512] = 0xda7;
		sine[513] = 0xdaa;
		sine[514] = 0xdac;
		sine[515] = 0xdae;
		sine[516] = 0xdb0;
		sine[517] = 0xdb2;
		sine[518] = 0xdb5;
		sine[519] = 0xdb7;
		sine[520] = 0xdb9;
		sine[521] = 0xdbb;
		sine[522] = 0xdbd;
		sine[523] = 0xdc0;
		sine[524] = 0xdc2;
		sine[525] = 0xdc4;
		sine[526] = 0xdc6;
		sine[527] = 0xdc8;
		sine[528] = 0xdca;
		sine[529] = 0xdcd;
		sine[530] = 0xdcf;
		sine[531] = 0xdd1;
		sine[532] = 0xdd3;
		sine[533] = 0xdd5;
		sine[534] = 0xdd7;
		sine[535] = 0xdd9;
		sine[536] = 0xddc;
		sine[537] = 0xdde;
		sine[538] = 0xde0;
		sine[539] = 0xde2;
		sine[540] = 0xde4;
		sine[541] = 0xde6;
		sine[542] = 0xde8;
		sine[543] = 0xdea;
		sine[544] = 0xded;
		sine[545] = 0xdef;
		sine[546] = 0xdf1;
		sine[547] = 0xdf3;
		sine[548] = 0xdf5;
		sine[549] = 0xdf7;
		sine[550] = 0xdf9;
		sine[551] = 0xdfb;
		sine[552] = 0xdfd;
		sine[553] = 0xdff;
		sine[554] = 0xe02;
		sine[555] = 0xe04;
		sine[556] = 0xe06;
		sine[557] = 0xe08;
		sine[558] = 0xe0a;
		sine[559] = 0xe0c;
		sine[560] = 0xe0e;
		sine[561] = 0xe10;
		sine[562] = 0xe12;
		sine[563] = 0xe14;
		sine[564] = 0xe16;
		sine[565] = 0xe18;
		sine[566] = 0xe1a;
		sine[567] = 0xe1c;
		sine[568] = 0xe1e;
		sine[569] = 0xe20;
		sine[570] = 0xe22;
		sine[571] = 0xe24;
		sine[572] = 0xe26;
		sine[573] = 0xe28;
		sine[574] = 0xe2a;
		sine[575] = 0xe2c;
		sine[576] = 0xe2e;
		sine[577] = 0xe30;
		sine[578] = 0xe32;
		sine[579] = 0xe34;
		sine[580] = 0xe36;
		sine[581] = 0xe38;
		sine[582] = 0xe3a;
		sine[583] = 0xe3c;
		sine[584] = 0xe3e;
		sine[585] = 0xe40;
		sine[586] = 0xe42;
		sine[587] = 0xe44;
		sine[588] = 0xe46;
		sine[589] = 0xe48;
		sine[590] = 0xe4a;
		sine[591] = 0xe4c;
		sine[592] = 0xe4e;
		sine[593] = 0xe50;
		sine[594] = 0xe51;
		sine[595] = 0xe53;
		sine[596] = 0xe55;
		sine[597] = 0xe57;
		sine[598] = 0xe59;
		sine[599] = 0xe5b;
		sine[600] = 0xe5d;
		sine[601] = 0xe5f;
		sine[602] = 0xe61;
		sine[603] = 0xe63;
		sine[604] = 0xe65;
		sine[605] = 0xe66;
		sine[606] = 0xe68;
		sine[607] = 0xe6a;
		sine[608] = 0xe6c;
		sine[609] = 0xe6e;
		sine[610] = 0xe70;
		sine[611] = 0xe72;
		sine[612] = 0xe74;
		sine[613] = 0xe75;
		sine[614] = 0xe77;
		sine[615] = 0xe79;
		sine[616] = 0xe7b;
		sine[617] = 0xe7d;
		sine[618] = 0xe7f;
		sine[619] = 0xe80;
		sine[620] = 0xe82;
		sine[621] = 0xe84;
		sine[622] = 0xe86;
		sine[623] = 0xe88;
		sine[624] = 0xe8a;
		sine[625] = 0xe8b;
		sine[626] = 0xe8d;
		sine[627] = 0xe8f;
		sine[628] = 0xe91;
		sine[629] = 0xe92;
		sine[630] = 0xe94;
		sine[631] = 0xe96;
		sine[632] = 0xe98;
		sine[633] = 0xe9a;
		sine[634] = 0xe9b;
		sine[635] = 0xe9d;
		sine[636] = 0xe9f;
		sine[637] = 0xea1;
		sine[638] = 0xea2;
		sine[639] = 0xea4;
		sine[640] = 0xea6;
		sine[641] = 0xea8;
		sine[642] = 0xea9;
		sine[643] = 0xeab;
		sine[644] = 0xead;
		sine[645] = 0xeaf;
		sine[646] = 0xeb0;
		sine[647] = 0xeb2;
		sine[648] = 0xeb4;
		sine[649] = 0xeb5;
		sine[650] = 0xeb7;
		sine[651] = 0xeb9;
		sine[652] = 0xebb;
		sine[653] = 0xebc;
		sine[654] = 0xebe;
		sine[655] = 0xec0;
		sine[656] = 0xec1;
		sine[657] = 0xec3;
		sine[658] = 0xec5;
		sine[659] = 0xec6;
		sine[660] = 0xec8;
		sine[661] = 0xeca;
		sine[662] = 0xecb;
		sine[663] = 0xecd;
		sine[664] = 0xecf;
		sine[665] = 0xed0;
		sine[666] = 0xed2;
		sine[667] = 0xed4;
		sine[668] = 0xed5;
		sine[669] = 0xed7;
		sine[670] = 0xed8;
		sine[671] = 0xeda;
		sine[672] = 0xedc;
		sine[673] = 0xedd;
		sine[674] = 0xedf;
		sine[675] = 0xee1;
		sine[676] = 0xee2;
		sine[677] = 0xee4;
		sine[678] = 0xee5;
		sine[679] = 0xee7;
		sine[680] = 0xee8;
		sine[681] = 0xeea;
		sine[682] = 0xeec;
		sine[683] = 0xeed;
		sine[684] = 0xeef;
		sine[685] = 0xef0;
		sine[686] = 0xef2;
		sine[687] = 0xef3;
		sine[688] = 0xef5;
		sine[689] = 0xef7;
		sine[690] = 0xef8;
		sine[691] = 0xefa;
		sine[692] = 0xefb;
		sine[693] = 0xefd;
		sine[694] = 0xefe;
		sine[695] = 0xf00;
		sine[696] = 0xf01;
		sine[697] = 0xf03;
		sine[698] = 0xf04;
		sine[699] = 0xf06;
		sine[700] = 0xf07;
		sine[701] = 0xf09;
		sine[702] = 0xf0a;
		sine[703] = 0xf0c;
		sine[704] = 0xf0d;
		sine[705] = 0xf0f;
		sine[706] = 0xf10;
		sine[707] = 0xf12;
		sine[708] = 0xf13;
		sine[709] = 0xf15;
		sine[710] = 0xf16;
		sine[711] = 0xf17;
		sine[712] = 0xf19;
		sine[713] = 0xf1a;
		sine[714] = 0xf1c;
		sine[715] = 0xf1d;
		sine[716] = 0xf1f;
		sine[717] = 0xf20;
		sine[718] = 0xf22;
		sine[719] = 0xf23;
		sine[720] = 0xf24;
		sine[721] = 0xf26;
		sine[722] = 0xf27;
		sine[723] = 0xf29;
		sine[724] = 0xf2a;
		sine[725] = 0xf2b;
		sine[726] = 0xf2d;
		sine[727] = 0xf2e;
		sine[728] = 0xf30;
		sine[729] = 0xf31;
		sine[730] = 0xf32;
		sine[731] = 0xf34;
		sine[732] = 0xf35;
		sine[733] = 0xf36;
		sine[734] = 0xf38;
		sine[735] = 0xf39;
		sine[736] = 0xf3a;
		sine[737] = 0xf3c;
		sine[738] = 0xf3d;
		sine[739] = 0xf3e;
		sine[740] = 0xf40;
		sine[741] = 0xf41;
		sine[742] = 0xf42;
		sine[743] = 0xf44;
		sine[744] = 0xf45;
		sine[745] = 0xf46;
		sine[746] = 0xf48;
		sine[747] = 0xf49;
		sine[748] = 0xf4a;
		sine[749] = 0xf4c;
		sine[750] = 0xf4d;
		sine[751] = 0xf4e;
		sine[752] = 0xf4f;
		sine[753] = 0xf51;
		sine[754] = 0xf52;
		sine[755] = 0xf53;
		sine[756] = 0xf54;
		sine[757] = 0xf56;
		sine[758] = 0xf57;
		sine[759] = 0xf58;
		sine[760] = 0xf59;
		sine[761] = 0xf5b;
		sine[762] = 0xf5c;
		sine[763] = 0xf5d;
		sine[764] = 0xf5e;
		sine[765] = 0xf60;
		sine[766] = 0xf61;
		sine[767] = 0xf62;
		sine[768] = 0xf63;
		sine[769] = 0xf64;
		sine[770] = 0xf66;
		sine[771] = 0xf67;
		sine[772] = 0xf68;
		sine[773] = 0xf69;
		sine[774] = 0xf6a;
		sine[775] = 0xf6b;
		sine[776] = 0xf6d;
		sine[777] = 0xf6e;
		sine[778] = 0xf6f;
		sine[779] = 0xf70;
		sine[780] = 0xf71;
		sine[781] = 0xf72;
		sine[782] = 0xf74;
		sine[783] = 0xf75;
		sine[784] = 0xf76;
		sine[785] = 0xf77;
		sine[786] = 0xf78;
		sine[787] = 0xf79;
		sine[788] = 0xf7a;
		sine[789] = 0xf7b;
		sine[790] = 0xf7d;
		sine[791] = 0xf7e;
		sine[792] = 0xf7f;
		sine[793] = 0xf80;
		sine[794] = 0xf81;
		sine[795] = 0xf82;
		sine[796] = 0xf83;
		sine[797] = 0xf84;
		sine[798] = 0xf85;
		sine[799] = 0xf86;
		sine[800] = 0xf87;
		sine[801] = 0xf88;
		sine[802] = 0xf89;
		sine[803] = 0xf8a;
		sine[804] = 0xf8c;
		sine[805] = 0xf8d;
		sine[806] = 0xf8e;
		sine[807] = 0xf8f;
		sine[808] = 0xf90;
		sine[809] = 0xf91;
		sine[810] = 0xf92;
		sine[811] = 0xf93;
		sine[812] = 0xf94;
		sine[813] = 0xf95;
		sine[814] = 0xf96;
		sine[815] = 0xf97;
		sine[816] = 0xf98;
		sine[817] = 0xf99;
		sine[818] = 0xf9a;
		sine[819] = 0xf9b;
		sine[820] = 0xf9c;
		sine[821] = 0xf9d;
		sine[822] = 0xf9d;
		sine[823] = 0xf9e;
		sine[824] = 0xf9f;
		sine[825] = 0xfa0;
		sine[826] = 0xfa1;
		sine[827] = 0xfa2;
		sine[828] = 0xfa3;
		sine[829] = 0xfa4;
		sine[830] = 0xfa5;
		sine[831] = 0xfa6;
		sine[832] = 0xfa7;
		sine[833] = 0xfa8;
		sine[834] = 0xfa9;
		sine[835] = 0xfaa;
		sine[836] = 0xfaa;
		sine[837] = 0xfab;
		sine[838] = 0xfac;
		sine[839] = 0xfad;
		sine[840] = 0xfae;
		sine[841] = 0xfaf;
		sine[842] = 0xfb0;
		sine[843] = 0xfb1;
		sine[844] = 0xfb1;
		sine[845] = 0xfb2;
		sine[846] = 0xfb3;
		sine[847] = 0xfb4;
		sine[848] = 0xfb5;
		sine[849] = 0xfb6;
		sine[850] = 0xfb6;
		sine[851] = 0xfb7;
		sine[852] = 0xfb8;
		sine[853] = 0xfb9;
		sine[854] = 0xfba;
		sine[855] = 0xfbb;
		sine[856] = 0xfbb;
		sine[857] = 0xfbc;
		sine[858] = 0xfbd;
		sine[859] = 0xfbe;
		sine[860] = 0xfbf;
		sine[861] = 0xfbf;
		sine[862] = 0xfc0;
		sine[863] = 0xfc1;
		sine[864] = 0xfc2;
		sine[865] = 0xfc2;
		sine[866] = 0xfc3;
		sine[867] = 0xfc4;
		sine[868] = 0xfc5;
		sine[869] = 0xfc5;
		sine[870] = 0xfc6;
		sine[871] = 0xfc7;
		sine[872] = 0xfc8;
		sine[873] = 0xfc8;
		sine[874] = 0xfc9;
		sine[875] = 0xfca;
		sine[876] = 0xfca;
		sine[877] = 0xfcb;
		sine[878] = 0xfcc;
		sine[879] = 0xfcd;
		sine[880] = 0xfcd;
		sine[881] = 0xfce;
		sine[882] = 0xfcf;
		sine[883] = 0xfcf;
		sine[884] = 0xfd0;
		sine[885] = 0xfd1;
		sine[886] = 0xfd1;
		sine[887] = 0xfd2;
		sine[888] = 0xfd3;
		sine[889] = 0xfd3;
		sine[890] = 0xfd4;
		sine[891] = 0xfd5;
		sine[892] = 0xfd5;
		sine[893] = 0xfd6;
		sine[894] = 0xfd6;
		sine[895] = 0xfd7;
		sine[896] = 0xfd8;
		sine[897] = 0xfd8;
		sine[898] = 0xfd9;
		sine[899] = 0xfd9;
		sine[900] = 0xfda;
		sine[901] = 0xfdb;
		sine[902] = 0xfdb;
		sine[903] = 0xfdc;
		sine[904] = 0xfdc;
		sine[905] = 0xfdd;
		sine[906] = 0xfde;
		sine[907] = 0xfde;
		sine[908] = 0xfdf;
		sine[909] = 0xfdf;
		sine[910] = 0xfe0;
		sine[911] = 0xfe0;
		sine[912] = 0xfe1;
		sine[913] = 0xfe1;
		sine[914] = 0xfe2;
		sine[915] = 0xfe2;
		sine[916] = 0xfe3;
		sine[917] = 0xfe3;
		sine[918] = 0xfe4;
		sine[919] = 0xfe4;
		sine[920] = 0xfe5;
		sine[921] = 0xfe5;
		sine[922] = 0xfe6;
		sine[923] = 0xfe6;
		sine[924] = 0xfe7;
		sine[925] = 0xfe7;
		sine[926] = 0xfe8;
		sine[927] = 0xfe8;
		sine[928] = 0xfe9;
		sine[929] = 0xfe9;
		sine[930] = 0xfea;
		sine[931] = 0xfea;
		sine[932] = 0xfeb;
		sine[933] = 0xfeb;
		sine[934] = 0xfec;
		sine[935] = 0xfec;
		sine[936] = 0xfec;
		sine[937] = 0xfed;
		sine[938] = 0xfed;
		sine[939] = 0xfee;
		sine[940] = 0xfee;
		sine[941] = 0xfee;
		sine[942] = 0xfef;
		sine[943] = 0xfef;
		sine[944] = 0xff0;
		sine[945] = 0xff0;
		sine[946] = 0xff0;
		sine[947] = 0xff1;
		sine[948] = 0xff1;
		sine[949] = 0xff1;
		sine[950] = 0xff2;
		sine[951] = 0xff2;
		sine[952] = 0xff3;
		sine[953] = 0xff3;
		sine[954] = 0xff3;
		sine[955] = 0xff4;
		sine[956] = 0xff4;
		sine[957] = 0xff4;
		sine[958] = 0xff5;
		sine[959] = 0xff5;
		sine[960] = 0xff5;
		sine[961] = 0xff5;
		sine[962] = 0xff6;
		sine[963] = 0xff6;
		sine[964] = 0xff6;
		sine[965] = 0xff7;
		sine[966] = 0xff7;
		sine[967] = 0xff7;
		sine[968] = 0xff7;
		sine[969] = 0xff8;
		sine[970] = 0xff8;
		sine[971] = 0xff8;
		sine[972] = 0xff8;
		sine[973] = 0xff9;
		sine[974] = 0xff9;
		sine[975] = 0xff9;
		sine[976] = 0xff9;
		sine[977] = 0xffa;
		sine[978] = 0xffa;
		sine[979] = 0xffa;
		sine[980] = 0xffa;
		sine[981] = 0xffb;
		sine[982] = 0xffb;
		sine[983] = 0xffb;
		sine[984] = 0xffb;
		sine[985] = 0xffb;
		sine[986] = 0xffc;
		sine[987] = 0xffc;
		sine[988] = 0xffc;
		sine[989] = 0xffc;
		sine[990] = 0xffc;
		sine[991] = 0xffc;
		sine[992] = 0xffd;
		sine[993] = 0xffd;
		sine[994] = 0xffd;
		sine[995] = 0xffd;
		sine[996] = 0xffd;
		sine[997] = 0xffd;
		sine[998] = 0xffd;
		sine[999] = 0xffd;
		sine[1000] = 0xffe;
		sine[1001] = 0xffe;
		sine[1002] = 0xffe;
		sine[1003] = 0xffe;
		sine[1004] = 0xffe;
		sine[1005] = 0xffe;
		sine[1006] = 0xffe;
		sine[1007] = 0xffe;
		sine[1008] = 0xffe;
		sine[1009] = 0xffe;
		sine[1010] = 0xfff;
		sine[1011] = 0xfff;
		sine[1012] = 0xfff;
		sine[1013] = 0xfff;
		sine[1014] = 0xfff;
		sine[1015] = 0xfff;
		sine[1016] = 0xfff;
		sine[1017] = 0xfff;
		sine[1018] = 0xfff;
		sine[1019] = 0xfff;
		sine[1020] = 0xfff;
		sine[1021] = 0xfff;
		sine[1022] = 0xfff;
		sine[1023] = 0xfff;
		sine[1024] = 0xfff;
		sine[1025] = 0xfff;
		sine[1026] = 0xfff;
		sine[1027] = 0xfff;
		sine[1028] = 0xfff;
		sine[1029] = 0xfff;
		sine[1030] = 0xfff;
		sine[1031] = 0xfff;
		sine[1032] = 0xfff;
		sine[1033] = 0xfff;
		sine[1034] = 0xfff;
		sine[1035] = 0xfff;
		sine[1036] = 0xfff;
		sine[1037] = 0xfff;
		sine[1038] = 0xfff;
		sine[1039] = 0xffe;
		sine[1040] = 0xffe;
		sine[1041] = 0xffe;
		sine[1042] = 0xffe;
		sine[1043] = 0xffe;
		sine[1044] = 0xffe;
		sine[1045] = 0xffe;
		sine[1046] = 0xffe;
		sine[1047] = 0xffe;
		sine[1048] = 0xffe;
		sine[1049] = 0xffd;
		sine[1050] = 0xffd;
		sine[1051] = 0xffd;
		sine[1052] = 0xffd;
		sine[1053] = 0xffd;
		sine[1054] = 0xffd;
		sine[1055] = 0xffd;
		sine[1056] = 0xffd;
		sine[1057] = 0xffc;
		sine[1058] = 0xffc;
		sine[1059] = 0xffc;
		sine[1060] = 0xffc;
		sine[1061] = 0xffc;
		sine[1062] = 0xffc;
		sine[1063] = 0xffb;
		sine[1064] = 0xffb;
		sine[1065] = 0xffb;
		sine[1066] = 0xffb;
		sine[1067] = 0xffb;
		sine[1068] = 0xffa;
		sine[1069] = 0xffa;
		sine[1070] = 0xffa;
		sine[1071] = 0xffa;
		sine[1072] = 0xff9;
		sine[1073] = 0xff9;
		sine[1074] = 0xff9;
		sine[1075] = 0xff9;
		sine[1076] = 0xff8;
		sine[1077] = 0xff8;
		sine[1078] = 0xff8;
		sine[1079] = 0xff8;
		sine[1080] = 0xff7;
		sine[1081] = 0xff7;
		sine[1082] = 0xff7;
		sine[1083] = 0xff7;
		sine[1084] = 0xff6;
		sine[1085] = 0xff6;
		sine[1086] = 0xff6;
		sine[1087] = 0xff5;
		sine[1088] = 0xff5;
		sine[1089] = 0xff5;
		sine[1090] = 0xff5;
		sine[1091] = 0xff4;
		sine[1092] = 0xff4;
		sine[1093] = 0xff4;
		sine[1094] = 0xff3;
		sine[1095] = 0xff3;
		sine[1096] = 0xff3;
		sine[1097] = 0xff2;
		sine[1098] = 0xff2;
		sine[1099] = 0xff1;
		sine[1100] = 0xff1;
		sine[1101] = 0xff1;
		sine[1102] = 0xff0;
		sine[1103] = 0xff0;
		sine[1104] = 0xff0;
		sine[1105] = 0xfef;
		sine[1106] = 0xfef;
		sine[1107] = 0xfee;
		sine[1108] = 0xfee;
		sine[1109] = 0xfee;
		sine[1110] = 0xfed;
		sine[1111] = 0xfed;
		sine[1112] = 0xfec;
		sine[1113] = 0xfec;
		sine[1114] = 0xfec;
		sine[1115] = 0xfeb;
		sine[1116] = 0xfeb;
		sine[1117] = 0xfea;
		sine[1118] = 0xfea;
		sine[1119] = 0xfe9;
		sine[1120] = 0xfe9;
		sine[1121] = 0xfe8;
		sine[1122] = 0xfe8;
		sine[1123] = 0xfe7;
		sine[1124] = 0xfe7;
		sine[1125] = 0xfe6;
		sine[1126] = 0xfe6;
		sine[1127] = 0xfe5;
		sine[1128] = 0xfe5;
		sine[1129] = 0xfe4;
		sine[1130] = 0xfe4;
		sine[1131] = 0xfe3;
		sine[1132] = 0xfe3;
		sine[1133] = 0xfe2;
		sine[1134] = 0xfe2;
		sine[1135] = 0xfe1;
		sine[1136] = 0xfe1;
		sine[1137] = 0xfe0;
		sine[1138] = 0xfe0;
		sine[1139] = 0xfdf;
		sine[1140] = 0xfdf;
		sine[1141] = 0xfde;
		sine[1142] = 0xfde;
		sine[1143] = 0xfdd;
		sine[1144] = 0xfdc;
		sine[1145] = 0xfdc;
		sine[1146] = 0xfdb;
		sine[1147] = 0xfdb;
		sine[1148] = 0xfda;
		sine[1149] = 0xfd9;
		sine[1150] = 0xfd9;
		sine[1151] = 0xfd8;
		sine[1152] = 0xfd8;
		sine[1153] = 0xfd7;
		sine[1154] = 0xfd6;
		sine[1155] = 0xfd6;
		sine[1156] = 0xfd5;
		sine[1157] = 0xfd5;
		sine[1158] = 0xfd4;
		sine[1159] = 0xfd3;
		sine[1160] = 0xfd3;
		sine[1161] = 0xfd2;
		sine[1162] = 0xfd1;
		sine[1163] = 0xfd1;
		sine[1164] = 0xfd0;
		sine[1165] = 0xfcf;
		sine[1166] = 0xfcf;
		sine[1167] = 0xfce;
		sine[1168] = 0xfcd;
		sine[1169] = 0xfcd;
		sine[1170] = 0xfcc;
		sine[1171] = 0xfcb;
		sine[1172] = 0xfca;
		sine[1173] = 0xfca;
		sine[1174] = 0xfc9;
		sine[1175] = 0xfc8;
		sine[1176] = 0xfc8;
		sine[1177] = 0xfc7;
		sine[1178] = 0xfc6;
		sine[1179] = 0xfc5;
		sine[1180] = 0xfc5;
		sine[1181] = 0xfc4;
		sine[1182] = 0xfc3;
		sine[1183] = 0xfc2;
		sine[1184] = 0xfc2;
		sine[1185] = 0xfc1;
		sine[1186] = 0xfc0;
		sine[1187] = 0xfbf;
		sine[1188] = 0xfbf;
		sine[1189] = 0xfbe;
		sine[1190] = 0xfbd;
		sine[1191] = 0xfbc;
		sine[1192] = 0xfbb;
		sine[1193] = 0xfbb;
		sine[1194] = 0xfba;
		sine[1195] = 0xfb9;
		sine[1196] = 0xfb8;
		sine[1197] = 0xfb7;
		sine[1198] = 0xfb6;
		sine[1199] = 0xfb6;
		sine[1200] = 0xfb5;
		sine[1201] = 0xfb4;
		sine[1202] = 0xfb3;
		sine[1203] = 0xfb2;
		sine[1204] = 0xfb1;
		sine[1205] = 0xfb1;
		sine[1206] = 0xfb0;
		sine[1207] = 0xfaf;
		sine[1208] = 0xfae;
		sine[1209] = 0xfad;
		sine[1210] = 0xfac;
		sine[1211] = 0xfab;
		sine[1212] = 0xfaa;
		sine[1213] = 0xfaa;
		sine[1214] = 0xfa9;
		sine[1215] = 0xfa8;
		sine[1216] = 0xfa7;
		sine[1217] = 0xfa6;
		sine[1218] = 0xfa5;
		sine[1219] = 0xfa4;
		sine[1220] = 0xfa3;
		sine[1221] = 0xfa2;
		sine[1222] = 0xfa1;
		sine[1223] = 0xfa0;
		sine[1224] = 0xf9f;
		sine[1225] = 0xf9e;
		sine[1226] = 0xf9d;
		sine[1227] = 0xf9d;
		sine[1228] = 0xf9c;
		sine[1229] = 0xf9b;
		sine[1230] = 0xf9a;
		sine[1231] = 0xf99;
		sine[1232] = 0xf98;
		sine[1233] = 0xf97;
		sine[1234] = 0xf96;
		sine[1235] = 0xf95;
		sine[1236] = 0xf94;
		sine[1237] = 0xf93;
		sine[1238] = 0xf92;
		sine[1239] = 0xf91;
		sine[1240] = 0xf90;
		sine[1241] = 0xf8f;
		sine[1242] = 0xf8e;
		sine[1243] = 0xf8d;
		sine[1244] = 0xf8c;
		sine[1245] = 0xf8a;
		sine[1246] = 0xf89;
		sine[1247] = 0xf88;
		sine[1248] = 0xf87;
		sine[1249] = 0xf86;
		sine[1250] = 0xf85;
		sine[1251] = 0xf84;
		sine[1252] = 0xf83;
		sine[1253] = 0xf82;
		sine[1254] = 0xf81;
		sine[1255] = 0xf80;
		sine[1256] = 0xf7f;
		sine[1257] = 0xf7e;
		sine[1258] = 0xf7d;
		sine[1259] = 0xf7b;
		sine[1260] = 0xf7a;
		sine[1261] = 0xf79;
		sine[1262] = 0xf78;
		sine[1263] = 0xf77;
		sine[1264] = 0xf76;
		sine[1265] = 0xf75;
		sine[1266] = 0xf74;
		sine[1267] = 0xf72;
		sine[1268] = 0xf71;
		sine[1269] = 0xf70;
		sine[1270] = 0xf6f;
		sine[1271] = 0xf6e;
		sine[1272] = 0xf6d;
		sine[1273] = 0xf6b;
		sine[1274] = 0xf6a;
		sine[1275] = 0xf69;
		sine[1276] = 0xf68;
		sine[1277] = 0xf67;
		sine[1278] = 0xf66;
		sine[1279] = 0xf64;
		sine[1280] = 0xf63;
		sine[1281] = 0xf62;
		sine[1282] = 0xf61;
		sine[1283] = 0xf60;
		sine[1284] = 0xf5e;
		sine[1285] = 0xf5d;
		sine[1286] = 0xf5c;
		sine[1287] = 0xf5b;
		sine[1288] = 0xf59;
		sine[1289] = 0xf58;
		sine[1290] = 0xf57;
		sine[1291] = 0xf56;
		sine[1292] = 0xf54;
		sine[1293] = 0xf53;
		sine[1294] = 0xf52;
		sine[1295] = 0xf51;
		sine[1296] = 0xf4f;
		sine[1297] = 0xf4e;
		sine[1298] = 0xf4d;
		sine[1299] = 0xf4c;
		sine[1300] = 0xf4a;
		sine[1301] = 0xf49;
		sine[1302] = 0xf48;
		sine[1303] = 0xf46;
		sine[1304] = 0xf45;
		sine[1305] = 0xf44;
		sine[1306] = 0xf42;
		sine[1307] = 0xf41;
		sine[1308] = 0xf40;
		sine[1309] = 0xf3e;
		sine[1310] = 0xf3d;
		sine[1311] = 0xf3c;
		sine[1312] = 0xf3a;
		sine[1313] = 0xf39;
		sine[1314] = 0xf38;
		sine[1315] = 0xf36;
		sine[1316] = 0xf35;
		sine[1317] = 0xf34;
		sine[1318] = 0xf32;
		sine[1319] = 0xf31;
		sine[1320] = 0xf30;
		sine[1321] = 0xf2e;
		sine[1322] = 0xf2d;
		sine[1323] = 0xf2b;
		sine[1324] = 0xf2a;
		sine[1325] = 0xf29;
		sine[1326] = 0xf27;
		sine[1327] = 0xf26;
		sine[1328] = 0xf24;
		sine[1329] = 0xf23;
		sine[1330] = 0xf22;
		sine[1331] = 0xf20;
		sine[1332] = 0xf1f;
		sine[1333] = 0xf1d;
		sine[1334] = 0xf1c;
		sine[1335] = 0xf1a;
		sine[1336] = 0xf19;
		sine[1337] = 0xf17;
		sine[1338] = 0xf16;
		sine[1339] = 0xf15;
		sine[1340] = 0xf13;
		sine[1341] = 0xf12;
		sine[1342] = 0xf10;
		sine[1343] = 0xf0f;
		sine[1344] = 0xf0d;
		sine[1345] = 0xf0c;
		sine[1346] = 0xf0a;
		sine[1347] = 0xf09;
		sine[1348] = 0xf07;
		sine[1349] = 0xf06;
		sine[1350] = 0xf04;
		sine[1351] = 0xf03;
		sine[1352] = 0xf01;
		sine[1353] = 0xf00;
		sine[1354] = 0xefe;
		sine[1355] = 0xefd;
		sine[1356] = 0xefb;
		sine[1357] = 0xefa;
		sine[1358] = 0xef8;
		sine[1359] = 0xef7;
		sine[1360] = 0xef5;
		sine[1361] = 0xef3;
		sine[1362] = 0xef2;
		sine[1363] = 0xef0;
		sine[1364] = 0xeef;
		sine[1365] = 0xeed;
		sine[1366] = 0xeec;
		sine[1367] = 0xeea;
		sine[1368] = 0xee8;
		sine[1369] = 0xee7;
		sine[1370] = 0xee5;
		sine[1371] = 0xee4;
		sine[1372] = 0xee2;
		sine[1373] = 0xee1;
		sine[1374] = 0xedf;
		sine[1375] = 0xedd;
		sine[1376] = 0xedc;
		sine[1377] = 0xeda;
		sine[1378] = 0xed8;
		sine[1379] = 0xed7;
		sine[1380] = 0xed5;
		sine[1381] = 0xed4;
		sine[1382] = 0xed2;
		sine[1383] = 0xed0;
		sine[1384] = 0xecf;
		sine[1385] = 0xecd;
		sine[1386] = 0xecb;
		sine[1387] = 0xeca;
		sine[1388] = 0xec8;
		sine[1389] = 0xec6;
		sine[1390] = 0xec5;
		sine[1391] = 0xec3;
		sine[1392] = 0xec1;
		sine[1393] = 0xec0;
		sine[1394] = 0xebe;
		sine[1395] = 0xebc;
		sine[1396] = 0xebb;
		sine[1397] = 0xeb9;
		sine[1398] = 0xeb7;
		sine[1399] = 0xeb5;
		sine[1400] = 0xeb4;
		sine[1401] = 0xeb2;
		sine[1402] = 0xeb0;
		sine[1403] = 0xeaf;
		sine[1404] = 0xead;
		sine[1405] = 0xeab;
		sine[1406] = 0xea9;
		sine[1407] = 0xea8;
		sine[1408] = 0xea6;
		sine[1409] = 0xea4;
		sine[1410] = 0xea2;
		sine[1411] = 0xea1;
		sine[1412] = 0xe9f;
		sine[1413] = 0xe9d;
		sine[1414] = 0xe9b;
		sine[1415] = 0xe9a;
		sine[1416] = 0xe98;
		sine[1417] = 0xe96;
		sine[1418] = 0xe94;
		sine[1419] = 0xe92;
		sine[1420] = 0xe91;
		sine[1421] = 0xe8f;
		sine[1422] = 0xe8d;
		sine[1423] = 0xe8b;
		sine[1424] = 0xe8a;
		sine[1425] = 0xe88;
		sine[1426] = 0xe86;
		sine[1427] = 0xe84;
		sine[1428] = 0xe82;
		sine[1429] = 0xe80;
		sine[1430] = 0xe7f;
		sine[1431] = 0xe7d;
		sine[1432] = 0xe7b;
		sine[1433] = 0xe79;
		sine[1434] = 0xe77;
		sine[1435] = 0xe75;
		sine[1436] = 0xe74;
		sine[1437] = 0xe72;
		sine[1438] = 0xe70;
		sine[1439] = 0xe6e;
		sine[1440] = 0xe6c;
		sine[1441] = 0xe6a;
		sine[1442] = 0xe68;
		sine[1443] = 0xe66;
		sine[1444] = 0xe65;
		sine[1445] = 0xe63;
		sine[1446] = 0xe61;
		sine[1447] = 0xe5f;
		sine[1448] = 0xe5d;
		sine[1449] = 0xe5b;
		sine[1450] = 0xe59;
		sine[1451] = 0xe57;
		sine[1452] = 0xe55;
		sine[1453] = 0xe53;
		sine[1454] = 0xe51;
		sine[1455] = 0xe50;
		sine[1456] = 0xe4e;
		sine[1457] = 0xe4c;
		sine[1458] = 0xe4a;
		sine[1459] = 0xe48;
		sine[1460] = 0xe46;
		sine[1461] = 0xe44;
		sine[1462] = 0xe42;
		sine[1463] = 0xe40;
		sine[1464] = 0xe3e;
		sine[1465] = 0xe3c;
		sine[1466] = 0xe3a;
		sine[1467] = 0xe38;
		sine[1468] = 0xe36;
		sine[1469] = 0xe34;
		sine[1470] = 0xe32;
		sine[1471] = 0xe30;
		sine[1472] = 0xe2e;
		sine[1473] = 0xe2c;
		sine[1474] = 0xe2a;
		sine[1475] = 0xe28;
		sine[1476] = 0xe26;
		sine[1477] = 0xe24;
		sine[1478] = 0xe22;
		sine[1479] = 0xe20;
		sine[1480] = 0xe1e;
		sine[1481] = 0xe1c;
		sine[1482] = 0xe1a;
		sine[1483] = 0xe18;
		sine[1484] = 0xe16;
		sine[1485] = 0xe14;
		sine[1486] = 0xe12;
		sine[1487] = 0xe10;
		sine[1488] = 0xe0e;
		sine[1489] = 0xe0c;
		sine[1490] = 0xe0a;
		sine[1491] = 0xe08;
		sine[1492] = 0xe06;
		sine[1493] = 0xe04;
		sine[1494] = 0xe02;
		sine[1495] = 0xdff;
		sine[1496] = 0xdfd;
		sine[1497] = 0xdfb;
		sine[1498] = 0xdf9;
		sine[1499] = 0xdf7;
		sine[1500] = 0xdf5;
		sine[1501] = 0xdf3;
		sine[1502] = 0xdf1;
		sine[1503] = 0xdef;
		sine[1504] = 0xded;
		sine[1505] = 0xdea;
		sine[1506] = 0xde8;
		sine[1507] = 0xde6;
		sine[1508] = 0xde4;
		sine[1509] = 0xde2;
		sine[1510] = 0xde0;
		sine[1511] = 0xdde;
		sine[1512] = 0xddc;
		sine[1513] = 0xdd9;
		sine[1514] = 0xdd7;
		sine[1515] = 0xdd5;
		sine[1516] = 0xdd3;
		sine[1517] = 0xdd1;
		sine[1518] = 0xdcf;
		sine[1519] = 0xdcd;
		sine[1520] = 0xdca;
		sine[1521] = 0xdc8;
		sine[1522] = 0xdc6;
		sine[1523] = 0xdc4;
		sine[1524] = 0xdc2;
		sine[1525] = 0xdc0;
		sine[1526] = 0xdbd;
		sine[1527] = 0xdbb;
		sine[1528] = 0xdb9;
		sine[1529] = 0xdb7;
		sine[1530] = 0xdb5;
		sine[1531] = 0xdb2;
		sine[1532] = 0xdb0;
		sine[1533] = 0xdae;
		sine[1534] = 0xdac;
		sine[1535] = 0xdaa;
		sine[1536] = 0xda7;
		sine[1537] = 0xda5;
		sine[1538] = 0xda3;
		sine[1539] = 0xda1;
		sine[1540] = 0xd9e;
		sine[1541] = 0xd9c;
		sine[1542] = 0xd9a;
		sine[1543] = 0xd98;
		sine[1544] = 0xd95;
		sine[1545] = 0xd93;
		sine[1546] = 0xd91;
		sine[1547] = 0xd8f;
		sine[1548] = 0xd8c;
		sine[1549] = 0xd8a;
		sine[1550] = 0xd88;
		sine[1551] = 0xd86;
		sine[1552] = 0xd83;
		sine[1553] = 0xd81;
		sine[1554] = 0xd7f;
		sine[1555] = 0xd7c;
		sine[1556] = 0xd7a;
		sine[1557] = 0xd78;
		sine[1558] = 0xd76;
		sine[1559] = 0xd73;
		sine[1560] = 0xd71;
		sine[1561] = 0xd6f;
		sine[1562] = 0xd6c;
		sine[1563] = 0xd6a;
		sine[1564] = 0xd68;
		sine[1565] = 0xd65;
		sine[1566] = 0xd63;
		sine[1567] = 0xd61;
		sine[1568] = 0xd5f;
		sine[1569] = 0xd5c;
		sine[1570] = 0xd5a;
		sine[1571] = 0xd58;
		sine[1572] = 0xd55;
		sine[1573] = 0xd53;
		sine[1574] = 0xd50;
		sine[1575] = 0xd4e;
		sine[1576] = 0xd4c;
		sine[1577] = 0xd49;
		sine[1578] = 0xd47;
		sine[1579] = 0xd45;
		sine[1580] = 0xd42;
		sine[1581] = 0xd40;
		sine[1582] = 0xd3e;
		sine[1583] = 0xd3b;
		sine[1584] = 0xd39;
		sine[1585] = 0xd36;
		sine[1586] = 0xd34;
		sine[1587] = 0xd32;
		sine[1588] = 0xd2f;
		sine[1589] = 0xd2d;
		sine[1590] = 0xd2b;
		sine[1591] = 0xd28;
		sine[1592] = 0xd26;
		sine[1593] = 0xd23;
		sine[1594] = 0xd21;
		sine[1595] = 0xd1f;
		sine[1596] = 0xd1c;
		sine[1597] = 0xd1a;
		sine[1598] = 0xd17;
		sine[1599] = 0xd15;
		sine[1600] = 0xd12;
		sine[1601] = 0xd10;
		sine[1602] = 0xd0e;
		sine[1603] = 0xd0b;
		sine[1604] = 0xd09;
		sine[1605] = 0xd06;
		sine[1606] = 0xd04;
		sine[1607] = 0xd01;
		sine[1608] = 0xcff;
		sine[1609] = 0xcfc;
		sine[1610] = 0xcfa;
		sine[1611] = 0xcf8;
		sine[1612] = 0xcf5;
		sine[1613] = 0xcf3;
		sine[1614] = 0xcf0;
		sine[1615] = 0xcee;
		sine[1616] = 0xceb;
		sine[1617] = 0xce9;
		sine[1618] = 0xce6;
		sine[1619] = 0xce4;
		sine[1620] = 0xce1;
		sine[1621] = 0xcdf;
		sine[1622] = 0xcdc;
		sine[1623] = 0xcda;
		sine[1624] = 0xcd7;
		sine[1625] = 0xcd5;
		sine[1626] = 0xcd2;
		sine[1627] = 0xcd0;
		sine[1628] = 0xccd;
		sine[1629] = 0xccb;
		sine[1630] = 0xcc8;
		sine[1631] = 0xcc6;
		sine[1632] = 0xcc3;
		sine[1633] = 0xcc1;
		sine[1634] = 0xcbe;
		sine[1635] = 0xcbc;
		sine[1636] = 0xcb9;
		sine[1637] = 0xcb7;
		sine[1638] = 0xcb4;
		sine[1639] = 0xcb1;
		sine[1640] = 0xcaf;
		sine[1641] = 0xcac;
		sine[1642] = 0xcaa;
		sine[1643] = 0xca7;
		sine[1644] = 0xca5;
		sine[1645] = 0xca2;
		sine[1646] = 0xca0;
		sine[1647] = 0xc9d;
		sine[1648] = 0xc9a;
		sine[1649] = 0xc98;
		sine[1650] = 0xc95;
		sine[1651] = 0xc93;
		sine[1652] = 0xc90;
		sine[1653] = 0xc8e;
		sine[1654] = 0xc8b;
		sine[1655] = 0xc88;
		sine[1656] = 0xc86;
		sine[1657] = 0xc83;
		sine[1658] = 0xc81;
		sine[1659] = 0xc7e;
		sine[1660] = 0xc7b;
		sine[1661] = 0xc79;
		sine[1662] = 0xc76;
		sine[1663] = 0xc74;
		sine[1664] = 0xc71;
		sine[1665] = 0xc6e;
		sine[1666] = 0xc6c;
		sine[1667] = 0xc69;
		sine[1668] = 0xc67;
		sine[1669] = 0xc64;
		sine[1670] = 0xc61;
		sine[1671] = 0xc5f;
		sine[1672] = 0xc5c;
		sine[1673] = 0xc59;
		sine[1674] = 0xc57;
		sine[1675] = 0xc54;
		sine[1676] = 0xc52;
		sine[1677] = 0xc4f;
		sine[1678] = 0xc4c;
		sine[1679] = 0xc4a;
		sine[1680] = 0xc47;
		sine[1681] = 0xc44;
		sine[1682] = 0xc42;
		sine[1683] = 0xc3f;
		sine[1684] = 0xc3c;
		sine[1685] = 0xc3a;
		sine[1686] = 0xc37;
		sine[1687] = 0xc34;
		sine[1688] = 0xc32;
		sine[1689] = 0xc2f;
		sine[1690] = 0xc2c;
		sine[1691] = 0xc2a;
		sine[1692] = 0xc27;
		sine[1693] = 0xc24;
		sine[1694] = 0xc22;
		sine[1695] = 0xc1f;
		sine[1696] = 0xc1c;
		sine[1697] = 0xc19;
		sine[1698] = 0xc17;
		sine[1699] = 0xc14;
		sine[1700] = 0xc11;
		sine[1701] = 0xc0f;
		sine[1702] = 0xc0c;
		sine[1703] = 0xc09;
		sine[1704] = 0xc06;
		sine[1705] = 0xc04;
		sine[1706] = 0xc01;
		sine[1707] = 0xbfe;
		sine[1708] = 0xbfc;
		sine[1709] = 0xbf9;
		sine[1710] = 0xbf6;
		sine[1711] = 0xbf3;
		sine[1712] = 0xbf1;
		sine[1713] = 0xbee;
		sine[1714] = 0xbeb;
		sine[1715] = 0xbe9;
		sine[1716] = 0xbe6;
		sine[1717] = 0xbe3;
		sine[1718] = 0xbe0;
		sine[1719] = 0xbde;
		sine[1720] = 0xbdb;
		sine[1721] = 0xbd8;
		sine[1722] = 0xbd5;
		sine[1723] = 0xbd3;
		sine[1724] = 0xbd0;
		sine[1725] = 0xbcd;
		sine[1726] = 0xbca;
		sine[1727] = 0xbc7;
		sine[1728] = 0xbc5;
		sine[1729] = 0xbc2;
		sine[1730] = 0xbbf;
		sine[1731] = 0xbbc;
		sine[1732] = 0xbba;
		sine[1733] = 0xbb7;
		sine[1734] = 0xbb4;
		sine[1735] = 0xbb1;
		sine[1736] = 0xbae;
		sine[1737] = 0xbac;
		sine[1738] = 0xba9;
		sine[1739] = 0xba6;
		sine[1740] = 0xba3;
		sine[1741] = 0xba0;
		sine[1742] = 0xb9e;
		sine[1743] = 0xb9b;
		sine[1744] = 0xb98;
		sine[1745] = 0xb95;
		sine[1746] = 0xb92;
		sine[1747] = 0xb90;
		sine[1748] = 0xb8d;
		sine[1749] = 0xb8a;
		sine[1750] = 0xb87;
		sine[1751] = 0xb84;
		sine[1752] = 0xb82;
		sine[1753] = 0xb7f;
		sine[1754] = 0xb7c;
		sine[1755] = 0xb79;
		sine[1756] = 0xb76;
		sine[1757] = 0xb73;
		sine[1758] = 0xb71;
		sine[1759] = 0xb6e;
		sine[1760] = 0xb6b;
		sine[1761] = 0xb68;
		sine[1762] = 0xb65;
		sine[1763] = 0xb62;
		sine[1764] = 0xb60;
		sine[1765] = 0xb5d;
		sine[1766] = 0xb5a;
		sine[1767] = 0xb57;
		sine[1768] = 0xb54;
		sine[1769] = 0xb51;
		sine[1770] = 0xb4e;
		sine[1771] = 0xb4c;
		sine[1772] = 0xb49;
		sine[1773] = 0xb46;
		sine[1774] = 0xb43;
		sine[1775] = 0xb40;
		sine[1776] = 0xb3d;
		sine[1777] = 0xb3a;
		sine[1778] = 0xb37;
		sine[1779] = 0xb35;
		sine[1780] = 0xb32;
		sine[1781] = 0xb2f;
		sine[1782] = 0xb2c;
		sine[1783] = 0xb29;
		sine[1784] = 0xb26;
		sine[1785] = 0xb23;
		sine[1786] = 0xb20;
		sine[1787] = 0xb1e;
		sine[1788] = 0xb1b;
		sine[1789] = 0xb18;
		sine[1790] = 0xb15;
		sine[1791] = 0xb12;
		sine[1792] = 0xb0f;
		sine[1793] = 0xb0c;
		sine[1794] = 0xb09;
		sine[1795] = 0xb06;
		sine[1796] = 0xb03;
		sine[1797] = 0xb01;
		sine[1798] = 0xafe;
		sine[1799] = 0xafb;
		sine[1800] = 0xaf8;
		sine[1801] = 0xaf5;
		sine[1802] = 0xaf2;
		sine[1803] = 0xaef;
		sine[1804] = 0xaec;
		sine[1805] = 0xae9;
		sine[1806] = 0xae6;
		sine[1807] = 0xae3;
		sine[1808] = 0xae0;
		sine[1809] = 0xadd;
		sine[1810] = 0xadb;
		sine[1811] = 0xad8;
		sine[1812] = 0xad5;
		sine[1813] = 0xad2;
		sine[1814] = 0xacf;
		sine[1815] = 0xacc;
		sine[1816] = 0xac9;
		sine[1817] = 0xac6;
		sine[1818] = 0xac3;
		sine[1819] = 0xac0;
		sine[1820] = 0xabd;
		sine[1821] = 0xaba;
		sine[1822] = 0xab7;
		sine[1823] = 0xab4;
		sine[1824] = 0xab1;
		sine[1825] = 0xaae;
		sine[1826] = 0xaab;
		sine[1827] = 0xaa8;
		sine[1828] = 0xaa5;
		sine[1829] = 0xaa2;
		sine[1830] = 0xaa0;
		sine[1831] = 0xa9d;
		sine[1832] = 0xa9a;
		sine[1833] = 0xa97;
		sine[1834] = 0xa94;
		sine[1835] = 0xa91;
		sine[1836] = 0xa8e;
		sine[1837] = 0xa8b;
		sine[1838] = 0xa88;
		sine[1839] = 0xa85;
		sine[1840] = 0xa82;
		sine[1841] = 0xa7f;
		sine[1842] = 0xa7c;
		sine[1843] = 0xa79;
		sine[1844] = 0xa76;
		sine[1845] = 0xa73;
		sine[1846] = 0xa70;
		sine[1847] = 0xa6d;
		sine[1848] = 0xa6a;
		sine[1849] = 0xa67;
		sine[1850] = 0xa64;
		sine[1851] = 0xa61;
		sine[1852] = 0xa5e;
		sine[1853] = 0xa5b;
		sine[1854] = 0xa58;
		sine[1855] = 0xa55;
		sine[1856] = 0xa52;
		sine[1857] = 0xa4f;
		sine[1858] = 0xa4c;
		sine[1859] = 0xa49;
		sine[1860] = 0xa46;
		sine[1861] = 0xa43;
		sine[1862] = 0xa40;
		sine[1863] = 0xa3d;
		sine[1864] = 0xa3a;
		sine[1865] = 0xa37;
		sine[1866] = 0xa34;
		sine[1867] = 0xa31;
		sine[1868] = 0xa2e;
		sine[1869] = 0xa2b;
		sine[1870] = 0xa28;
		sine[1871] = 0xa25;
		sine[1872] = 0xa22;
		sine[1873] = 0xa1f;
		sine[1874] = 0xa1c;
		sine[1875] = 0xa19;
		sine[1876] = 0xa15;
		sine[1877] = 0xa12;
		sine[1878] = 0xa0f;
		sine[1879] = 0xa0c;
		sine[1880] = 0xa09;
		sine[1881] = 0xa06;
		sine[1882] = 0xa03;
		sine[1883] = 0xa00;
		sine[1884] = 0x9fd;
		sine[1885] = 0x9fa;
		sine[1886] = 0x9f7;
		sine[1887] = 0x9f4;
		sine[1888] = 0x9f1;
		sine[1889] = 0x9ee;
		sine[1890] = 0x9eb;
		sine[1891] = 0x9e8;
		sine[1892] = 0x9e5;
		sine[1893] = 0x9e2;
		sine[1894] = 0x9df;
		sine[1895] = 0x9dc;
		sine[1896] = 0x9d9;
		sine[1897] = 0x9d6;
		sine[1898] = 0x9d2;
		sine[1899] = 0x9cf;
		sine[1900] = 0x9cc;
		sine[1901] = 0x9c9;
		sine[1902] = 0x9c6;
		sine[1903] = 0x9c3;
		sine[1904] = 0x9c0;
		sine[1905] = 0x9bd;
		sine[1906] = 0x9ba;
		sine[1907] = 0x9b7;
		sine[1908] = 0x9b4;
		sine[1909] = 0x9b1;
		sine[1910] = 0x9ae;
		sine[1911] = 0x9ab;
		sine[1912] = 0x9a8;
		sine[1913] = 0x9a4;
		sine[1914] = 0x9a1;
		sine[1915] = 0x99e;
		sine[1916] = 0x99b;
		sine[1917] = 0x998;
		sine[1918] = 0x995;
		sine[1919] = 0x992;
		sine[1920] = 0x98f;
		sine[1921] = 0x98c;
		sine[1922] = 0x989;
		sine[1923] = 0x986;
		sine[1924] = 0x983;
		sine[1925] = 0x980;
		sine[1926] = 0x97c;
		sine[1927] = 0x979;
		sine[1928] = 0x976;
		sine[1929] = 0x973;
		sine[1930] = 0x970;
		sine[1931] = 0x96d;
		sine[1932] = 0x96a;
		sine[1933] = 0x967;
		sine[1934] = 0x964;
		sine[1935] = 0x961;
		sine[1936] = 0x95e;
		sine[1937] = 0x95a;
		sine[1938] = 0x957;
		sine[1939] = 0x954;
		sine[1940] = 0x951;
		sine[1941] = 0x94e;
		sine[1942] = 0x94b;
		sine[1943] = 0x948;
		sine[1944] = 0x945;
		sine[1945] = 0x942;
		sine[1946] = 0x93f;
		sine[1947] = 0x93b;
		sine[1948] = 0x938;
		sine[1949] = 0x935;
		sine[1950] = 0x932;
		sine[1951] = 0x92f;
		sine[1952] = 0x92c;
		sine[1953] = 0x929;
		sine[1954] = 0x926;
		sine[1955] = 0x923;
		sine[1956] = 0x91f;
		sine[1957] = 0x91c;
		sine[1958] = 0x919;
		sine[1959] = 0x916;
		sine[1960] = 0x913;
		sine[1961] = 0x910;
		sine[1962] = 0x90d;
		sine[1963] = 0x90a;
		sine[1964] = 0x907;
		sine[1965] = 0x903;
		sine[1966] = 0x900;
		sine[1967] = 0x8fd;
		sine[1968] = 0x8fa;
		sine[1969] = 0x8f7;
		sine[1970] = 0x8f4;
		sine[1971] = 0x8f1;
		sine[1972] = 0x8ee;
		sine[1973] = 0x8eb;
		sine[1974] = 0x8e7;
		sine[1975] = 0x8e4;
		sine[1976] = 0x8e1;
		sine[1977] = 0x8de;
		sine[1978] = 0x8db;
		sine[1979] = 0x8d8;
		sine[1980] = 0x8d5;
		sine[1981] = 0x8d2;
		sine[1982] = 0x8ce;
		sine[1983] = 0x8cb;
		sine[1984] = 0x8c8;
		sine[1985] = 0x8c5;
		sine[1986] = 0x8c2;
		sine[1987] = 0x8bf;
		sine[1988] = 0x8bc;
		sine[1989] = 0x8b9;
		sine[1990] = 0x8b5;
		sine[1991] = 0x8b2;
		sine[1992] = 0x8af;
		sine[1993] = 0x8ac;
		sine[1994] = 0x8a9;
		sine[1995] = 0x8a6;
		sine[1996] = 0x8a3;
		sine[1997] = 0x8a0;
		sine[1998] = 0x89c;
		sine[1999] = 0x899;
		sine[2000] = 0x896;
		sine[2001] = 0x893;
		sine[2002] = 0x890;
		sine[2003] = 0x88d;
		sine[2004] = 0x88a;
		sine[2005] = 0x886;
		sine[2006] = 0x883;
		sine[2007] = 0x880;
		sine[2008] = 0x87d;
		sine[2009] = 0x87a;
		sine[2010] = 0x877;
		sine[2011] = 0x874;
		sine[2012] = 0x871;
		sine[2013] = 0x86d;
		sine[2014] = 0x86a;
		sine[2015] = 0x867;
		sine[2016] = 0x864;
		sine[2017] = 0x861;
		sine[2018] = 0x85e;
		sine[2019] = 0x85b;
		sine[2020] = 0x857;
		sine[2021] = 0x854;
		sine[2022] = 0x851;
		sine[2023] = 0x84e;
		sine[2024] = 0x84b;
		sine[2025] = 0x848;
		sine[2026] = 0x845;
		sine[2027] = 0x841;
		sine[2028] = 0x83e;
		sine[2029] = 0x83b;
		sine[2030] = 0x838;
		sine[2031] = 0x835;
		sine[2032] = 0x832;
		sine[2033] = 0x82f;
		sine[2034] = 0x82b;
		sine[2035] = 0x828;
		sine[2036] = 0x825;
		sine[2037] = 0x822;
		sine[2038] = 0x81f;
		sine[2039] = 0x81c;
		sine[2040] = 0x819;
		sine[2041] = 0x815;
		sine[2042] = 0x812;
		sine[2043] = 0x80f;
		sine[2044] = 0x80c;
		sine[2045] = 0x809;
		sine[2046] = 0x806;
		sine[2047] = 0x803;
		sine[2048] = 0x800;
		sine[2049] = 0x7fc;
		sine[2050] = 0x7f9;
		sine[2051] = 0x7f6;
		sine[2052] = 0x7f3;
		sine[2053] = 0x7f0;
		sine[2054] = 0x7ed;
		sine[2055] = 0x7ea;
		sine[2056] = 0x7e6;
		sine[2057] = 0x7e3;
		sine[2058] = 0x7e0;
		sine[2059] = 0x7dd;
		sine[2060] = 0x7da;
		sine[2061] = 0x7d7;
		sine[2062] = 0x7d4;
		sine[2063] = 0x7d0;
		sine[2064] = 0x7cd;
		sine[2065] = 0x7ca;
		sine[2066] = 0x7c7;
		sine[2067] = 0x7c4;
		sine[2068] = 0x7c1;
		sine[2069] = 0x7be;
		sine[2070] = 0x7ba;
		sine[2071] = 0x7b7;
		sine[2072] = 0x7b4;
		sine[2073] = 0x7b1;
		sine[2074] = 0x7ae;
		sine[2075] = 0x7ab;
		sine[2076] = 0x7a8;
		sine[2077] = 0x7a4;
		sine[2078] = 0x7a1;
		sine[2079] = 0x79e;
		sine[2080] = 0x79b;
		sine[2081] = 0x798;
		sine[2082] = 0x795;
		sine[2083] = 0x792;
		sine[2084] = 0x78e;
		sine[2085] = 0x78b;
		sine[2086] = 0x788;
		sine[2087] = 0x785;
		sine[2088] = 0x782;
		sine[2089] = 0x77f;
		sine[2090] = 0x77c;
		sine[2091] = 0x779;
		sine[2092] = 0x775;
		sine[2093] = 0x772;
		sine[2094] = 0x76f;
		sine[2095] = 0x76c;
		sine[2096] = 0x769;
		sine[2097] = 0x766;
		sine[2098] = 0x763;
		sine[2099] = 0x75f;
		sine[2100] = 0x75c;
		sine[2101] = 0x759;
		sine[2102] = 0x756;
		sine[2103] = 0x753;
		sine[2104] = 0x750;
		sine[2105] = 0x74d;
		sine[2106] = 0x74a;
		sine[2107] = 0x746;
		sine[2108] = 0x743;
		sine[2109] = 0x740;
		sine[2110] = 0x73d;
		sine[2111] = 0x73a;
		sine[2112] = 0x737;
		sine[2113] = 0x734;
		sine[2114] = 0x731;
		sine[2115] = 0x72d;
		sine[2116] = 0x72a;
		sine[2117] = 0x727;
		sine[2118] = 0x724;
		sine[2119] = 0x721;
		sine[2120] = 0x71e;
		sine[2121] = 0x71b;
		sine[2122] = 0x718;
		sine[2123] = 0x714;
		sine[2124] = 0x711;
		sine[2125] = 0x70e;
		sine[2126] = 0x70b;
		sine[2127] = 0x708;
		sine[2128] = 0x705;
		sine[2129] = 0x702;
		sine[2130] = 0x6ff;
		sine[2131] = 0x6fc;
		sine[2132] = 0x6f8;
		sine[2133] = 0x6f5;
		sine[2134] = 0x6f2;
		sine[2135] = 0x6ef;
		sine[2136] = 0x6ec;
		sine[2137] = 0x6e9;
		sine[2138] = 0x6e6;
		sine[2139] = 0x6e3;
		sine[2140] = 0x6e0;
		sine[2141] = 0x6dc;
		sine[2142] = 0x6d9;
		sine[2143] = 0x6d6;
		sine[2144] = 0x6d3;
		sine[2145] = 0x6d0;
		sine[2146] = 0x6cd;
		sine[2147] = 0x6ca;
		sine[2148] = 0x6c7;
		sine[2149] = 0x6c4;
		sine[2150] = 0x6c0;
		sine[2151] = 0x6bd;
		sine[2152] = 0x6ba;
		sine[2153] = 0x6b7;
		sine[2154] = 0x6b4;
		sine[2155] = 0x6b1;
		sine[2156] = 0x6ae;
		sine[2157] = 0x6ab;
		sine[2158] = 0x6a8;
		sine[2159] = 0x6a5;
		sine[2160] = 0x6a1;
		sine[2161] = 0x69e;
		sine[2162] = 0x69b;
		sine[2163] = 0x698;
		sine[2164] = 0x695;
		sine[2165] = 0x692;
		sine[2166] = 0x68f;
		sine[2167] = 0x68c;
		sine[2168] = 0x689;
		sine[2169] = 0x686;
		sine[2170] = 0x683;
		sine[2171] = 0x67f;
		sine[2172] = 0x67c;
		sine[2173] = 0x679;
		sine[2174] = 0x676;
		sine[2175] = 0x673;
		sine[2176] = 0x670;
		sine[2177] = 0x66d;
		sine[2178] = 0x66a;
		sine[2179] = 0x667;
		sine[2180] = 0x664;
		sine[2181] = 0x661;
		sine[2182] = 0x65e;
		sine[2183] = 0x65b;
		sine[2184] = 0x657;
		sine[2185] = 0x654;
		sine[2186] = 0x651;
		sine[2187] = 0x64e;
		sine[2188] = 0x64b;
		sine[2189] = 0x648;
		sine[2190] = 0x645;
		sine[2191] = 0x642;
		sine[2192] = 0x63f;
		sine[2193] = 0x63c;
		sine[2194] = 0x639;
		sine[2195] = 0x636;
		sine[2196] = 0x633;
		sine[2197] = 0x630;
		sine[2198] = 0x62d;
		sine[2199] = 0x629;
		sine[2200] = 0x626;
		sine[2201] = 0x623;
		sine[2202] = 0x620;
		sine[2203] = 0x61d;
		sine[2204] = 0x61a;
		sine[2205] = 0x617;
		sine[2206] = 0x614;
		sine[2207] = 0x611;
		sine[2208] = 0x60e;
		sine[2209] = 0x60b;
		sine[2210] = 0x608;
		sine[2211] = 0x605;
		sine[2212] = 0x602;
		sine[2213] = 0x5ff;
		sine[2214] = 0x5fc;
		sine[2215] = 0x5f9;
		sine[2216] = 0x5f6;
		sine[2217] = 0x5f3;
		sine[2218] = 0x5f0;
		sine[2219] = 0x5ed;
		sine[2220] = 0x5ea;
		sine[2221] = 0x5e6;
		sine[2222] = 0x5e3;
		sine[2223] = 0x5e0;
		sine[2224] = 0x5dd;
		sine[2225] = 0x5da;
		sine[2226] = 0x5d7;
		sine[2227] = 0x5d4;
		sine[2228] = 0x5d1;
		sine[2229] = 0x5ce;
		sine[2230] = 0x5cb;
		sine[2231] = 0x5c8;
		sine[2232] = 0x5c5;
		sine[2233] = 0x5c2;
		sine[2234] = 0x5bf;
		sine[2235] = 0x5bc;
		sine[2236] = 0x5b9;
		sine[2237] = 0x5b6;
		sine[2238] = 0x5b3;
		sine[2239] = 0x5b0;
		sine[2240] = 0x5ad;
		sine[2241] = 0x5aa;
		sine[2242] = 0x5a7;
		sine[2243] = 0x5a4;
		sine[2244] = 0x5a1;
		sine[2245] = 0x59e;
		sine[2246] = 0x59b;
		sine[2247] = 0x598;
		sine[2248] = 0x595;
		sine[2249] = 0x592;
		sine[2250] = 0x58f;
		sine[2251] = 0x58c;
		sine[2252] = 0x589;
		sine[2253] = 0x586;
		sine[2254] = 0x583;
		sine[2255] = 0x580;
		sine[2256] = 0x57d;
		sine[2257] = 0x57a;
		sine[2258] = 0x577;
		sine[2259] = 0x574;
		sine[2260] = 0x571;
		sine[2261] = 0x56e;
		sine[2262] = 0x56b;
		sine[2263] = 0x568;
		sine[2264] = 0x565;
		sine[2265] = 0x562;
		sine[2266] = 0x55f;
		sine[2267] = 0x55d;
		sine[2268] = 0x55a;
		sine[2269] = 0x557;
		sine[2270] = 0x554;
		sine[2271] = 0x551;
		sine[2272] = 0x54e;
		sine[2273] = 0x54b;
		sine[2274] = 0x548;
		sine[2275] = 0x545;
		sine[2276] = 0x542;
		sine[2277] = 0x53f;
		sine[2278] = 0x53c;
		sine[2279] = 0x539;
		sine[2280] = 0x536;
		sine[2281] = 0x533;
		sine[2282] = 0x530;
		sine[2283] = 0x52d;
		sine[2284] = 0x52a;
		sine[2285] = 0x527;
		sine[2286] = 0x524;
		sine[2287] = 0x522;
		sine[2288] = 0x51f;
		sine[2289] = 0x51c;
		sine[2290] = 0x519;
		sine[2291] = 0x516;
		sine[2292] = 0x513;
		sine[2293] = 0x510;
		sine[2294] = 0x50d;
		sine[2295] = 0x50a;
		sine[2296] = 0x507;
		sine[2297] = 0x504;
		sine[2298] = 0x501;
		sine[2299] = 0x4fe;
		sine[2300] = 0x4fc;
		sine[2301] = 0x4f9;
		sine[2302] = 0x4f6;
		sine[2303] = 0x4f3;
		sine[2304] = 0x4f0;
		sine[2305] = 0x4ed;
		sine[2306] = 0x4ea;
		sine[2307] = 0x4e7;
		sine[2308] = 0x4e4;
		sine[2309] = 0x4e1;
		sine[2310] = 0x4df;
		sine[2311] = 0x4dc;
		sine[2312] = 0x4d9;
		sine[2313] = 0x4d6;
		sine[2314] = 0x4d3;
		sine[2315] = 0x4d0;
		sine[2316] = 0x4cd;
		sine[2317] = 0x4ca;
		sine[2318] = 0x4c8;
		sine[2319] = 0x4c5;
		sine[2320] = 0x4c2;
		sine[2321] = 0x4bf;
		sine[2322] = 0x4bc;
		sine[2323] = 0x4b9;
		sine[2324] = 0x4b6;
		sine[2325] = 0x4b3;
		sine[2326] = 0x4b1;
		sine[2327] = 0x4ae;
		sine[2328] = 0x4ab;
		sine[2329] = 0x4a8;
		sine[2330] = 0x4a5;
		sine[2331] = 0x4a2;
		sine[2332] = 0x49f;
		sine[2333] = 0x49d;
		sine[2334] = 0x49a;
		sine[2335] = 0x497;
		sine[2336] = 0x494;
		sine[2337] = 0x491;
		sine[2338] = 0x48e;
		sine[2339] = 0x48c;
		sine[2340] = 0x489;
		sine[2341] = 0x486;
		sine[2342] = 0x483;
		sine[2343] = 0x480;
		sine[2344] = 0x47d;
		sine[2345] = 0x47b;
		sine[2346] = 0x478;
		sine[2347] = 0x475;
		sine[2348] = 0x472;
		sine[2349] = 0x46f;
		sine[2350] = 0x46d;
		sine[2351] = 0x46a;
		sine[2352] = 0x467;
		sine[2353] = 0x464;
		sine[2354] = 0x461;
		sine[2355] = 0x45f;
		sine[2356] = 0x45c;
		sine[2357] = 0x459;
		sine[2358] = 0x456;
		sine[2359] = 0x453;
		sine[2360] = 0x451;
		sine[2361] = 0x44e;
		sine[2362] = 0x44b;
		sine[2363] = 0x448;
		sine[2364] = 0x445;
		sine[2365] = 0x443;
		sine[2366] = 0x440;
		sine[2367] = 0x43d;
		sine[2368] = 0x43a;
		sine[2369] = 0x438;
		sine[2370] = 0x435;
		sine[2371] = 0x432;
		sine[2372] = 0x42f;
		sine[2373] = 0x42c;
		sine[2374] = 0x42a;
		sine[2375] = 0x427;
		sine[2376] = 0x424;
		sine[2377] = 0x421;
		sine[2378] = 0x41f;
		sine[2379] = 0x41c;
		sine[2380] = 0x419;
		sine[2381] = 0x416;
		sine[2382] = 0x414;
		sine[2383] = 0x411;
		sine[2384] = 0x40e;
		sine[2385] = 0x40c;
		sine[2386] = 0x409;
		sine[2387] = 0x406;
		sine[2388] = 0x403;
		sine[2389] = 0x401;
		sine[2390] = 0x3fe;
		sine[2391] = 0x3fb;
		sine[2392] = 0x3f9;
		sine[2393] = 0x3f6;
		sine[2394] = 0x3f3;
		sine[2395] = 0x3f0;
		sine[2396] = 0x3ee;
		sine[2397] = 0x3eb;
		sine[2398] = 0x3e8;
		sine[2399] = 0x3e6;
		sine[2400] = 0x3e3;
		sine[2401] = 0x3e0;
		sine[2402] = 0x3dd;
		sine[2403] = 0x3db;
		sine[2404] = 0x3d8;
		sine[2405] = 0x3d5;
		sine[2406] = 0x3d3;
		sine[2407] = 0x3d0;
		sine[2408] = 0x3cd;
		sine[2409] = 0x3cb;
		sine[2410] = 0x3c8;
		sine[2411] = 0x3c5;
		sine[2412] = 0x3c3;
		sine[2413] = 0x3c0;
		sine[2414] = 0x3bd;
		sine[2415] = 0x3bb;
		sine[2416] = 0x3b8;
		sine[2417] = 0x3b5;
		sine[2418] = 0x3b3;
		sine[2419] = 0x3b0;
		sine[2420] = 0x3ad;
		sine[2421] = 0x3ab;
		sine[2422] = 0x3a8;
		sine[2423] = 0x3a6;
		sine[2424] = 0x3a3;
		sine[2425] = 0x3a0;
		sine[2426] = 0x39e;
		sine[2427] = 0x39b;
		sine[2428] = 0x398;
		sine[2429] = 0x396;
		sine[2430] = 0x393;
		sine[2431] = 0x391;
		sine[2432] = 0x38e;
		sine[2433] = 0x38b;
		sine[2434] = 0x389;
		sine[2435] = 0x386;
		sine[2436] = 0x384;
		sine[2437] = 0x381;
		sine[2438] = 0x37e;
		sine[2439] = 0x37c;
		sine[2440] = 0x379;
		sine[2441] = 0x377;
		sine[2442] = 0x374;
		sine[2443] = 0x371;
		sine[2444] = 0x36f;
		sine[2445] = 0x36c;
		sine[2446] = 0x36a;
		sine[2447] = 0x367;
		sine[2448] = 0x365;
		sine[2449] = 0x362;
		sine[2450] = 0x35f;
		sine[2451] = 0x35d;
		sine[2452] = 0x35a;
		sine[2453] = 0x358;
		sine[2454] = 0x355;
		sine[2455] = 0x353;
		sine[2456] = 0x350;
		sine[2457] = 0x34e;
		sine[2458] = 0x34b;
		sine[2459] = 0x348;
		sine[2460] = 0x346;
		sine[2461] = 0x343;
		sine[2462] = 0x341;
		sine[2463] = 0x33e;
		sine[2464] = 0x33c;
		sine[2465] = 0x339;
		sine[2466] = 0x337;
		sine[2467] = 0x334;
		sine[2468] = 0x332;
		sine[2469] = 0x32f;
		sine[2470] = 0x32d;
		sine[2471] = 0x32a;
		sine[2472] = 0x328;
		sine[2473] = 0x325;
		sine[2474] = 0x323;
		sine[2475] = 0x320;
		sine[2476] = 0x31e;
		sine[2477] = 0x31b;
		sine[2478] = 0x319;
		sine[2479] = 0x316;
		sine[2480] = 0x314;
		sine[2481] = 0x311;
		sine[2482] = 0x30f;
		sine[2483] = 0x30c;
		sine[2484] = 0x30a;
		sine[2485] = 0x307;
		sine[2486] = 0x305;
		sine[2487] = 0x303;
		sine[2488] = 0x300;
		sine[2489] = 0x2fe;
		sine[2490] = 0x2fb;
		sine[2491] = 0x2f9;
		sine[2492] = 0x2f6;
		sine[2493] = 0x2f4;
		sine[2494] = 0x2f1;
		sine[2495] = 0x2ef;
		sine[2496] = 0x2ed;
		sine[2497] = 0x2ea;
		sine[2498] = 0x2e8;
		sine[2499] = 0x2e5;
		sine[2500] = 0x2e3;
		sine[2501] = 0x2e0;
		sine[2502] = 0x2de;
		sine[2503] = 0x2dc;
		sine[2504] = 0x2d9;
		sine[2505] = 0x2d7;
		sine[2506] = 0x2d4;
		sine[2507] = 0x2d2;
		sine[2508] = 0x2d0;
		sine[2509] = 0x2cd;
		sine[2510] = 0x2cb;
		sine[2511] = 0x2c9;
		sine[2512] = 0x2c6;
		sine[2513] = 0x2c4;
		sine[2514] = 0x2c1;
		sine[2515] = 0x2bf;
		sine[2516] = 0x2bd;
		sine[2517] = 0x2ba;
		sine[2518] = 0x2b8;
		sine[2519] = 0x2b6;
		sine[2520] = 0x2b3;
		sine[2521] = 0x2b1;
		sine[2522] = 0x2af;
		sine[2523] = 0x2ac;
		sine[2524] = 0x2aa;
		sine[2525] = 0x2a7;
		sine[2526] = 0x2a5;
		sine[2527] = 0x2a3;
		sine[2528] = 0x2a0;
		sine[2529] = 0x29e;
		sine[2530] = 0x29c;
		sine[2531] = 0x29a;
		sine[2532] = 0x297;
		sine[2533] = 0x295;
		sine[2534] = 0x293;
		sine[2535] = 0x290;
		sine[2536] = 0x28e;
		sine[2537] = 0x28c;
		sine[2538] = 0x289;
		sine[2539] = 0x287;
		sine[2540] = 0x285;
		sine[2541] = 0x283;
		sine[2542] = 0x280;
		sine[2543] = 0x27e;
		sine[2544] = 0x27c;
		sine[2545] = 0x279;
		sine[2546] = 0x277;
		sine[2547] = 0x275;
		sine[2548] = 0x273;
		sine[2549] = 0x270;
		sine[2550] = 0x26e;
		sine[2551] = 0x26c;
		sine[2552] = 0x26a;
		sine[2553] = 0x267;
		sine[2554] = 0x265;
		sine[2555] = 0x263;
		sine[2556] = 0x261;
		sine[2557] = 0x25e;
		sine[2558] = 0x25c;
		sine[2559] = 0x25a;
		sine[2560] = 0x258;
		sine[2561] = 0x255;
		sine[2562] = 0x253;
		sine[2563] = 0x251;
		sine[2564] = 0x24f;
		sine[2565] = 0x24d;
		sine[2566] = 0x24a;
		sine[2567] = 0x248;
		sine[2568] = 0x246;
		sine[2569] = 0x244;
		sine[2570] = 0x242;
		sine[2571] = 0x23f;
		sine[2572] = 0x23d;
		sine[2573] = 0x23b;
		sine[2574] = 0x239;
		sine[2575] = 0x237;
		sine[2576] = 0x235;
		sine[2577] = 0x232;
		sine[2578] = 0x230;
		sine[2579] = 0x22e;
		sine[2580] = 0x22c;
		sine[2581] = 0x22a;
		sine[2582] = 0x228;
		sine[2583] = 0x226;
		sine[2584] = 0x223;
		sine[2585] = 0x221;
		sine[2586] = 0x21f;
		sine[2587] = 0x21d;
		sine[2588] = 0x21b;
		sine[2589] = 0x219;
		sine[2590] = 0x217;
		sine[2591] = 0x215;
		sine[2592] = 0x212;
		sine[2593] = 0x210;
		sine[2594] = 0x20e;
		sine[2595] = 0x20c;
		sine[2596] = 0x20a;
		sine[2597] = 0x208;
		sine[2598] = 0x206;
		sine[2599] = 0x204;
		sine[2600] = 0x202;
		sine[2601] = 0x200;
		sine[2602] = 0x1fd;
		sine[2603] = 0x1fb;
		sine[2604] = 0x1f9;
		sine[2605] = 0x1f7;
		sine[2606] = 0x1f5;
		sine[2607] = 0x1f3;
		sine[2608] = 0x1f1;
		sine[2609] = 0x1ef;
		sine[2610] = 0x1ed;
		sine[2611] = 0x1eb;
		sine[2612] = 0x1e9;
		sine[2613] = 0x1e7;
		sine[2614] = 0x1e5;
		sine[2615] = 0x1e3;
		sine[2616] = 0x1e1;
		sine[2617] = 0x1df;
		sine[2618] = 0x1dd;
		sine[2619] = 0x1db;
		sine[2620] = 0x1d9;
		sine[2621] = 0x1d7;
		sine[2622] = 0x1d5;
		sine[2623] = 0x1d3;
		sine[2624] = 0x1d1;
		sine[2625] = 0x1cf;
		sine[2626] = 0x1cd;
		sine[2627] = 0x1cb;
		sine[2628] = 0x1c9;
		sine[2629] = 0x1c7;
		sine[2630] = 0x1c5;
		sine[2631] = 0x1c3;
		sine[2632] = 0x1c1;
		sine[2633] = 0x1bf;
		sine[2634] = 0x1bd;
		sine[2635] = 0x1bb;
		sine[2636] = 0x1b9;
		sine[2637] = 0x1b7;
		sine[2638] = 0x1b5;
		sine[2639] = 0x1b3;
		sine[2640] = 0x1b1;
		sine[2641] = 0x1af;
		sine[2642] = 0x1ae;
		sine[2643] = 0x1ac;
		sine[2644] = 0x1aa;
		sine[2645] = 0x1a8;
		sine[2646] = 0x1a6;
		sine[2647] = 0x1a4;
		sine[2648] = 0x1a2;
		sine[2649] = 0x1a0;
		sine[2650] = 0x19e;
		sine[2651] = 0x19c;
		sine[2652] = 0x19a;
		sine[2653] = 0x199;
		sine[2654] = 0x197;
		sine[2655] = 0x195;
		sine[2656] = 0x193;
		sine[2657] = 0x191;
		sine[2658] = 0x18f;
		sine[2659] = 0x18d;
		sine[2660] = 0x18b;
		sine[2661] = 0x18a;
		sine[2662] = 0x188;
		sine[2663] = 0x186;
		sine[2664] = 0x184;
		sine[2665] = 0x182;
		sine[2666] = 0x180;
		sine[2667] = 0x17f;
		sine[2668] = 0x17d;
		sine[2669] = 0x17b;
		sine[2670] = 0x179;
		sine[2671] = 0x177;
		sine[2672] = 0x175;
		sine[2673] = 0x174;
		sine[2674] = 0x172;
		sine[2675] = 0x170;
		sine[2676] = 0x16e;
		sine[2677] = 0x16d;
		sine[2678] = 0x16b;
		sine[2679] = 0x169;
		sine[2680] = 0x167;
		sine[2681] = 0x165;
		sine[2682] = 0x164;
		sine[2683] = 0x162;
		sine[2684] = 0x160;
		sine[2685] = 0x15e;
		sine[2686] = 0x15d;
		sine[2687] = 0x15b;
		sine[2688] = 0x159;
		sine[2689] = 0x157;
		sine[2690] = 0x156;
		sine[2691] = 0x154;
		sine[2692] = 0x152;
		sine[2693] = 0x150;
		sine[2694] = 0x14f;
		sine[2695] = 0x14d;
		sine[2696] = 0x14b;
		sine[2697] = 0x14a;
		sine[2698] = 0x148;
		sine[2699] = 0x146;
		sine[2700] = 0x144;
		sine[2701] = 0x143;
		sine[2702] = 0x141;
		sine[2703] = 0x13f;
		sine[2704] = 0x13e;
		sine[2705] = 0x13c;
		sine[2706] = 0x13a;
		sine[2707] = 0x139;
		sine[2708] = 0x137;
		sine[2709] = 0x135;
		sine[2710] = 0x134;
		sine[2711] = 0x132;
		sine[2712] = 0x130;
		sine[2713] = 0x12f;
		sine[2714] = 0x12d;
		sine[2715] = 0x12b;
		sine[2716] = 0x12a;
		sine[2717] = 0x128;
		sine[2718] = 0x127;
		sine[2719] = 0x125;
		sine[2720] = 0x123;
		sine[2721] = 0x122;
		sine[2722] = 0x120;
		sine[2723] = 0x11e;
		sine[2724] = 0x11d;
		sine[2725] = 0x11b;
		sine[2726] = 0x11a;
		sine[2727] = 0x118;
		sine[2728] = 0x117;
		sine[2729] = 0x115;
		sine[2730] = 0x113;
		sine[2731] = 0x112;
		sine[2732] = 0x110;
		sine[2733] = 0x10f;
		sine[2734] = 0x10d;
		sine[2735] = 0x10c;
		sine[2736] = 0x10a;
		sine[2737] = 0x108;
		sine[2738] = 0x107;
		sine[2739] = 0x105;
		sine[2740] = 0x104;
		sine[2741] = 0x102;
		sine[2742] = 0x101;
		sine[2743] = 0xff;
		sine[2744] = 0xfe;
		sine[2745] = 0xfc;
		sine[2746] = 0xfb;
		sine[2747] = 0xf9;
		sine[2748] = 0xf8;
		sine[2749] = 0xf6;
		sine[2750] = 0xf5;
		sine[2751] = 0xf3;
		sine[2752] = 0xf2;
		sine[2753] = 0xf0;
		sine[2754] = 0xef;
		sine[2755] = 0xed;
		sine[2756] = 0xec;
		sine[2757] = 0xea;
		sine[2758] = 0xe9;
		sine[2759] = 0xe8;
		sine[2760] = 0xe6;
		sine[2761] = 0xe5;
		sine[2762] = 0xe3;
		sine[2763] = 0xe2;
		sine[2764] = 0xe0;
		sine[2765] = 0xdf;
		sine[2766] = 0xdd;
		sine[2767] = 0xdc;
		sine[2768] = 0xdb;
		sine[2769] = 0xd9;
		sine[2770] = 0xd8;
		sine[2771] = 0xd6;
		sine[2772] = 0xd5;
		sine[2773] = 0xd4;
		sine[2774] = 0xd2;
		sine[2775] = 0xd1;
		sine[2776] = 0xcf;
		sine[2777] = 0xce;
		sine[2778] = 0xcd;
		sine[2779] = 0xcb;
		sine[2780] = 0xca;
		sine[2781] = 0xc9;
		sine[2782] = 0xc7;
		sine[2783] = 0xc6;
		sine[2784] = 0xc5;
		sine[2785] = 0xc3;
		sine[2786] = 0xc2;
		sine[2787] = 0xc1;
		sine[2788] = 0xbf;
		sine[2789] = 0xbe;
		sine[2790] = 0xbd;
		sine[2791] = 0xbb;
		sine[2792] = 0xba;
		sine[2793] = 0xb9;
		sine[2794] = 0xb7;
		sine[2795] = 0xb6;
		sine[2796] = 0xb5;
		sine[2797] = 0xb3;
		sine[2798] = 0xb2;
		sine[2799] = 0xb1;
		sine[2800] = 0xb0;
		sine[2801] = 0xae;
		sine[2802] = 0xad;
		sine[2803] = 0xac;
		sine[2804] = 0xab;
		sine[2805] = 0xa9;
		sine[2806] = 0xa8;
		sine[2807] = 0xa7;
		sine[2808] = 0xa6;
		sine[2809] = 0xa4;
		sine[2810] = 0xa3;
		sine[2811] = 0xa2;
		sine[2812] = 0xa1;
		sine[2813] = 0x9f;
		sine[2814] = 0x9e;
		sine[2815] = 0x9d;
		sine[2816] = 0x9c;
		sine[2817] = 0x9b;
		sine[2818] = 0x99;
		sine[2819] = 0x98;
		sine[2820] = 0x97;
		sine[2821] = 0x96;
		sine[2822] = 0x95;
		sine[2823] = 0x94;
		sine[2824] = 0x92;
		sine[2825] = 0x91;
		sine[2826] = 0x90;
		sine[2827] = 0x8f;
		sine[2828] = 0x8e;
		sine[2829] = 0x8d;
		sine[2830] = 0x8b;
		sine[2831] = 0x8a;
		sine[2832] = 0x89;
		sine[2833] = 0x88;
		sine[2834] = 0x87;
		sine[2835] = 0x86;
		sine[2836] = 0x85;
		sine[2837] = 0x84;
		sine[2838] = 0x82;
		sine[2839] = 0x81;
		sine[2840] = 0x80;
		sine[2841] = 0x7f;
		sine[2842] = 0x7e;
		sine[2843] = 0x7d;
		sine[2844] = 0x7c;
		sine[2845] = 0x7b;
		sine[2846] = 0x7a;
		sine[2847] = 0x79;
		sine[2848] = 0x78;
		sine[2849] = 0x77;
		sine[2850] = 0x76;
		sine[2851] = 0x75;
		sine[2852] = 0x73;
		sine[2853] = 0x72;
		sine[2854] = 0x71;
		sine[2855] = 0x70;
		sine[2856] = 0x6f;
		sine[2857] = 0x6e;
		sine[2858] = 0x6d;
		sine[2859] = 0x6c;
		sine[2860] = 0x6b;
		sine[2861] = 0x6a;
		sine[2862] = 0x69;
		sine[2863] = 0x68;
		sine[2864] = 0x67;
		sine[2865] = 0x66;
		sine[2866] = 0x65;
		sine[2867] = 0x64;
		sine[2868] = 0x63;
		sine[2869] = 0x62;
		sine[2870] = 0x62;
		sine[2871] = 0x61;
		sine[2872] = 0x60;
		sine[2873] = 0x5f;
		sine[2874] = 0x5e;
		sine[2875] = 0x5d;
		sine[2876] = 0x5c;
		sine[2877] = 0x5b;
		sine[2878] = 0x5a;
		sine[2879] = 0x59;
		sine[2880] = 0x58;
		sine[2881] = 0x57;
		sine[2882] = 0x56;
		sine[2883] = 0x55;
		sine[2884] = 0x55;
		sine[2885] = 0x54;
		sine[2886] = 0x53;
		sine[2887] = 0x52;
		sine[2888] = 0x51;
		sine[2889] = 0x50;
		sine[2890] = 0x4f;
		sine[2891] = 0x4e;
		sine[2892] = 0x4e;
		sine[2893] = 0x4d;
		sine[2894] = 0x4c;
		sine[2895] = 0x4b;
		sine[2896] = 0x4a;
		sine[2897] = 0x49;
		sine[2898] = 0x49;
		sine[2899] = 0x48;
		sine[2900] = 0x47;
		sine[2901] = 0x46;
		sine[2902] = 0x45;
		sine[2903] = 0x44;
		sine[2904] = 0x44;
		sine[2905] = 0x43;
		sine[2906] = 0x42;
		sine[2907] = 0x41;
		sine[2908] = 0x40;
		sine[2909] = 0x40;
		sine[2910] = 0x3f;
		sine[2911] = 0x3e;
		sine[2912] = 0x3d;
		sine[2913] = 0x3d;
		sine[2914] = 0x3c;
		sine[2915] = 0x3b;
		sine[2916] = 0x3a;
		sine[2917] = 0x3a;
		sine[2918] = 0x39;
		sine[2919] = 0x38;
		sine[2920] = 0x37;
		sine[2921] = 0x37;
		sine[2922] = 0x36;
		sine[2923] = 0x35;
		sine[2924] = 0x35;
		sine[2925] = 0x34;
		sine[2926] = 0x33;
		sine[2927] = 0x32;
		sine[2928] = 0x32;
		sine[2929] = 0x31;
		sine[2930] = 0x30;
		sine[2931] = 0x30;
		sine[2932] = 0x2f;
		sine[2933] = 0x2e;
		sine[2934] = 0x2e;
		sine[2935] = 0x2d;
		sine[2936] = 0x2c;
		sine[2937] = 0x2c;
		sine[2938] = 0x2b;
		sine[2939] = 0x2a;
		sine[2940] = 0x2a;
		sine[2941] = 0x29;
		sine[2942] = 0x29;
		sine[2943] = 0x28;
		sine[2944] = 0x27;
		sine[2945] = 0x27;
		sine[2946] = 0x26;
		sine[2947] = 0x26;
		sine[2948] = 0x25;
		sine[2949] = 0x24;
		sine[2950] = 0x24;
		sine[2951] = 0x23;
		sine[2952] = 0x23;
		sine[2953] = 0x22;
		sine[2954] = 0x21;
		sine[2955] = 0x21;
		sine[2956] = 0x20;
		sine[2957] = 0x20;
		sine[2958] = 0x1f;
		sine[2959] = 0x1f;
		sine[2960] = 0x1e;
		sine[2961] = 0x1e;
		sine[2962] = 0x1d;
		sine[2963] = 0x1d;
		sine[2964] = 0x1c;
		sine[2965] = 0x1c;
		sine[2966] = 0x1b;
		sine[2967] = 0x1b;
		sine[2968] = 0x1a;
		sine[2969] = 0x1a;
		sine[2970] = 0x19;
		sine[2971] = 0x19;
		sine[2972] = 0x18;
		sine[2973] = 0x18;
		sine[2974] = 0x17;
		sine[2975] = 0x17;
		sine[2976] = 0x16;
		sine[2977] = 0x16;
		sine[2978] = 0x15;
		sine[2979] = 0x15;
		sine[2980] = 0x14;
		sine[2981] = 0x14;
		sine[2982] = 0x13;
		sine[2983] = 0x13;
		sine[2984] = 0x13;
		sine[2985] = 0x12;
		sine[2986] = 0x12;
		sine[2987] = 0x11;
		sine[2988] = 0x11;
		sine[2989] = 0x11;
		sine[2990] = 0x10;
		sine[2991] = 0x10;
		sine[2992] = 0xf;
		sine[2993] = 0xf;
		sine[2994] = 0xf;
		sine[2995] = 0xe;
		sine[2996] = 0xe;
		sine[2997] = 0xe;
		sine[2998] = 0xd;
		sine[2999] = 0xd;
		sine[3000] = 0xc;
		sine[3001] = 0xc;
		sine[3002] = 0xc;
		sine[3003] = 0xb;
		sine[3004] = 0xb;
		sine[3005] = 0xb;
		sine[3006] = 0xa;
		sine[3007] = 0xa;
		sine[3008] = 0xa;
		sine[3009] = 0xa;
		sine[3010] = 0x9;
		sine[3011] = 0x9;
		sine[3012] = 0x9;
		sine[3013] = 0x8;
		sine[3014] = 0x8;
		sine[3015] = 0x8;
		sine[3016] = 0x8;
		sine[3017] = 0x7;
		sine[3018] = 0x7;
		sine[3019] = 0x7;
		sine[3020] = 0x7;
		sine[3021] = 0x6;
		sine[3022] = 0x6;
		sine[3023] = 0x6;
		sine[3024] = 0x6;
		sine[3025] = 0x5;
		sine[3026] = 0x5;
		sine[3027] = 0x5;
		sine[3028] = 0x5;
		sine[3029] = 0x4;
		sine[3030] = 0x4;
		sine[3031] = 0x4;
		sine[3032] = 0x4;
		sine[3033] = 0x4;
		sine[3034] = 0x3;
		sine[3035] = 0x3;
		sine[3036] = 0x3;
		sine[3037] = 0x3;
		sine[3038] = 0x3;
		sine[3039] = 0x3;
		sine[3040] = 0x2;
		sine[3041] = 0x2;
		sine[3042] = 0x2;
		sine[3043] = 0x2;
		sine[3044] = 0x2;
		sine[3045] = 0x2;
		sine[3046] = 0x2;
		sine[3047] = 0x2;
		sine[3048] = 0x1;
		sine[3049] = 0x1;
		sine[3050] = 0x1;
		sine[3051] = 0x1;
		sine[3052] = 0x1;
		sine[3053] = 0x1;
		sine[3054] = 0x1;
		sine[3055] = 0x1;
		sine[3056] = 0x1;
		sine[3057] = 0x1;
		sine[3058] = 0x0;
		sine[3059] = 0x0;
		sine[3060] = 0x0;
		sine[3061] = 0x0;
		sine[3062] = 0x0;
		sine[3063] = 0x0;
		sine[3064] = 0x0;
		sine[3065] = 0x0;
		sine[3066] = 0x0;
		sine[3067] = 0x0;
		sine[3068] = 0x0;
		sine[3069] = 0x0;
		sine[3070] = 0x0;
		sine[3071] = 0x0;
		sine[3072] = 0x0;
		sine[3073] = 0x0;
		sine[3074] = 0x0;
		sine[3075] = 0x0;
		sine[3076] = 0x0;
		sine[3077] = 0x0;
		sine[3078] = 0x0;
		sine[3079] = 0x0;
		sine[3080] = 0x0;
		sine[3081] = 0x0;
		sine[3082] = 0x0;
		sine[3083] = 0x0;
		sine[3084] = 0x0;
		sine[3085] = 0x0;
		sine[3086] = 0x0;
		sine[3087] = 0x1;
		sine[3088] = 0x1;
		sine[3089] = 0x1;
		sine[3090] = 0x1;
		sine[3091] = 0x1;
		sine[3092] = 0x1;
		sine[3093] = 0x1;
		sine[3094] = 0x1;
		sine[3095] = 0x1;
		sine[3096] = 0x1;
		sine[3097] = 0x2;
		sine[3098] = 0x2;
		sine[3099] = 0x2;
		sine[3100] = 0x2;
		sine[3101] = 0x2;
		sine[3102] = 0x2;
		sine[3103] = 0x2;
		sine[3104] = 0x2;
		sine[3105] = 0x3;
		sine[3106] = 0x3;
		sine[3107] = 0x3;
		sine[3108] = 0x3;
		sine[3109] = 0x3;
		sine[3110] = 0x3;
		sine[3111] = 0x4;
		sine[3112] = 0x4;
		sine[3113] = 0x4;
		sine[3114] = 0x4;
		sine[3115] = 0x4;
		sine[3116] = 0x5;
		sine[3117] = 0x5;
		sine[3118] = 0x5;
		sine[3119] = 0x5;
		sine[3120] = 0x6;
		sine[3121] = 0x6;
		sine[3122] = 0x6;
		sine[3123] = 0x6;
		sine[3124] = 0x7;
		sine[3125] = 0x7;
		sine[3126] = 0x7;
		sine[3127] = 0x7;
		sine[3128] = 0x8;
		sine[3129] = 0x8;
		sine[3130] = 0x8;
		sine[3131] = 0x8;
		sine[3132] = 0x9;
		sine[3133] = 0x9;
		sine[3134] = 0x9;
		sine[3135] = 0xa;
		sine[3136] = 0xa;
		sine[3137] = 0xa;
		sine[3138] = 0xa;
		sine[3139] = 0xb;
		sine[3140] = 0xb;
		sine[3141] = 0xb;
		sine[3142] = 0xc;
		sine[3143] = 0xc;
		sine[3144] = 0xc;
		sine[3145] = 0xd;
		sine[3146] = 0xd;
		sine[3147] = 0xe;
		sine[3148] = 0xe;
		sine[3149] = 0xe;
		sine[3150] = 0xf;
		sine[3151] = 0xf;
		sine[3152] = 0xf;
		sine[3153] = 0x10;
		sine[3154] = 0x10;
		sine[3155] = 0x11;
		sine[3156] = 0x11;
		sine[3157] = 0x11;
		sine[3158] = 0x12;
		sine[3159] = 0x12;
		sine[3160] = 0x13;
		sine[3161] = 0x13;
		sine[3162] = 0x13;
		sine[3163] = 0x14;
		sine[3164] = 0x14;
		sine[3165] = 0x15;
		sine[3166] = 0x15;
		sine[3167] = 0x16;
		sine[3168] = 0x16;
		sine[3169] = 0x17;
		sine[3170] = 0x17;
		sine[3171] = 0x18;
		sine[3172] = 0x18;
		sine[3173] = 0x19;
		sine[3174] = 0x19;
		sine[3175] = 0x1a;
		sine[3176] = 0x1a;
		sine[3177] = 0x1b;
		sine[3178] = 0x1b;
		sine[3179] = 0x1c;
		sine[3180] = 0x1c;
		sine[3181] = 0x1d;
		sine[3182] = 0x1d;
		sine[3183] = 0x1e;
		sine[3184] = 0x1e;
		sine[3185] = 0x1f;
		sine[3186] = 0x1f;
		sine[3187] = 0x20;
		sine[3188] = 0x20;
		sine[3189] = 0x21;
		sine[3190] = 0x21;
		sine[3191] = 0x22;
		sine[3192] = 0x23;
		sine[3193] = 0x23;
		sine[3194] = 0x24;
		sine[3195] = 0x24;
		sine[3196] = 0x25;
		sine[3197] = 0x26;
		sine[3198] = 0x26;
		sine[3199] = 0x27;
		sine[3200] = 0x27;
		sine[3201] = 0x28;
		sine[3202] = 0x29;
		sine[3203] = 0x29;
		sine[3204] = 0x2a;
		sine[3205] = 0x2a;
		sine[3206] = 0x2b;
		sine[3207] = 0x2c;
		sine[3208] = 0x2c;
		sine[3209] = 0x2d;
		sine[3210] = 0x2e;
		sine[3211] = 0x2e;
		sine[3212] = 0x2f;
		sine[3213] = 0x30;
		sine[3214] = 0x30;
		sine[3215] = 0x31;
		sine[3216] = 0x32;
		sine[3217] = 0x32;
		sine[3218] = 0x33;
		sine[3219] = 0x34;
		sine[3220] = 0x35;
		sine[3221] = 0x35;
		sine[3222] = 0x36;
		sine[3223] = 0x37;
		sine[3224] = 0x37;
		sine[3225] = 0x38;
		sine[3226] = 0x39;
		sine[3227] = 0x3a;
		sine[3228] = 0x3a;
		sine[3229] = 0x3b;
		sine[3230] = 0x3c;
		sine[3231] = 0x3d;
		sine[3232] = 0x3d;
		sine[3233] = 0x3e;
		sine[3234] = 0x3f;
		sine[3235] = 0x40;
		sine[3236] = 0x40;
		sine[3237] = 0x41;
		sine[3238] = 0x42;
		sine[3239] = 0x43;
		sine[3240] = 0x44;
		sine[3241] = 0x44;
		sine[3242] = 0x45;
		sine[3243] = 0x46;
		sine[3244] = 0x47;
		sine[3245] = 0x48;
		sine[3246] = 0x49;
		sine[3247] = 0x49;
		sine[3248] = 0x4a;
		sine[3249] = 0x4b;
		sine[3250] = 0x4c;
		sine[3251] = 0x4d;
		sine[3252] = 0x4e;
		sine[3253] = 0x4e;
		sine[3254] = 0x4f;
		sine[3255] = 0x50;
		sine[3256] = 0x51;
		sine[3257] = 0x52;
		sine[3258] = 0x53;
		sine[3259] = 0x54;
		sine[3260] = 0x55;
		sine[3261] = 0x55;
		sine[3262] = 0x56;
		sine[3263] = 0x57;
		sine[3264] = 0x58;
		sine[3265] = 0x59;
		sine[3266] = 0x5a;
		sine[3267] = 0x5b;
		sine[3268] = 0x5c;
		sine[3269] = 0x5d;
		sine[3270] = 0x5e;
		sine[3271] = 0x5f;
		sine[3272] = 0x60;
		sine[3273] = 0x61;
		sine[3274] = 0x62;
		sine[3275] = 0x62;
		sine[3276] = 0x63;
		sine[3277] = 0x64;
		sine[3278] = 0x65;
		sine[3279] = 0x66;
		sine[3280] = 0x67;
		sine[3281] = 0x68;
		sine[3282] = 0x69;
		sine[3283] = 0x6a;
		sine[3284] = 0x6b;
		sine[3285] = 0x6c;
		sine[3286] = 0x6d;
		sine[3287] = 0x6e;
		sine[3288] = 0x6f;
		sine[3289] = 0x70;
		sine[3290] = 0x71;
		sine[3291] = 0x72;
		sine[3292] = 0x73;
		sine[3293] = 0x75;
		sine[3294] = 0x76;
		sine[3295] = 0x77;
		sine[3296] = 0x78;
		sine[3297] = 0x79;
		sine[3298] = 0x7a;
		sine[3299] = 0x7b;
		sine[3300] = 0x7c;
		sine[3301] = 0x7d;
		sine[3302] = 0x7e;
		sine[3303] = 0x7f;
		sine[3304] = 0x80;
		sine[3305] = 0x81;
		sine[3306] = 0x82;
		sine[3307] = 0x84;
		sine[3308] = 0x85;
		sine[3309] = 0x86;
		sine[3310] = 0x87;
		sine[3311] = 0x88;
		sine[3312] = 0x89;
		sine[3313] = 0x8a;
		sine[3314] = 0x8b;
		sine[3315] = 0x8d;
		sine[3316] = 0x8e;
		sine[3317] = 0x8f;
		sine[3318] = 0x90;
		sine[3319] = 0x91;
		sine[3320] = 0x92;
		sine[3321] = 0x94;
		sine[3322] = 0x95;
		sine[3323] = 0x96;
		sine[3324] = 0x97;
		sine[3325] = 0x98;
		sine[3326] = 0x99;
		sine[3327] = 0x9b;
		sine[3328] = 0x9c;
		sine[3329] = 0x9d;
		sine[3330] = 0x9e;
		sine[3331] = 0x9f;
		sine[3332] = 0xa1;
		sine[3333] = 0xa2;
		sine[3334] = 0xa3;
		sine[3335] = 0xa4;
		sine[3336] = 0xa6;
		sine[3337] = 0xa7;
		sine[3338] = 0xa8;
		sine[3339] = 0xa9;
		sine[3340] = 0xab;
		sine[3341] = 0xac;
		sine[3342] = 0xad;
		sine[3343] = 0xae;
		sine[3344] = 0xb0;
		sine[3345] = 0xb1;
		sine[3346] = 0xb2;
		sine[3347] = 0xb3;
		sine[3348] = 0xb5;
		sine[3349] = 0xb6;
		sine[3350] = 0xb7;
		sine[3351] = 0xb9;
		sine[3352] = 0xba;
		sine[3353] = 0xbb;
		sine[3354] = 0xbd;
		sine[3355] = 0xbe;
		sine[3356] = 0xbf;
		sine[3357] = 0xc1;
		sine[3358] = 0xc2;
		sine[3359] = 0xc3;
		sine[3360] = 0xc5;
		sine[3361] = 0xc6;
		sine[3362] = 0xc7;
		sine[3363] = 0xc9;
		sine[3364] = 0xca;
		sine[3365] = 0xcb;
		sine[3366] = 0xcd;
		sine[3367] = 0xce;
		sine[3368] = 0xcf;
		sine[3369] = 0xd1;
		sine[3370] = 0xd2;
		sine[3371] = 0xd4;
		sine[3372] = 0xd5;
		sine[3373] = 0xd6;
		sine[3374] = 0xd8;
		sine[3375] = 0xd9;
		sine[3376] = 0xdb;
		sine[3377] = 0xdc;
		sine[3378] = 0xdd;
		sine[3379] = 0xdf;
		sine[3380] = 0xe0;
		sine[3381] = 0xe2;
		sine[3382] = 0xe3;
		sine[3383] = 0xe5;
		sine[3384] = 0xe6;
		sine[3385] = 0xe8;
		sine[3386] = 0xe9;
		sine[3387] = 0xea;
		sine[3388] = 0xec;
		sine[3389] = 0xed;
		sine[3390] = 0xef;
		sine[3391] = 0xf0;
		sine[3392] = 0xf2;
		sine[3393] = 0xf3;
		sine[3394] = 0xf5;
		sine[3395] = 0xf6;
		sine[3396] = 0xf8;
		sine[3397] = 0xf9;
		sine[3398] = 0xfb;
		sine[3399] = 0xfc;
		sine[3400] = 0xfe;
		sine[3401] = 0xff;
		sine[3402] = 0x101;
		sine[3403] = 0x102;
		sine[3404] = 0x104;
		sine[3405] = 0x105;
		sine[3406] = 0x107;
		sine[3407] = 0x108;
		sine[3408] = 0x10a;
		sine[3409] = 0x10c;
		sine[3410] = 0x10d;
		sine[3411] = 0x10f;
		sine[3412] = 0x110;
		sine[3413] = 0x112;
		sine[3414] = 0x113;
		sine[3415] = 0x115;
		sine[3416] = 0x117;
		sine[3417] = 0x118;
		sine[3418] = 0x11a;
		sine[3419] = 0x11b;
		sine[3420] = 0x11d;
		sine[3421] = 0x11e;
		sine[3422] = 0x120;
		sine[3423] = 0x122;
		sine[3424] = 0x123;
		sine[3425] = 0x125;
		sine[3426] = 0x127;
		sine[3427] = 0x128;
		sine[3428] = 0x12a;
		sine[3429] = 0x12b;
		sine[3430] = 0x12d;
		sine[3431] = 0x12f;
		sine[3432] = 0x130;
		sine[3433] = 0x132;
		sine[3434] = 0x134;
		sine[3435] = 0x135;
		sine[3436] = 0x137;
		sine[3437] = 0x139;
		sine[3438] = 0x13a;
		sine[3439] = 0x13c;
		sine[3440] = 0x13e;
		sine[3441] = 0x13f;
		sine[3442] = 0x141;
		sine[3443] = 0x143;
		sine[3444] = 0x144;
		sine[3445] = 0x146;
		sine[3446] = 0x148;
		sine[3447] = 0x14a;
		sine[3448] = 0x14b;
		sine[3449] = 0x14d;
		sine[3450] = 0x14f;
		sine[3451] = 0x150;
		sine[3452] = 0x152;
		sine[3453] = 0x154;
		sine[3454] = 0x156;
		sine[3455] = 0x157;
		sine[3456] = 0x159;
		sine[3457] = 0x15b;
		sine[3458] = 0x15d;
		sine[3459] = 0x15e;
		sine[3460] = 0x160;
		sine[3461] = 0x162;
		sine[3462] = 0x164;
		sine[3463] = 0x165;
		sine[3464] = 0x167;
		sine[3465] = 0x169;
		sine[3466] = 0x16b;
		sine[3467] = 0x16d;
		sine[3468] = 0x16e;
		sine[3469] = 0x170;
		sine[3470] = 0x172;
		sine[3471] = 0x174;
		sine[3472] = 0x175;
		sine[3473] = 0x177;
		sine[3474] = 0x179;
		sine[3475] = 0x17b;
		sine[3476] = 0x17d;
		sine[3477] = 0x17f;
		sine[3478] = 0x180;
		sine[3479] = 0x182;
		sine[3480] = 0x184;
		sine[3481] = 0x186;
		sine[3482] = 0x188;
		sine[3483] = 0x18a;
		sine[3484] = 0x18b;
		sine[3485] = 0x18d;
		sine[3486] = 0x18f;
		sine[3487] = 0x191;
		sine[3488] = 0x193;
		sine[3489] = 0x195;
		sine[3490] = 0x197;
		sine[3491] = 0x199;
		sine[3492] = 0x19a;
		sine[3493] = 0x19c;
		sine[3494] = 0x19e;
		sine[3495] = 0x1a0;
		sine[3496] = 0x1a2;
		sine[3497] = 0x1a4;
		sine[3498] = 0x1a6;
		sine[3499] = 0x1a8;
		sine[3500] = 0x1aa;
		sine[3501] = 0x1ac;
		sine[3502] = 0x1ae;
		sine[3503] = 0x1af;
		sine[3504] = 0x1b1;
		sine[3505] = 0x1b3;
		sine[3506] = 0x1b5;
		sine[3507] = 0x1b7;
		sine[3508] = 0x1b9;
		sine[3509] = 0x1bb;
		sine[3510] = 0x1bd;
		sine[3511] = 0x1bf;
		sine[3512] = 0x1c1;
		sine[3513] = 0x1c3;
		sine[3514] = 0x1c5;
		sine[3515] = 0x1c7;
		sine[3516] = 0x1c9;
		sine[3517] = 0x1cb;
		sine[3518] = 0x1cd;
		sine[3519] = 0x1cf;
		sine[3520] = 0x1d1;
		sine[3521] = 0x1d3;
		sine[3522] = 0x1d5;
		sine[3523] = 0x1d7;
		sine[3524] = 0x1d9;
		sine[3525] = 0x1db;
		sine[3526] = 0x1dd;
		sine[3527] = 0x1df;
		sine[3528] = 0x1e1;
		sine[3529] = 0x1e3;
		sine[3530] = 0x1e5;
		sine[3531] = 0x1e7;
		sine[3532] = 0x1e9;
		sine[3533] = 0x1eb;
		sine[3534] = 0x1ed;
		sine[3535] = 0x1ef;
		sine[3536] = 0x1f1;
		sine[3537] = 0x1f3;
		sine[3538] = 0x1f5;
		sine[3539] = 0x1f7;
		sine[3540] = 0x1f9;
		sine[3541] = 0x1fb;
		sine[3542] = 0x1fd;
		sine[3543] = 0x200;
		sine[3544] = 0x202;
		sine[3545] = 0x204;
		sine[3546] = 0x206;
		sine[3547] = 0x208;
		sine[3548] = 0x20a;
		sine[3549] = 0x20c;
		sine[3550] = 0x20e;
		sine[3551] = 0x210;
		sine[3552] = 0x212;
		sine[3553] = 0x215;
		sine[3554] = 0x217;
		sine[3555] = 0x219;
		sine[3556] = 0x21b;
		sine[3557] = 0x21d;
		sine[3558] = 0x21f;
		sine[3559] = 0x221;
		sine[3560] = 0x223;
		sine[3561] = 0x226;
		sine[3562] = 0x228;
		sine[3563] = 0x22a;
		sine[3564] = 0x22c;
		sine[3565] = 0x22e;
		sine[3566] = 0x230;
		sine[3567] = 0x232;
		sine[3568] = 0x235;
		sine[3569] = 0x237;
		sine[3570] = 0x239;
		sine[3571] = 0x23b;
		sine[3572] = 0x23d;
		sine[3573] = 0x23f;
		sine[3574] = 0x242;
		sine[3575] = 0x244;
		sine[3576] = 0x246;
		sine[3577] = 0x248;
		sine[3578] = 0x24a;
		sine[3579] = 0x24d;
		sine[3580] = 0x24f;
		sine[3581] = 0x251;
		sine[3582] = 0x253;
		sine[3583] = 0x255;
		sine[3584] = 0x258;
		sine[3585] = 0x25a;
		sine[3586] = 0x25c;
		sine[3587] = 0x25e;
		sine[3588] = 0x261;
		sine[3589] = 0x263;
		sine[3590] = 0x265;
		sine[3591] = 0x267;
		sine[3592] = 0x26a;
		sine[3593] = 0x26c;
		sine[3594] = 0x26e;
		sine[3595] = 0x270;
		sine[3596] = 0x273;
		sine[3597] = 0x275;
		sine[3598] = 0x277;
		sine[3599] = 0x279;
		sine[3600] = 0x27c;
		sine[3601] = 0x27e;
		sine[3602] = 0x280;
		sine[3603] = 0x283;
		sine[3604] = 0x285;
		sine[3605] = 0x287;
		sine[3606] = 0x289;
		sine[3607] = 0x28c;
		sine[3608] = 0x28e;
		sine[3609] = 0x290;
		sine[3610] = 0x293;
		sine[3611] = 0x295;
		sine[3612] = 0x297;
		sine[3613] = 0x29a;
		sine[3614] = 0x29c;
		sine[3615] = 0x29e;
		sine[3616] = 0x2a0;
		sine[3617] = 0x2a3;
		sine[3618] = 0x2a5;
		sine[3619] = 0x2a7;
		sine[3620] = 0x2aa;
		sine[3621] = 0x2ac;
		sine[3622] = 0x2af;
		sine[3623] = 0x2b1;
		sine[3624] = 0x2b3;
		sine[3625] = 0x2b6;
		sine[3626] = 0x2b8;
		sine[3627] = 0x2ba;
		sine[3628] = 0x2bd;
		sine[3629] = 0x2bf;
		sine[3630] = 0x2c1;
		sine[3631] = 0x2c4;
		sine[3632] = 0x2c6;
		sine[3633] = 0x2c9;
		sine[3634] = 0x2cb;
		sine[3635] = 0x2cd;
		sine[3636] = 0x2d0;
		sine[3637] = 0x2d2;
		sine[3638] = 0x2d4;
		sine[3639] = 0x2d7;
		sine[3640] = 0x2d9;
		sine[3641] = 0x2dc;
		sine[3642] = 0x2de;
		sine[3643] = 0x2e0;
		sine[3644] = 0x2e3;
		sine[3645] = 0x2e5;
		sine[3646] = 0x2e8;
		sine[3647] = 0x2ea;
		sine[3648] = 0x2ed;
		sine[3649] = 0x2ef;
		sine[3650] = 0x2f1;
		sine[3651] = 0x2f4;
		sine[3652] = 0x2f6;
		sine[3653] = 0x2f9;
		sine[3654] = 0x2fb;
		sine[3655] = 0x2fe;
		sine[3656] = 0x300;
		sine[3657] = 0x303;
		sine[3658] = 0x305;
		sine[3659] = 0x307;
		sine[3660] = 0x30a;
		sine[3661] = 0x30c;
		sine[3662] = 0x30f;
		sine[3663] = 0x311;
		sine[3664] = 0x314;
		sine[3665] = 0x316;
		sine[3666] = 0x319;
		sine[3667] = 0x31b;
		sine[3668] = 0x31e;
		sine[3669] = 0x320;
		sine[3670] = 0x323;
		sine[3671] = 0x325;
		sine[3672] = 0x328;
		sine[3673] = 0x32a;
		sine[3674] = 0x32d;
		sine[3675] = 0x32f;
		sine[3676] = 0x332;
		sine[3677] = 0x334;
		sine[3678] = 0x337;
		sine[3679] = 0x339;
		sine[3680] = 0x33c;
		sine[3681] = 0x33e;
		sine[3682] = 0x341;
		sine[3683] = 0x343;
		sine[3684] = 0x346;
		sine[3685] = 0x348;
		sine[3686] = 0x34b;
		sine[3687] = 0x34e;
		sine[3688] = 0x350;
		sine[3689] = 0x353;
		sine[3690] = 0x355;
		sine[3691] = 0x358;
		sine[3692] = 0x35a;
		sine[3693] = 0x35d;
		sine[3694] = 0x35f;
		sine[3695] = 0x362;
		sine[3696] = 0x365;
		sine[3697] = 0x367;
		sine[3698] = 0x36a;
		sine[3699] = 0x36c;
		sine[3700] = 0x36f;
		sine[3701] = 0x371;
		sine[3702] = 0x374;
		sine[3703] = 0x377;
		sine[3704] = 0x379;
		sine[3705] = 0x37c;
		sine[3706] = 0x37e;
		sine[3707] = 0x381;
		sine[3708] = 0x384;
		sine[3709] = 0x386;
		sine[3710] = 0x389;
		sine[3711] = 0x38b;
		sine[3712] = 0x38e;
		sine[3713] = 0x391;
		sine[3714] = 0x393;
		sine[3715] = 0x396;
		sine[3716] = 0x398;
		sine[3717] = 0x39b;
		sine[3718] = 0x39e;
		sine[3719] = 0x3a0;
		sine[3720] = 0x3a3;
		sine[3721] = 0x3a6;
		sine[3722] = 0x3a8;
		sine[3723] = 0x3ab;
		sine[3724] = 0x3ad;
		sine[3725] = 0x3b0;
		sine[3726] = 0x3b3;
		sine[3727] = 0x3b5;
		sine[3728] = 0x3b8;
		sine[3729] = 0x3bb;
		sine[3730] = 0x3bd;
		sine[3731] = 0x3c0;
		sine[3732] = 0x3c3;
		sine[3733] = 0x3c5;
		sine[3734] = 0x3c8;
		sine[3735] = 0x3cb;
		sine[3736] = 0x3cd;
		sine[3737] = 0x3d0;
		sine[3738] = 0x3d3;
		sine[3739] = 0x3d5;
		sine[3740] = 0x3d8;
		sine[3741] = 0x3db;
		sine[3742] = 0x3dd;
		sine[3743] = 0x3e0;
		sine[3744] = 0x3e3;
		sine[3745] = 0x3e6;
		sine[3746] = 0x3e8;
		sine[3747] = 0x3eb;
		sine[3748] = 0x3ee;
		sine[3749] = 0x3f0;
		sine[3750] = 0x3f3;
		sine[3751] = 0x3f6;
		sine[3752] = 0x3f9;
		sine[3753] = 0x3fb;
		sine[3754] = 0x3fe;
		sine[3755] = 0x401;
		sine[3756] = 0x403;
		sine[3757] = 0x406;
		sine[3758] = 0x409;
		sine[3759] = 0x40c;
		sine[3760] = 0x40e;
		sine[3761] = 0x411;
		sine[3762] = 0x414;
		sine[3763] = 0x416;
		sine[3764] = 0x419;
		sine[3765] = 0x41c;
		sine[3766] = 0x41f;
		sine[3767] = 0x421;
		sine[3768] = 0x424;
		sine[3769] = 0x427;
		sine[3770] = 0x42a;
		sine[3771] = 0x42c;
		sine[3772] = 0x42f;
		sine[3773] = 0x432;
		sine[3774] = 0x435;
		sine[3775] = 0x438;
		sine[3776] = 0x43a;
		sine[3777] = 0x43d;
		sine[3778] = 0x440;
		sine[3779] = 0x443;
		sine[3780] = 0x445;
		sine[3781] = 0x448;
		sine[3782] = 0x44b;
		sine[3783] = 0x44e;
		sine[3784] = 0x451;
		sine[3785] = 0x453;
		sine[3786] = 0x456;
		sine[3787] = 0x459;
		sine[3788] = 0x45c;
		sine[3789] = 0x45f;
		sine[3790] = 0x461;
		sine[3791] = 0x464;
		sine[3792] = 0x467;
		sine[3793] = 0x46a;
		sine[3794] = 0x46d;
		sine[3795] = 0x46f;
		sine[3796] = 0x472;
		sine[3797] = 0x475;
		sine[3798] = 0x478;
		sine[3799] = 0x47b;
		sine[3800] = 0x47d;
		sine[3801] = 0x480;
		sine[3802] = 0x483;
		sine[3803] = 0x486;
		sine[3804] = 0x489;
		sine[3805] = 0x48c;
		sine[3806] = 0x48e;
		sine[3807] = 0x491;
		sine[3808] = 0x494;
		sine[3809] = 0x497;
		sine[3810] = 0x49a;
		sine[3811] = 0x49d;
		sine[3812] = 0x49f;
		sine[3813] = 0x4a2;
		sine[3814] = 0x4a5;
		sine[3815] = 0x4a8;
		sine[3816] = 0x4ab;
		sine[3817] = 0x4ae;
		sine[3818] = 0x4b1;
		sine[3819] = 0x4b3;
		sine[3820] = 0x4b6;
		sine[3821] = 0x4b9;
		sine[3822] = 0x4bc;
		sine[3823] = 0x4bf;
		sine[3824] = 0x4c2;
		sine[3825] = 0x4c5;
		sine[3826] = 0x4c8;
		sine[3827] = 0x4ca;
		sine[3828] = 0x4cd;
		sine[3829] = 0x4d0;
		sine[3830] = 0x4d3;
		sine[3831] = 0x4d6;
		sine[3832] = 0x4d9;
		sine[3833] = 0x4dc;
		sine[3834] = 0x4df;
		sine[3835] = 0x4e1;
		sine[3836] = 0x4e4;
		sine[3837] = 0x4e7;
		sine[3838] = 0x4ea;
		sine[3839] = 0x4ed;
		sine[3840] = 0x4f0;
		sine[3841] = 0x4f3;
		sine[3842] = 0x4f6;
		sine[3843] = 0x4f9;
		sine[3844] = 0x4fc;
		sine[3845] = 0x4fe;
		sine[3846] = 0x501;
		sine[3847] = 0x504;
		sine[3848] = 0x507;
		sine[3849] = 0x50a;
		sine[3850] = 0x50d;
		sine[3851] = 0x510;
		sine[3852] = 0x513;
		sine[3853] = 0x516;
		sine[3854] = 0x519;
		sine[3855] = 0x51c;
		sine[3856] = 0x51f;
		sine[3857] = 0x522;
		sine[3858] = 0x524;
		sine[3859] = 0x527;
		sine[3860] = 0x52a;
		sine[3861] = 0x52d;
		sine[3862] = 0x530;
		sine[3863] = 0x533;
		sine[3864] = 0x536;
		sine[3865] = 0x539;
		sine[3866] = 0x53c;
		sine[3867] = 0x53f;
		sine[3868] = 0x542;
		sine[3869] = 0x545;
		sine[3870] = 0x548;
		sine[3871] = 0x54b;
		sine[3872] = 0x54e;
		sine[3873] = 0x551;
		sine[3874] = 0x554;
		sine[3875] = 0x557;
		sine[3876] = 0x55a;
		sine[3877] = 0x55d;
		sine[3878] = 0x55f;
		sine[3879] = 0x562;
		sine[3880] = 0x565;
		sine[3881] = 0x568;
		sine[3882] = 0x56b;
		sine[3883] = 0x56e;
		sine[3884] = 0x571;
		sine[3885] = 0x574;
		sine[3886] = 0x577;
		sine[3887] = 0x57a;
		sine[3888] = 0x57d;
		sine[3889] = 0x580;
		sine[3890] = 0x583;
		sine[3891] = 0x586;
		sine[3892] = 0x589;
		sine[3893] = 0x58c;
		sine[3894] = 0x58f;
		sine[3895] = 0x592;
		sine[3896] = 0x595;
		sine[3897] = 0x598;
		sine[3898] = 0x59b;
		sine[3899] = 0x59e;
		sine[3900] = 0x5a1;
		sine[3901] = 0x5a4;
		sine[3902] = 0x5a7;
		sine[3903] = 0x5aa;
		sine[3904] = 0x5ad;
		sine[3905] = 0x5b0;
		sine[3906] = 0x5b3;
		sine[3907] = 0x5b6;
		sine[3908] = 0x5b9;
		sine[3909] = 0x5bc;
		sine[3910] = 0x5bf;
		sine[3911] = 0x5c2;
		sine[3912] = 0x5c5;
		sine[3913] = 0x5c8;
		sine[3914] = 0x5cb;
		sine[3915] = 0x5ce;
		sine[3916] = 0x5d1;
		sine[3917] = 0x5d4;
		sine[3918] = 0x5d7;
		sine[3919] = 0x5da;
		sine[3920] = 0x5dd;
		sine[3921] = 0x5e0;
		sine[3922] = 0x5e3;
		sine[3923] = 0x5e6;
		sine[3924] = 0x5ea;
		sine[3925] = 0x5ed;
		sine[3926] = 0x5f0;
		sine[3927] = 0x5f3;
		sine[3928] = 0x5f6;
		sine[3929] = 0x5f9;
		sine[3930] = 0x5fc;
		sine[3931] = 0x5ff;
		sine[3932] = 0x602;
		sine[3933] = 0x605;
		sine[3934] = 0x608;
		sine[3935] = 0x60b;
		sine[3936] = 0x60e;
		sine[3937] = 0x611;
		sine[3938] = 0x614;
		sine[3939] = 0x617;
		sine[3940] = 0x61a;
		sine[3941] = 0x61d;
		sine[3942] = 0x620;
		sine[3943] = 0x623;
		sine[3944] = 0x626;
		sine[3945] = 0x629;
		sine[3946] = 0x62d;
		sine[3947] = 0x630;
		sine[3948] = 0x633;
		sine[3949] = 0x636;
		sine[3950] = 0x639;
		sine[3951] = 0x63c;
		sine[3952] = 0x63f;
		sine[3953] = 0x642;
		sine[3954] = 0x645;
		sine[3955] = 0x648;
		sine[3956] = 0x64b;
		sine[3957] = 0x64e;
		sine[3958] = 0x651;
		sine[3959] = 0x654;
		sine[3960] = 0x657;
		sine[3961] = 0x65b;
		sine[3962] = 0x65e;
		sine[3963] = 0x661;
		sine[3964] = 0x664;
		sine[3965] = 0x667;
		sine[3966] = 0x66a;
		sine[3967] = 0x66d;
		sine[3968] = 0x670;
		sine[3969] = 0x673;
		sine[3970] = 0x676;
		sine[3971] = 0x679;
		sine[3972] = 0x67c;
		sine[3973] = 0x67f;
		sine[3974] = 0x683;
		sine[3975] = 0x686;
		sine[3976] = 0x689;
		sine[3977] = 0x68c;
		sine[3978] = 0x68f;
		sine[3979] = 0x692;
		sine[3980] = 0x695;
		sine[3981] = 0x698;
		sine[3982] = 0x69b;
		sine[3983] = 0x69e;
		sine[3984] = 0x6a1;
		sine[3985] = 0x6a5;
		sine[3986] = 0x6a8;
		sine[3987] = 0x6ab;
		sine[3988] = 0x6ae;
		sine[3989] = 0x6b1;
		sine[3990] = 0x6b4;
		sine[3991] = 0x6b7;
		sine[3992] = 0x6ba;
		sine[3993] = 0x6bd;
		sine[3994] = 0x6c0;
		sine[3995] = 0x6c4;
		sine[3996] = 0x6c7;
		sine[3997] = 0x6ca;
		sine[3998] = 0x6cd;
		sine[3999] = 0x6d0;
		sine[4000] = 0x6d3;
		sine[4001] = 0x6d6;
		sine[4002] = 0x6d9;
		sine[4003] = 0x6dc;
		sine[4004] = 0x6e0;
		sine[4005] = 0x6e3;
		sine[4006] = 0x6e6;
		sine[4007] = 0x6e9;
		sine[4008] = 0x6ec;
		sine[4009] = 0x6ef;
		sine[4010] = 0x6f2;
		sine[4011] = 0x6f5;
		sine[4012] = 0x6f8;
		sine[4013] = 0x6fc;
		sine[4014] = 0x6ff;
		sine[4015] = 0x702;
		sine[4016] = 0x705;
		sine[4017] = 0x708;
		sine[4018] = 0x70b;
		sine[4019] = 0x70e;
		sine[4020] = 0x711;
		sine[4021] = 0x714;
		sine[4022] = 0x718;
		sine[4023] = 0x71b;
		sine[4024] = 0x71e;
		sine[4025] = 0x721;
		sine[4026] = 0x724;
		sine[4027] = 0x727;
		sine[4028] = 0x72a;
		sine[4029] = 0x72d;
		sine[4030] = 0x731;
		sine[4031] = 0x734;
		sine[4032] = 0x737;
		sine[4033] = 0x73a;
		sine[4034] = 0x73d;
		sine[4035] = 0x740;
		sine[4036] = 0x743;
		sine[4037] = 0x746;
		sine[4038] = 0x74a;
		sine[4039] = 0x74d;
		sine[4040] = 0x750;
		sine[4041] = 0x753;
		sine[4042] = 0x756;
		sine[4043] = 0x759;
		sine[4044] = 0x75c;
		sine[4045] = 0x75f;
		sine[4046] = 0x763;
		sine[4047] = 0x766;
		sine[4048] = 0x769;
		sine[4049] = 0x76c;
		sine[4050] = 0x76f;
		sine[4051] = 0x772;
		sine[4052] = 0x775;
		sine[4053] = 0x779;
		sine[4054] = 0x77c;
		sine[4055] = 0x77f;
		sine[4056] = 0x782;
		sine[4057] = 0x785;
		sine[4058] = 0x788;
		sine[4059] = 0x78b;
		sine[4060] = 0x78e;
		sine[4061] = 0x792;
		sine[4062] = 0x795;
		sine[4063] = 0x798;
		sine[4064] = 0x79b;
		sine[4065] = 0x79e;
		sine[4066] = 0x7a1;
		sine[4067] = 0x7a4;
		sine[4068] = 0x7a8;
		sine[4069] = 0x7ab;
		sine[4070] = 0x7ae;
		sine[4071] = 0x7b1;
		sine[4072] = 0x7b4;
		sine[4073] = 0x7b7;
		sine[4074] = 0x7ba;
		sine[4075] = 0x7be;
		sine[4076] = 0x7c1;
		sine[4077] = 0x7c4;
		sine[4078] = 0x7c7;
		sine[4079] = 0x7ca;
		sine[4080] = 0x7cd;
		sine[4081] = 0x7d0;
		sine[4082] = 0x7d4;
		sine[4083] = 0x7d7;
		sine[4084] = 0x7da;
		sine[4085] = 0x7dd;
		sine[4086] = 0x7e0;
		sine[4087] = 0x7e3;
		sine[4088] = 0x7e6;
		sine[4089] = 0x7ea;
		sine[4090] = 0x7ed;
		sine[4091] = 0x7f0;
		sine[4092] = 0x7f3;
		sine[4093] = 0x7f6;
		sine[4094] = 0x7f9;
		sine[4095] = 0x7fc;
*/


/*		// 16kHz samples
		sine[0]=2198;
		sine[1]=2370;
		sine[2]=2539;
		sine[3]=2706;
		sine[4]=2868;
		sine[5]=3023;
		sine[6]=3170;
		sine[7]=3308;
		sine[8]=3435;
		sine[9]=3551;
		sine[10]=3653;
		sine[11]=3741;
		sine[12]=3815;
		sine[13]=3873;
		sine[14]=3914;
		sine[15]=3940;
		sine[16]=3948;
		sine[17]=3940;
		sine[18]=3914;
		sine[19]=3873;
		sine[20]=3815;
		sine[21]=3741;
		sine[22]=3653;
		sine[23]=3551;
		sine[24]=3435;
		sine[25]=3308;
		sine[26]=3170;
		sine[27]=3023;
		sine[28]=2868;
		sine[29]=2706;
		sine[30]=2539;
		sine[31]=2370;
		sine[32]=2198;
		sine[33]=2026;
		sine[34]=1857;
		sine[35]=1690;
		sine[36]=1528;
		sine[37]=1373;
		sine[38]=1226;
		sine[39]=1088;
		sine[40]=961;
		sine[41]=845;
		sine[42]=743;
		sine[43]=655;
		sine[44]=581;
		sine[45]=523;
		sine[46]=482;
		sine[47]=456;
		sine[48]=448;
		sine[49]=456;
		sine[50]=482;
		sine[51]=523;
		sine[52]=581;
		sine[53]=655;
		sine[54]=743;
		sine[55]=845;
		sine[56]=961;
		sine[57]=1088;
		sine[58]=1226;
		sine[59]=1373;
		sine[60]=1528;
		sine[61]=1690;
		sine[62]=1857;
		sine[63]=2026;
		sine[64]=2198;
		sine[65]=2370;
		sine[66]=2539;
		sine[67]=2706;
		sine[68]=2868;
		sine[69]=3023;
		sine[70]=3170;
		sine[71]=3308;
		sine[72]=3435;
		sine[73]=3551;
		sine[74]=3653;
		sine[75]=3741;
		sine[76]=3815;
		sine[77]=3873;
		sine[78]=3914;
		sine[79]=3940;
		sine[80]=3948;
		sine[81]=3940;
		sine[82]=3914;
		sine[83]=3873;
		sine[84]=3815;
		sine[85]=3741;
		sine[86]=3653;
		sine[87]=3551;
		sine[88]=3435;
		sine[89]=3308;
		sine[90]=3170;
		sine[91]=3023;
		sine[92]=2868;
		sine[93]=2706;
		sine[94]=2539;
		sine[95]=2370;
		sine[96]=2198;
		sine[97]=2026;
		sine[98]=1857;
		sine[99]=1690;
		sine[100]=1528;
		sine[101]=1373;
		sine[102]=1226;
		sine[103]=1088;
		sine[104]=961;
		sine[105]=845;
		sine[106]=743;
		sine[107]=655;
		sine[108]=581;
		sine[109]=523;
		sine[110]=482;
		sine[111]=456;
		sine[112]=448;
		sine[113]=456;
		sine[114]=482;
		sine[115]=523;
		sine[116]=581;
		sine[117]=655;
		sine[118]=743;
		sine[119]=845;
		sine[120]=961;
		sine[121]=1088;
		sine[122]=1226;
		sine[123]=1373;
		sine[124]=1528;
		sine[125]=1690;
		sine[126]=1857;
		sine[127]=2026;
		sine[128]=2198;
		sine[129]=2370;
		sine[130]=2539;
		sine[131]=2706;
		sine[132]=2868;
		sine[133]=3023;
		sine[134]=3170;
		sine[135]=3308;
		sine[136]=3435;
		sine[137]=3551;
		sine[138]=3653;
		sine[139]=3741;
		sine[140]=3815;
		sine[141]=3873;
		sine[142]=3914;
		sine[143]=3940;
		sine[144]=3948;
		sine[145]=3940;
		sine[146]=3914;
		sine[147]=3873;
		sine[148]=3815;
		sine[149]=3741;
		sine[150]=3653;
		sine[151]=3551;
		sine[152]=3435;
		sine[153]=3308;
		sine[154]=3170;
		sine[155]=3023;
		sine[156]=2868;
		sine[157]=2706;
		sine[158]=2539;
		sine[159]=2370;
		sine[160]=2198;
		sine[161]=2026;
		sine[162]=1857;
		sine[163]=1690;
		sine[164]=1528;
		sine[165]=1373;
		sine[166]=1226;
		sine[167]=1088;
		sine[168]=961;
		sine[169]=845;
		sine[170]=743;
		sine[171]=655;
		sine[172]=581;
		sine[173]=523;
		sine[174]=482;
		sine[175]=456;
		sine[176]=448;
		sine[177]=456;
		sine[178]=482;
		sine[179]=523;
		sine[180]=581;
		sine[181]=655;
		sine[182]=743;
		sine[183]=845;
		sine[184]=961;
		sine[185]=1088;
		sine[186]=1226;
		sine[187]=1373;
		sine[188]=1528;
		sine[189]=1690;
		sine[190]=1857;
		sine[191]=2026;
		sine[192]=2198;
		sine[193]=2370;
		sine[194]=2539;
		sine[195]=2706;
		sine[196]=2868;
		sine[197]=3023;
		sine[198]=3170;
		sine[199]=3308;
		sine[200]=3435;
		sine[201]=3551;
		sine[202]=3653;
		sine[203]=3741;
		sine[204]=3815;
		sine[205]=3873;
		sine[206]=3914;
		sine[207]=3940;
		sine[208]=3948;
		sine[209]=3940;
		sine[210]=3914;
		sine[211]=3873;
		sine[212]=3815;
		sine[213]=3741;
		sine[214]=3653;
		sine[215]=3551;
		sine[216]=3435;
		sine[217]=3308;
		sine[218]=3170;
		sine[219]=3023;
		sine[220]=2868;
		sine[221]=2706;
		sine[222]=2539;
		sine[223]=2370;
		sine[224]=2198;
		sine[225]=2026;
		sine[226]=1857;
		sine[227]=1690;
		sine[228]=1528;
		sine[229]=1373;
		sine[230]=1226;
		sine[231]=1088;
		sine[232]=961;
		sine[233]=845;
		sine[234]=743;
		sine[235]=655;
		sine[236]=581;
		sine[237]=523;
		sine[238]=482;
		sine[239]=456;
		sine[240]=448;
		sine[241]=456;
		sine[242]=482;
		sine[243]=523;
		sine[244]=581;
		sine[245]=655;
		sine[246]=743;
		sine[247]=845;
		sine[248]=961;
		sine[249]=1088;
		sine[250]=1226;
		sine[251]=1373;
		sine[252]=1528;
		sine[253]=1690;
		sine[254]=1857;
		sine[255]=2026;
		sine[256]=2198;
		sine[257]=2370;
		sine[258]=2539;
		sine[259]=2706;
		sine[260]=2868;
		sine[261]=3023;
		sine[262]=3170;
		sine[263]=3308;
		sine[264]=3435;
		sine[265]=3551;
		sine[266]=3653;
		sine[267]=3741;
		sine[268]=3815;
		sine[269]=3873;
		sine[270]=3914;
		sine[271]=3940;
		sine[272]=3948;
		sine[273]=3940;
		sine[274]=3914;
		sine[275]=3873;
		sine[276]=3815;
		sine[277]=3741;
		sine[278]=3653;
		sine[279]=3551;
		sine[280]=3435;
		sine[281]=3308;
		sine[282]=3170;
		sine[283]=3023;
		sine[284]=2868;
		sine[285]=2706;
		sine[286]=2539;
		sine[287]=2370;
		sine[288]=2198;
		sine[289]=2026;
		sine[290]=1857;
		sine[291]=1690;
		sine[292]=1528;
		sine[293]=1373;
		sine[294]=1226;
		sine[295]=1088;
		sine[296]=961;
		sine[297]=845;
		sine[298]=743;
		sine[299]=655;
		sine[300]=581;
		sine[301]=523;
		sine[302]=482;
		sine[303]=456;
		sine[304]=448;
		sine[305]=456;
		sine[306]=482;
		sine[307]=523;
		sine[308]=581;
		sine[309]=655;
		sine[310]=743;
		sine[311]=845;
		sine[312]=961;
		sine[313]=1088;
		sine[314]=1226;
		sine[315]=1373;
		sine[316]=1528;
		sine[317]=1690;
		sine[318]=1857;
		sine[319]=2026;
		sine[320]=2198;
		sine[321]=2370;
		sine[322]=2539;
		sine[323]=2706;
		sine[324]=2868;
		sine[325]=3023;
		sine[326]=3170;
		sine[327]=3308;
		sine[328]=3435;
		sine[329]=3551;
		sine[330]=3653;
		sine[331]=3741;
		sine[332]=3815;
		sine[333]=3873;
		sine[334]=3914;
		sine[335]=3940;
		sine[336]=3948;
		sine[337]=3940;
		sine[338]=3914;
		sine[339]=3873;
		sine[340]=3815;
		sine[341]=3741;
		sine[342]=3653;
		sine[343]=3551;
		sine[344]=3435;
		sine[345]=3308;
		sine[346]=3170;
		sine[347]=3023;
		sine[348]=2868;
		sine[349]=2706;
		sine[350]=2539;
		sine[351]=2370;
		sine[352]=2198;
		sine[353]=2026;
		sine[354]=1857;
		sine[355]=1690;
		sine[356]=1528;
		sine[357]=1373;
		sine[358]=1226;
		sine[359]=1088;
		sine[360]=961;
		sine[361]=845;
		sine[362]=743;
		sine[363]=655;
		sine[364]=581;
		sine[365]=523;
		sine[366]=482;
		sine[367]=456;
		sine[368]=448;
		sine[369]=456;
		sine[370]=482;
		sine[371]=523;
		sine[372]=581;
		sine[373]=655;
		sine[374]=743;
		sine[375]=845;
		sine[376]=961;
		sine[377]=1088;
		sine[378]=1226;
		sine[379]=1373;
		sine[380]=1528;
		sine[381]=1690;
		sine[382]=1857;
		sine[383]=2026;
		sine[384]=2198;
		sine[385]=2370;
		sine[386]=2539;
		sine[387]=2706;
		sine[388]=2868;
		sine[389]=3023;
		sine[390]=3170;
		sine[391]=3308;
		sine[392]=3435;
		sine[393]=3551;
		sine[394]=3653;
		sine[395]=3741;
		sine[396]=3815;
		sine[397]=3873;
		sine[398]=3914;
		sine[399]=3940;
		sine[400]=3948;
		sine[401]=3940;
		sine[402]=3914;
		sine[403]=3873;
		sine[404]=3815;
		sine[405]=3741;
		sine[406]=3653;
		sine[407]=3551;
		sine[408]=3435;
		sine[409]=3308;
		sine[410]=3170;
		sine[411]=3023;
		sine[412]=2868;
		sine[413]=2706;
		sine[414]=2539;
		sine[415]=2370;
		sine[416]=2198;
		sine[417]=2026;
		sine[418]=1857;
		sine[419]=1690;
		sine[420]=1528;
		sine[421]=1373;
		sine[422]=1226;
		sine[423]=1088;
		sine[424]=961;
		sine[425]=845;
		sine[426]=743;
		sine[427]=655;
		sine[428]=581;
		sine[429]=523;
		sine[430]=482;
		sine[431]=456;
		sine[432]=448;
		sine[433]=456;
		sine[434]=482;
		sine[435]=523;
		sine[436]=581;
		sine[437]=655;
		sine[438]=743;
		sine[439]=845;
		sine[440]=961;
		sine[441]=1088;
		sine[442]=1226;
		sine[443]=1373;
		sine[444]=1528;
		sine[445]=1690;
		sine[446]=1857;
		sine[447]=2026;
		sine[448]=2198;
		sine[449]=2370;
		sine[450]=2539;
		sine[451]=2706;
		sine[452]=2868;
		sine[453]=3023;
		sine[454]=3170;
		sine[455]=3308;
		sine[456]=3435;
		sine[457]=3551;
		sine[458]=3653;
		sine[459]=3741;
		sine[460]=3815;
		sine[461]=3873;
		sine[462]=3914;
		sine[463]=3940;
		sine[464]=3948;
		sine[465]=3940;
		sine[466]=3914;
		sine[467]=3873;
		sine[468]=3815;
		sine[469]=3741;
		sine[470]=3653;
		sine[471]=3551;
		sine[472]=3435;
		sine[473]=3308;
		sine[474]=3170;
		sine[475]=3023;
		sine[476]=2868;
		sine[477]=2706;
		sine[478]=2539;
		sine[479]=2370;
		sine[480]=2198;
		sine[481]=2026;
		sine[482]=1857;
		sine[483]=1690;
		sine[484]=1528;
		sine[485]=1373;
		sine[486]=1226;
		sine[487]=1088;
		sine[488]=961;
		sine[489]=845;
		sine[490]=743;
		sine[491]=655;
		sine[492]=581;
		sine[493]=523;
		sine[494]=482;
		sine[495]=456;
		sine[496]=448;
		sine[497]=456;
		sine[498]=482;
		sine[499]=523;
		sine[500]=581;
		sine[501]=655;
		sine[502]=743;
		sine[503]=845;
		sine[504]=961;
		sine[505]=1088;
		sine[506]=1226;
		sine[507]=1373;
		sine[508]=1528;
		sine[509]=1690;
		sine[510]=1857;
		sine[511]=2026;
		sine[512]=2198;
		sine[513]=2370;
		sine[514]=2539;
		sine[515]=2706;
		sine[516]=2868;
		sine[517]=3023;
		sine[518]=3170;
		sine[519]=3308;
		sine[520]=3435;
		sine[521]=3551;
		sine[522]=3653;
		sine[523]=3741;
		sine[524]=3815;
		sine[525]=3873;
		sine[526]=3914;
		sine[527]=3940;
		sine[528]=3948;
		sine[529]=3940;
		sine[530]=3914;
		sine[531]=3873;
		sine[532]=3815;
		sine[533]=3741;
		sine[534]=3653;
		sine[535]=3551;
		sine[536]=3435;
		sine[537]=3308;
		sine[538]=3170;
		sine[539]=3023;
		sine[540]=2868;
		sine[541]=2706;
		sine[542]=2539;
		sine[543]=2370;
		sine[544]=2198;
		sine[545]=2026;
		sine[546]=1857;
		sine[547]=1690;
		sine[548]=1528;
		sine[549]=1373;
		sine[550]=1226;
		sine[551]=1088;
		sine[552]=961;
		sine[553]=845;
		sine[554]=743;
		sine[555]=655;
		sine[556]=581;
		sine[557]=523;
		sine[558]=482;
		sine[559]=456;
		sine[560]=448;
		sine[561]=456;
		sine[562]=482;
		sine[563]=523;
		sine[564]=581;
		sine[565]=655;
		sine[566]=743;
		sine[567]=845;
		sine[568]=961;
		sine[569]=1088;
		sine[570]=1226;
		sine[571]=1373;
		sine[572]=1528;
		sine[573]=1690;
		sine[574]=1857;
		sine[575]=2026;
		sine[576]=2198;
		sine[577]=2370;
		sine[578]=2539;
		sine[579]=2706;
		sine[580]=2868;
		sine[581]=3023;
		sine[582]=3170;
		sine[583]=3308;
		sine[584]=3435;
		sine[585]=3551;
		sine[586]=3653;
		sine[587]=3741;
		sine[588]=3815;
		sine[589]=3873;
		sine[590]=3914;
		sine[591]=3940;
		sine[592]=3948;
		sine[593]=3940;
		sine[594]=3914;
		sine[595]=3873;
		sine[596]=3815;
		sine[597]=3741;
		sine[598]=3653;
		sine[599]=3551;
		sine[600]=3435;
		sine[601]=3308;
		sine[602]=3170;
		sine[603]=3023;
		sine[604]=2868;
		sine[605]=2706;
		sine[606]=2539;
		sine[607]=2370;
		sine[608]=2198;
		sine[609]=2026;
		sine[610]=1857;
		sine[611]=1690;
		sine[612]=1528;
		sine[613]=1373;
		sine[614]=1226;
		sine[615]=1088;
		sine[616]=961;
		sine[617]=845;
		sine[618]=743;
		sine[619]=655;
		sine[620]=581;
		sine[621]=523;
		sine[622]=482;
		sine[623]=456;
		sine[624]=448;
		sine[625]=456;
		sine[626]=482;
		sine[627]=523;
		sine[628]=581;
		sine[629]=655;
		sine[630]=743;
		sine[631]=845;
		sine[632]=961;
		sine[633]=1088;
		sine[634]=1226;
		sine[635]=1373;
		sine[636]=1528;
		sine[637]=1690;
		sine[638]=1857;
		sine[639]=2026;
		sine[640]=2198;
		sine[641]=2370;
		sine[642]=2539;
		sine[643]=2706;
		sine[644]=2868;
		sine[645]=3023;
		sine[646]=3170;
		sine[647]=3308;
		sine[648]=3435;
		sine[649]=3551;
		sine[650]=3653;
		sine[651]=3741;
		sine[652]=3815;
		sine[653]=3873;
		sine[654]=3914;
		sine[655]=3940;
		sine[656]=3948;
		sine[657]=3940;
		sine[658]=3914;
		sine[659]=3873;
		sine[660]=3815;
		sine[661]=3741;
		sine[662]=3653;
		sine[663]=3551;
		sine[664]=3435;
		sine[665]=3308;
		sine[666]=3170;
		sine[667]=3023;
		sine[668]=2868;
		sine[669]=2706;
		sine[670]=2539;
		sine[671]=2370;
		sine[672]=2198;
		sine[673]=2026;
		sine[674]=1857;
		sine[675]=1690;
		sine[676]=1528;
		sine[677]=1373;
		sine[678]=1226;
		sine[679]=1088;
		sine[680]=961;
		sine[681]=845;
		sine[682]=743;
		sine[683]=655;
		sine[684]=581;
		sine[685]=523;
		sine[686]=482;
		sine[687]=456;
		sine[688]=448;
		sine[689]=456;
		sine[690]=482;
		sine[691]=523;
		sine[692]=581;
		sine[693]=655;
		sine[694]=743;
		sine[695]=845;
		sine[696]=961;
		sine[697]=1088;
		sine[698]=1226;
		sine[699]=1373;
		sine[700]=1528;
		sine[701]=1690;
		sine[702]=1857;
		sine[703]=2026;
		sine[704]=2198;
		sine[705]=2370;
		sine[706]=2539;
		sine[707]=2706;
		sine[708]=2868;
		sine[709]=3023;
		sine[710]=3170;
		sine[711]=3308;
		sine[712]=3435;
		sine[713]=3551;
		sine[714]=3653;
		sine[715]=3741;
		sine[716]=3815;
		sine[717]=3873;
		sine[718]=3914;
		sine[719]=3940;
		sine[720]=3948;
		sine[721]=3940;
		sine[722]=3914;
		sine[723]=3873;
		sine[724]=3815;
		sine[725]=3741;
		sine[726]=3653;
		sine[727]=3551;
		sine[728]=3435;
		sine[729]=3308;
		sine[730]=3170;
		sine[731]=3023;
		sine[732]=2868;
		sine[733]=2706;
		sine[734]=2539;
		sine[735]=2370;
		sine[736]=2198;
		sine[737]=2026;
		sine[738]=1857;
		sine[739]=1690;
		sine[740]=1528;
		sine[741]=1373;
		sine[742]=1226;
		sine[743]=1088;
		sine[744]=961;
		sine[745]=845;
		sine[746]=743;
		sine[747]=655;
		sine[748]=581;
		sine[749]=523;
		sine[750]=482;
		sine[751]=456;
		sine[752]=448;
		sine[753]=456;
		sine[754]=482;
		sine[755]=523;
		sine[756]=581;
		sine[757]=655;
		sine[758]=743;
		sine[759]=845;
		sine[760]=961;
		sine[761]=1088;
		sine[762]=1226;
		sine[763]=1373;
		sine[764]=1528;
		sine[765]=1690;
		sine[766]=1857;
		sine[767]=2026;
		sine[768]=2198;
		sine[769]=2370;
		sine[770]=2539;
		sine[771]=2706;
		sine[772]=2868;
		sine[773]=3023;
		sine[774]=3170;
		sine[775]=3308;
		sine[776]=3435;
		sine[777]=3551;
		sine[778]=3653;
		sine[779]=3741;
		sine[780]=3815;
		sine[781]=3873;
		sine[782]=3914;
		sine[783]=3940;
		sine[784]=3948;
		sine[785]=3940;
		sine[786]=3914;
		sine[787]=3873;
		sine[788]=3815;
		sine[789]=3741;
		sine[790]=3653;
		sine[791]=3551;
		sine[792]=3435;
		sine[793]=3308;
		sine[794]=3170;
		sine[795]=3023;
		sine[796]=2868;
		sine[797]=2706;
		sine[798]=2539;
		sine[799]=2370;
		sine[800]=2198;
		sine[801]=2026;
		sine[802]=1857;
		sine[803]=1690;
		sine[804]=1528;
		sine[805]=1373;
		sine[806]=1226;
		sine[807]=1088;
		sine[808]=961;
		sine[809]=845;
		sine[810]=743;
		sine[811]=655;
		sine[812]=581;
		sine[813]=523;
		sine[814]=482;
		sine[815]=456;
		sine[816]=448;
		sine[817]=456;
		sine[818]=482;
		sine[819]=523;
		sine[820]=581;
		sine[821]=655;
		sine[822]=743;
		sine[823]=845;
		sine[824]=961;
		sine[825]=1088;
		sine[826]=1226;
		sine[827]=1373;
		sine[828]=1528;
		sine[829]=1690;
		sine[830]=1857;
		sine[831]=2026;
		sine[832]=2198;
		sine[833]=2370;
		sine[834]=2539;
		sine[835]=2706;
		sine[836]=2868;
		sine[837]=3023;
		sine[838]=3170;
		sine[839]=3308;
		sine[840]=3435;
		sine[841]=3551;
		sine[842]=3653;
		sine[843]=3741;
		sine[844]=3815;
		sine[845]=3873;
		sine[846]=3914;
		sine[847]=3940;
		sine[848]=3948;
		sine[849]=3940;
		sine[850]=3914;
		sine[851]=3873;
		sine[852]=3815;
		sine[853]=3741;
		sine[854]=3653;
		sine[855]=3551;
		sine[856]=3435;
		sine[857]=3308;
		sine[858]=3170;
		sine[859]=3023;
		sine[860]=2868;
		sine[861]=2706;
		sine[862]=2539;
		sine[863]=2370;
		sine[864]=2198;
		sine[865]=2026;
		sine[866]=1857;
		sine[867]=1690;
		sine[868]=1528;
		sine[869]=1373;
		sine[870]=1226;
		sine[871]=1088;
		sine[872]=961;
		sine[873]=845;
		sine[874]=743;
		sine[875]=655;
		sine[876]=581;
		sine[877]=523;
		sine[878]=482;
		sine[879]=456;
		sine[880]=448;
		sine[881]=456;
		sine[882]=482;
		sine[883]=523;
		sine[884]=581;
		sine[885]=655;
		sine[886]=743;
		sine[887]=845;
		sine[888]=961;
		sine[889]=1088;
		sine[890]=1226;
		sine[891]=1373;
		sine[892]=1528;
		sine[893]=1690;
		sine[894]=1857;
		sine[895]=2026;
		sine[896]=2198;
		sine[897]=2370;
		sine[898]=2539;
		sine[899]=2706;
		sine[900]=2868;
		sine[901]=3023;
		sine[902]=3170;
		sine[903]=3308;
		sine[904]=3435;
		sine[905]=3551;
		sine[906]=3653;
		sine[907]=3741;
		sine[908]=3815;
		sine[909]=3873;
		sine[910]=3914;
		sine[911]=3940;
		sine[912]=3948;
		sine[913]=3940;
		sine[914]=3914;
		sine[915]=3873;
		sine[916]=3815;
		sine[917]=3741;
		sine[918]=3653;
		sine[919]=3551;
		sine[920]=3435;
		sine[921]=3308;
		sine[922]=3170;
		sine[923]=3023;
		sine[924]=2868;
		sine[925]=2706;
		sine[926]=2539;
		sine[927]=2370;
		sine[928]=2198;
		sine[929]=2026;
		sine[930]=1857;
		sine[931]=1690;
		sine[932]=1528;
		sine[933]=1373;
		sine[934]=1226;
		sine[935]=1088;
		sine[936]=961;
		sine[937]=845;
		sine[938]=743;
		sine[939]=655;
		sine[940]=581;
		sine[941]=523;
		sine[942]=482;
		sine[943]=456;
		sine[944]=448;
		sine[945]=456;
		sine[946]=482;
		sine[947]=523;
		sine[948]=581;
		sine[949]=655;
		sine[950]=743;
		sine[951]=845;
		sine[952]=961;
		sine[953]=1088;
		sine[954]=1226;
		sine[955]=1373;
		sine[956]=1528;
		sine[957]=1690;
		sine[958]=1857;
		sine[959]=2026;
		sine[960]=2198;
		sine[961]=2370;
		sine[962]=2539;
		sine[963]=2706;
		sine[964]=2868;
		sine[965]=3023;
		sine[966]=3170;
		sine[967]=3308;
		sine[968]=3435;
		sine[969]=3551;
		sine[970]=3653;
		sine[971]=3741;
		sine[972]=3815;
		sine[973]=3873;
		sine[974]=3914;
		sine[975]=3940;
		sine[976]=3948;
		sine[977]=3940;
		sine[978]=3914;
		sine[979]=3873;
		sine[980]=3815;
		sine[981]=3741;
		sine[982]=3653;
		sine[983]=3551;
		sine[984]=3435;
		sine[985]=3308;
		sine[986]=3170;
		sine[987]=3023;
		sine[988]=2868;
		sine[989]=2706;
		sine[990]=2539;
		sine[991]=2370;
		sine[992]=2198;
		sine[993]=2026;
		sine[994]=1857;
		sine[995]=1690;
		sine[996]=1528;
		sine[997]=1373;
		sine[998]=1226;
		sine[999]=1088;
		sine[1000]=961;
		sine[1001]=845;
		sine[1002]=743;
		sine[1003]=655;
		sine[1004]=581;
		sine[1005]=523;
		sine[1006]=482;
		sine[1007]=456;
		sine[1008]=448;
		sine[1009]=456;
		sine[1010]=482;
		sine[1011]=523;
		sine[1012]=581;
		sine[1013]=655;
		sine[1014]=743;
		sine[1015]=845;
		sine[1016]=961;
		sine[1017]=1088;
		sine[1018]=1226;
		sine[1019]=1373;
		sine[1020]=1528;
		sine[1021]=1690;
		sine[1022]=1857;
		sine[1023]=2026;
		sine[1024]=2198;
		sine[1025]=2370;
		sine[1026]=2539;
		sine[1027]=2706;
		sine[1028]=2868;
		sine[1029]=3023;
		sine[1030]=3170;
		sine[1031]=3308;
		sine[1032]=3435;
		sine[1033]=3551;
		sine[1034]=3653;
		sine[1035]=3741;
		sine[1036]=3815;
		sine[1037]=3873;
		sine[1038]=3914;
		sine[1039]=3940;
		sine[1040]=3948;
		sine[1041]=3940;
		sine[1042]=3914;
		sine[1043]=3873;
		sine[1044]=3815;
		sine[1045]=3741;
		sine[1046]=3653;
		sine[1047]=3551;
		sine[1048]=3435;
		sine[1049]=3308;
		sine[1050]=3170;
		sine[1051]=3023;
		sine[1052]=2868;
		sine[1053]=2706;
		sine[1054]=2539;
		sine[1055]=2370;
		sine[1056]=2198;
		sine[1057]=2026;
		sine[1058]=1857;
		sine[1059]=1690;
		sine[1060]=1528;
		sine[1061]=1373;
		sine[1062]=1226;
		sine[1063]=1088;
		sine[1064]=961;
		sine[1065]=845;
		sine[1066]=743;
		sine[1067]=655;
		sine[1068]=581;
		sine[1069]=523;
		sine[1070]=482;
		sine[1071]=456;
		sine[1072]=448;
		sine[1073]=456;
		sine[1074]=482;
		sine[1075]=523;
		sine[1076]=581;
		sine[1077]=655;
		sine[1078]=743;
		sine[1079]=845;
		sine[1080]=961;
		sine[1081]=1088;
		sine[1082]=1226;
		sine[1083]=1373;
		sine[1084]=1528;
		sine[1085]=1690;
		sine[1086]=1857;
		sine[1087]=2026;
		sine[1088]=2198;
		sine[1089]=2370;
		sine[1090]=2539;
		sine[1091]=2706;
		sine[1092]=2868;
		sine[1093]=3023;
		sine[1094]=3170;
		sine[1095]=3308;
		sine[1096]=3435;
		sine[1097]=3551;
		sine[1098]=3653;
		sine[1099]=3741;
		sine[1100]=3815;
		sine[1101]=3873;
		sine[1102]=3914;
		sine[1103]=3940;
		sine[1104]=3948;
		sine[1105]=3940;
		sine[1106]=3914;
		sine[1107]=3873;
		sine[1108]=3815;
		sine[1109]=3741;
		sine[1110]=3653;
		sine[1111]=3551;
		sine[1112]=3435;
		sine[1113]=3308;
		sine[1114]=3170;
		sine[1115]=3023;
		sine[1116]=2868;
		sine[1117]=2706;
		sine[1118]=2539;
		sine[1119]=2370;
		sine[1120]=2198;
		sine[1121]=2026;
		sine[1122]=1857;
		sine[1123]=1690;
		sine[1124]=1528;
		sine[1125]=1373;
		sine[1126]=1226;
		sine[1127]=1088;
		sine[1128]=961;
		sine[1129]=845;
		sine[1130]=743;
		sine[1131]=655;
		sine[1132]=581;
		sine[1133]=523;
		sine[1134]=482;
		sine[1135]=456;
		sine[1136]=448;
		sine[1137]=456;
		sine[1138]=482;
		sine[1139]=523;
		sine[1140]=581;
		sine[1141]=655;
		sine[1142]=743;
		sine[1143]=845;
		sine[1144]=961;
		sine[1145]=1088;
		sine[1146]=1226;
		sine[1147]=1373;
		sine[1148]=1528;
		sine[1149]=1690;
		sine[1150]=1857;
		sine[1151]=2026;
		sine[1152]=2198;
		sine[1153]=2370;
		sine[1154]=2539;
		sine[1155]=2706;
		sine[1156]=2868;
		sine[1157]=3023;
		sine[1158]=3170;
		sine[1159]=3308;
		sine[1160]=3435;
		sine[1161]=3551;
		sine[1162]=3653;
		sine[1163]=3741;
		sine[1164]=3815;
		sine[1165]=3873;
		sine[1166]=3914;
		sine[1167]=3940;
		sine[1168]=3948;
		sine[1169]=3940;
		sine[1170]=3914;
		sine[1171]=3873;
		sine[1172]=3815;
		sine[1173]=3741;
		sine[1174]=3653;
		sine[1175]=3551;
		sine[1176]=3435;
		sine[1177]=3308;
		sine[1178]=3170;
		sine[1179]=3023;
		sine[1180]=2868;
		sine[1181]=2706;
		sine[1182]=2539;
		sine[1183]=2370;
		sine[1184]=2198;
		sine[1185]=2026;
		sine[1186]=1857;
		sine[1187]=1690;
		sine[1188]=1528;
		sine[1189]=1373;
		sine[1190]=1226;
		sine[1191]=1088;
		sine[1192]=961;
		sine[1193]=845;
		sine[1194]=743;
		sine[1195]=655;
		sine[1196]=581;
		sine[1197]=523;
		sine[1198]=482;
		sine[1199]=456;
		sine[1200]=448;
		sine[1201]=456;
		sine[1202]=482;
		sine[1203]=523;
		sine[1204]=581;
		sine[1205]=655;
		sine[1206]=743;
		sine[1207]=845;
		sine[1208]=961;
		sine[1209]=1088;
		sine[1210]=1226;
		sine[1211]=1373;
		sine[1212]=1528;
		sine[1213]=1690;
		sine[1214]=1857;
		sine[1215]=2026;
		sine[1216]=2198;
		sine[1217]=2370;
		sine[1218]=2539;
		sine[1219]=2706;
		sine[1220]=2868;
		sine[1221]=3023;
		sine[1222]=3170;
		sine[1223]=3308;
		sine[1224]=3435;
		sine[1225]=3551;
		sine[1226]=3653;
		sine[1227]=3741;
		sine[1228]=3815;
		sine[1229]=3873;
		sine[1230]=3914;
		sine[1231]=3940;
		sine[1232]=3948;
		sine[1233]=3940;
		sine[1234]=3914;
		sine[1235]=3873;
		sine[1236]=3815;
		sine[1237]=3741;
		sine[1238]=3653;
		sine[1239]=3551;
		sine[1240]=3435;
		sine[1241]=3308;
		sine[1242]=3170;
		sine[1243]=3023;
		sine[1244]=2868;
		sine[1245]=2706;
		sine[1246]=2539;
		sine[1247]=2370;
		sine[1248]=2198;
		sine[1249]=2026;
		sine[1250]=1857;
		sine[1251]=1690;
		sine[1252]=1528;
		sine[1253]=1373;
		sine[1254]=1226;
		sine[1255]=1088;
		sine[1256]=961;
		sine[1257]=845;
		sine[1258]=743;
		sine[1259]=655;
		sine[1260]=581;
		sine[1261]=523;
		sine[1262]=482;
		sine[1263]=456;
		sine[1264]=448;
		sine[1265]=456;
		sine[1266]=482;
		sine[1267]=523;
		sine[1268]=581;
		sine[1269]=655;
		sine[1270]=743;
		sine[1271]=845;
		sine[1272]=961;
		sine[1273]=1088;
		sine[1274]=1226;
		sine[1275]=1373;
		sine[1276]=1528;
		sine[1277]=1690;
		sine[1278]=1857;
		sine[1279]=2026;
		sine[1280]=2198;
		sine[1281]=2370;
		sine[1282]=2539;
		sine[1283]=2706;
		sine[1284]=2868;
		sine[1285]=3023;
		sine[1286]=3170;
		sine[1287]=3308;
		sine[1288]=3435;
		sine[1289]=3551;
		sine[1290]=3653;
		sine[1291]=3741;
		sine[1292]=3815;
		sine[1293]=3873;
		sine[1294]=3914;
		sine[1295]=3940;
		sine[1296]=3948;
		sine[1297]=3940;
		sine[1298]=3914;
		sine[1299]=3873;
		sine[1300]=3815;
		sine[1301]=3741;
		sine[1302]=3653;
		sine[1303]=3551;
		sine[1304]=3435;
		sine[1305]=3308;
		sine[1306]=3170;
		sine[1307]=3023;
		sine[1308]=2868;
		sine[1309]=2706;
		sine[1310]=2539;
		sine[1311]=2370;
		sine[1312]=2198;
		sine[1313]=2026;
		sine[1314]=1857;
		sine[1315]=1690;
		sine[1316]=1528;
		sine[1317]=1373;
		sine[1318]=1226;
		sine[1319]=1088;
		sine[1320]=961;
		sine[1321]=845;
		sine[1322]=743;
		sine[1323]=655;
		sine[1324]=581;
		sine[1325]=523;
		sine[1326]=482;
		sine[1327]=456;
		sine[1328]=448;
		sine[1329]=456;
		sine[1330]=482;
		sine[1331]=523;
		sine[1332]=581;
		sine[1333]=655;
		sine[1334]=743;
		sine[1335]=845;
		sine[1336]=961;
		sine[1337]=1088;
		sine[1338]=1226;
		sine[1339]=1373;
		sine[1340]=1528;
		sine[1341]=1690;
		sine[1342]=1857;
		sine[1343]=2026;
		sine[1344]=2198;
		sine[1345]=2370;
		sine[1346]=2539;
		sine[1347]=2706;
		sine[1348]=2868;
		sine[1349]=3023;
		sine[1350]=3170;
		sine[1351]=3308;
		sine[1352]=3435;
		sine[1353]=3551;
		sine[1354]=3653;
		sine[1355]=3741;
		sine[1356]=3815;
		sine[1357]=3873;
		sine[1358]=3914;
		sine[1359]=3940;
		sine[1360]=3948;
		sine[1361]=3940;
		sine[1362]=3914;
		sine[1363]=3873;
		sine[1364]=3815;
		sine[1365]=3741;
		sine[1366]=3653;
		sine[1367]=3551;
		sine[1368]=3435;
		sine[1369]=3308;
		sine[1370]=3170;
		sine[1371]=3023;
		sine[1372]=2868;
		sine[1373]=2706;
		sine[1374]=2539;
		sine[1375]=2370;
		sine[1376]=2198;
		sine[1377]=2026;
		sine[1378]=1857;
		sine[1379]=1690;
		sine[1380]=1528;
		sine[1381]=1373;
		sine[1382]=1226;
		sine[1383]=1088;
		sine[1384]=961;
		sine[1385]=845;
		sine[1386]=743;
		sine[1387]=655;
		sine[1388]=581;
		sine[1389]=523;
		sine[1390]=482;
		sine[1391]=456;
		sine[1392]=448;
		sine[1393]=456;
		sine[1394]=482;
		sine[1395]=523;
		sine[1396]=581;
		sine[1397]=655;
		sine[1398]=743;
		sine[1399]=845;
		sine[1400]=961;
		sine[1401]=1088;
		sine[1402]=1226;
		sine[1403]=1373;
		sine[1404]=1528;
		sine[1405]=1690;
		sine[1406]=1857;
		sine[1407]=2026;
		sine[1408]=2198;
		sine[1409]=2370;
		sine[1410]=2539;
		sine[1411]=2706;
		sine[1412]=2868;
		sine[1413]=3023;
		sine[1414]=3170;
		sine[1415]=3308;
		sine[1416]=3435;
		sine[1417]=3551;
		sine[1418]=3653;
		sine[1419]=3741;
		sine[1420]=3815;
		sine[1421]=3873;
		sine[1422]=3914;
		sine[1423]=3940;
		sine[1424]=3948;
		sine[1425]=3940;
		sine[1426]=3914;
		sine[1427]=3873;
		sine[1428]=3815;
		sine[1429]=3741;
		sine[1430]=3653;
		sine[1431]=3551;
		sine[1432]=3435;
		sine[1433]=3308;
		sine[1434]=3170;
		sine[1435]=3023;
		sine[1436]=2868;
		sine[1437]=2706;
		sine[1438]=2539;
		sine[1439]=2370;
		sine[1440]=2198;
		sine[1441]=2026;
		sine[1442]=1857;
		sine[1443]=1690;
		sine[1444]=1528;
		sine[1445]=1373;
		sine[1446]=1226;
		sine[1447]=1088;
		sine[1448]=961;
		sine[1449]=845;
		sine[1450]=743;
		sine[1451]=655;
		sine[1452]=581;
		sine[1453]=523;
		sine[1454]=482;
		sine[1455]=456;
		sine[1456]=448;
		sine[1457]=456;
		sine[1458]=482;
		sine[1459]=523;
		sine[1460]=581;
		sine[1461]=655;
		sine[1462]=743;
		sine[1463]=845;
		sine[1464]=961;
		sine[1465]=1088;
		sine[1466]=1226;
		sine[1467]=1373;
		sine[1468]=1528;
		sine[1469]=1690;
		sine[1470]=1857;
		sine[1471]=2026;
		sine[1472]=2198;
		sine[1473]=2370;
		sine[1474]=2539;
		sine[1475]=2706;
		sine[1476]=2868;
		sine[1477]=3023;
		sine[1478]=3170;
		sine[1479]=3308;
		sine[1480]=3435;
		sine[1481]=3551;
		sine[1482]=3653;
		sine[1483]=3741;
		sine[1484]=3815;
		sine[1485]=3873;
		sine[1486]=3914;
		sine[1487]=3940;
		sine[1488]=3948;
		sine[1489]=3940;
		sine[1490]=3914;
		sine[1491]=3873;
		sine[1492]=3815;
		sine[1493]=3741;
		sine[1494]=3653;
		sine[1495]=3551;
		sine[1496]=3435;
		sine[1497]=3308;
		sine[1498]=3170;
		sine[1499]=3023;
		sine[1500]=2868;
		sine[1501]=2706;
		sine[1502]=2539;
		sine[1503]=2370;
		sine[1504]=2198;
		sine[1505]=2026;
		sine[1506]=1857;
		sine[1507]=1690;
		sine[1508]=1528;
		sine[1509]=1373;
		sine[1510]=1226;
		sine[1511]=1088;
		sine[1512]=961;
		sine[1513]=845;
		sine[1514]=743;
		sine[1515]=655;
		sine[1516]=581;
		sine[1517]=523;
		sine[1518]=482;
		sine[1519]=456;
		sine[1520]=448;
		sine[1521]=456;
		sine[1522]=482;
		sine[1523]=523;
		sine[1524]=581;
		sine[1525]=655;
		sine[1526]=743;
		sine[1527]=845;
		sine[1528]=961;
		sine[1529]=1088;
		sine[1530]=1226;
		sine[1531]=1373;
		sine[1532]=1528;
		sine[1533]=1690;
		sine[1534]=1857;
		sine[1535]=2026;
		sine[1536]=2198;
		sine[1537]=2370;
		sine[1538]=2539;
		sine[1539]=2706;
		sine[1540]=2868;
		sine[1541]=3023;
		sine[1542]=3170;
		sine[1543]=3308;
		sine[1544]=3435;
		sine[1545]=3551;
		sine[1546]=3653;
		sine[1547]=3741;
		sine[1548]=3815;
		sine[1549]=3873;
		sine[1550]=3914;
		sine[1551]=3940;
		sine[1552]=3948;
		sine[1553]=3940;
		sine[1554]=3914;
		sine[1555]=3873;
		sine[1556]=3815;
		sine[1557]=3741;
		sine[1558]=3653;
		sine[1559]=3551;
		sine[1560]=3435;
		sine[1561]=3308;
		sine[1562]=3170;
		sine[1563]=3023;
		sine[1564]=2868;
		sine[1565]=2706;
		sine[1566]=2539;
		sine[1567]=2370;
		sine[1568]=2198;
		sine[1569]=2026;
		sine[1570]=1857;
		sine[1571]=1690;
		sine[1572]=1528;
		sine[1573]=1373;
		sine[1574]=1226;
		sine[1575]=1088;
		sine[1576]=961;
		sine[1577]=845;
		sine[1578]=743;
		sine[1579]=655;
		sine[1580]=581;
		sine[1581]=523;
		sine[1582]=482;
		sine[1583]=456;
		sine[1584]=448;
		sine[1585]=456;
		sine[1586]=482;
		sine[1587]=523;
		sine[1588]=581;
		sine[1589]=655;
		sine[1590]=743;
		sine[1591]=845;
		sine[1592]=961;
		sine[1593]=1088;
		sine[1594]=1226;
		sine[1595]=1373;
		sine[1596]=1528;
		sine[1597]=1690;
		sine[1598]=1857;
		sine[1599]=2026;
		sine[1600]=2198;
		sine[1601]=2370;
		sine[1602]=2539;
		sine[1603]=2706;
		sine[1604]=2868;
		sine[1605]=3023;
		sine[1606]=3170;
		sine[1607]=3308;
		sine[1608]=3435;
		sine[1609]=3551;
		sine[1610]=3653;
		sine[1611]=3741;
		sine[1612]=3815;
		sine[1613]=3873;
		sine[1614]=3914;
		sine[1615]=3940;
		sine[1616]=3948;
		sine[1617]=3940;
		sine[1618]=3914;
		sine[1619]=3873;
		sine[1620]=3815;
		sine[1621]=3741;
		sine[1622]=3653;
		sine[1623]=3551;
		sine[1624]=3435;
		sine[1625]=3308;
		sine[1626]=3170;
		sine[1627]=3023;
		sine[1628]=2868;
		sine[1629]=2706;
		sine[1630]=2539;
		sine[1631]=2370;
		sine[1632]=2198;
		sine[1633]=2026;
		sine[1634]=1857;
		sine[1635]=1690;
		sine[1636]=1528;
		sine[1637]=1373;
		sine[1638]=1226;
		sine[1639]=1088;
		sine[1640]=961;
		sine[1641]=845;
		sine[1642]=743;
		sine[1643]=655;
		sine[1644]=581;
		sine[1645]=523;
		sine[1646]=482;
		sine[1647]=456;
		sine[1648]=448;
		sine[1649]=456;
		sine[1650]=482;
		sine[1651]=523;
		sine[1652]=581;
		sine[1653]=655;
		sine[1654]=743;
		sine[1655]=845;
		sine[1656]=961;
		sine[1657]=1088;
		sine[1658]=1226;
		sine[1659]=1373;
		sine[1660]=1528;
		sine[1661]=1690;
		sine[1662]=1857;
		sine[1663]=2026;
		sine[1664]=2198;
		sine[1665]=2370;
		sine[1666]=2539;
		sine[1667]=2706;
		sine[1668]=2868;
		sine[1669]=3023;
		sine[1670]=3170;
		sine[1671]=3308;
		sine[1672]=3435;
		sine[1673]=3551;
		sine[1674]=3653;
		sine[1675]=3741;
		sine[1676]=3815;
		sine[1677]=3873;
		sine[1678]=3914;
		sine[1679]=3940;
		sine[1680]=3948;
		sine[1681]=3940;
		sine[1682]=3914;
		sine[1683]=3873;
		sine[1684]=3815;
		sine[1685]=3741;
		sine[1686]=3653;
		sine[1687]=3551;
		sine[1688]=3435;
		sine[1689]=3308;
		sine[1690]=3170;
		sine[1691]=3023;
		sine[1692]=2868;
		sine[1693]=2706;
		sine[1694]=2539;
		sine[1695]=2370;
		sine[1696]=2198;
		sine[1697]=2026;
		sine[1698]=1857;
		sine[1699]=1690;
		sine[1700]=1528;
		sine[1701]=1373;
		sine[1702]=1226;
		sine[1703]=1088;
		sine[1704]=961;
		sine[1705]=845;
		sine[1706]=743;
		sine[1707]=655;
		sine[1708]=581;
		sine[1709]=523;
		sine[1710]=482;
		sine[1711]=456;
		sine[1712]=448;
		sine[1713]=456;
		sine[1714]=482;
		sine[1715]=523;
		sine[1716]=581;
		sine[1717]=655;
		sine[1718]=743;
		sine[1719]=845;
		sine[1720]=961;
		sine[1721]=1088;
		sine[1722]=1226;
		sine[1723]=1373;
		sine[1724]=1528;
		sine[1725]=1690;
		sine[1726]=1857;
		sine[1727]=2026;
		sine[1728]=2198;
		sine[1729]=2370;
		sine[1730]=2539;
		sine[1731]=2706;
		sine[1732]=2868;
		sine[1733]=3023;
		sine[1734]=3170;
		sine[1735]=3308;
		sine[1736]=3435;
		sine[1737]=3551;
		sine[1738]=3653;
		sine[1739]=3741;
		sine[1740]=3815;
		sine[1741]=3873;
		sine[1742]=3914;
		sine[1743]=3940;
		sine[1744]=3948;
		sine[1745]=3940;
		sine[1746]=3914;
		sine[1747]=3873;
		sine[1748]=3815;
		sine[1749]=3741;
		sine[1750]=3653;
		sine[1751]=3551;
		sine[1752]=3435;
		sine[1753]=3308;
		sine[1754]=3170;
		sine[1755]=3023;
		sine[1756]=2868;
		sine[1757]=2706;
		sine[1758]=2539;
		sine[1759]=2370;
		sine[1760]=2198;
		sine[1761]=2026;
		sine[1762]=1857;
		sine[1763]=1690;
		sine[1764]=1528;
		sine[1765]=1373;
		sine[1766]=1226;
		sine[1767]=1088;
		sine[1768]=961;
		sine[1769]=845;
		sine[1770]=743;
		sine[1771]=655;
		sine[1772]=581;
		sine[1773]=523;
		sine[1774]=482;
		sine[1775]=456;
		sine[1776]=448;
		sine[1777]=456;
		sine[1778]=482;
		sine[1779]=523;
		sine[1780]=581;
		sine[1781]=655;
		sine[1782]=743;
		sine[1783]=845;
		sine[1784]=961;
		sine[1785]=1088;
		sine[1786]=1226;
		sine[1787]=1373;
		sine[1788]=1528;
		sine[1789]=1690;
		sine[1790]=1857;
		sine[1791]=2026;
		sine[1792]=2198;
		sine[1793]=2370;
		sine[1794]=2539;
		sine[1795]=2706;
		sine[1796]=2868;
		sine[1797]=3023;
		sine[1798]=3170;
		sine[1799]=3308;
		sine[1800]=3435;
		sine[1801]=3551;
		sine[1802]=3653;
		sine[1803]=3741;
		sine[1804]=3815;
		sine[1805]=3873;
		sine[1806]=3914;
		sine[1807]=3940;
		sine[1808]=3948;
		sine[1809]=3940;
		sine[1810]=3914;
		sine[1811]=3873;
		sine[1812]=3815;
		sine[1813]=3741;
		sine[1814]=3653;
		sine[1815]=3551;
		sine[1816]=3435;
		sine[1817]=3308;
		sine[1818]=3170;
		sine[1819]=3023;
		sine[1820]=2868;
		sine[1821]=2706;
		sine[1822]=2539;
		sine[1823]=2370;
		sine[1824]=2198;
		sine[1825]=2026;
		sine[1826]=1857;
		sine[1827]=1690;
		sine[1828]=1528;
		sine[1829]=1373;
		sine[1830]=1226;
		sine[1831]=1088;
		sine[1832]=961;
		sine[1833]=845;
		sine[1834]=743;
		sine[1835]=655;
		sine[1836]=581;
		sine[1837]=523;
		sine[1838]=482;
		sine[1839]=456;
		sine[1840]=448;
		sine[1841]=456;
		sine[1842]=482;
		sine[1843]=523;
		sine[1844]=581;
		sine[1845]=655;
		sine[1846]=743;
		sine[1847]=845;
		sine[1848]=961;
		sine[1849]=1088;
		sine[1850]=1226;
		sine[1851]=1373;
		sine[1852]=1528;
		sine[1853]=1690;
		sine[1854]=1857;
		sine[1855]=2026;
		sine[1856]=2198;
		sine[1857]=2370;
		sine[1858]=2539;
		sine[1859]=2706;
		sine[1860]=2868;
		sine[1861]=3023;
		sine[1862]=3170;
		sine[1863]=3308;
		sine[1864]=3435;
		sine[1865]=3551;
		sine[1866]=3653;
		sine[1867]=3741;
		sine[1868]=3815;
		sine[1869]=3873;
		sine[1870]=3914;
		sine[1871]=3940;
		sine[1872]=3948;
		sine[1873]=3940;
		sine[1874]=3914;
		sine[1875]=3873;
		sine[1876]=3815;
		sine[1877]=3741;
		sine[1878]=3653;
		sine[1879]=3551;
		sine[1880]=3435;
		sine[1881]=3308;
		sine[1882]=3170;
		sine[1883]=3023;
		sine[1884]=2868;
		sine[1885]=2706;
		sine[1886]=2539;
		sine[1887]=2370;
		sine[1888]=2198;
		sine[1889]=2026;
		sine[1890]=1857;
		sine[1891]=1690;
		sine[1892]=1528;
		sine[1893]=1373;
		sine[1894]=1226;
		sine[1895]=1088;
		sine[1896]=961;
		sine[1897]=845;
		sine[1898]=743;
		sine[1899]=655;
		sine[1900]=581;
		sine[1901]=523;
		sine[1902]=482;
		sine[1903]=456;
		sine[1904]=448;
		sine[1905]=456;
		sine[1906]=482;
		sine[1907]=523;
		sine[1908]=581;
		sine[1909]=655;
		sine[1910]=743;
		sine[1911]=845;
		sine[1912]=961;
		sine[1913]=1088;
		sine[1914]=1226;
		sine[1915]=1373;
		sine[1916]=1528;
		sine[1917]=1690;
		sine[1918]=1857;
		sine[1919]=2026;
		sine[1920]=2198;
		sine[1921]=2370;
		sine[1922]=2539;
		sine[1923]=2706;
		sine[1924]=2868;
		sine[1925]=3023;
		sine[1926]=3170;
		sine[1927]=3308;
		sine[1928]=3435;
		sine[1929]=3551;
		sine[1930]=3653;
		sine[1931]=3741;
		sine[1932]=3815;
		sine[1933]=3873;
		sine[1934]=3914;
		sine[1935]=3940;
		sine[1936]=3948;
		sine[1937]=3940;
		sine[1938]=3914;
		sine[1939]=3873;
		sine[1940]=3815;
		sine[1941]=3741;
		sine[1942]=3653;
		sine[1943]=3551;
		sine[1944]=3435;
		sine[1945]=3308;
		sine[1946]=3170;
		sine[1947]=3023;
		sine[1948]=2868;
		sine[1949]=2706;
		sine[1950]=2539;
		sine[1951]=2370;
		sine[1952]=2198;
		sine[1953]=2026;
		sine[1954]=1857;
		sine[1955]=1690;
		sine[1956]=1528;
		sine[1957]=1373;
		sine[1958]=1226;
		sine[1959]=1088;
		sine[1960]=961;
		sine[1961]=845;
		sine[1962]=743;
		sine[1963]=655;
		sine[1964]=581;
		sine[1965]=523;
		sine[1966]=482;
		sine[1967]=456;
		sine[1968]=448;
		sine[1969]=456;
		sine[1970]=482;
		sine[1971]=523;
		sine[1972]=581;
		sine[1973]=655;
		sine[1974]=743;
		sine[1975]=845;
		sine[1976]=961;
		sine[1977]=1088;
		sine[1978]=1226;
		sine[1979]=1373;
		sine[1980]=1528;
		sine[1981]=1690;
		sine[1982]=1857;
		sine[1983]=2026;
		sine[1984]=2198;
		sine[1985]=2370;
		sine[1986]=2539;
		sine[1987]=2706;
		sine[1988]=2868;
		sine[1989]=3023;
		sine[1990]=3170;
		sine[1991]=3308;
		sine[1992]=3435;
		sine[1993]=3551;
		sine[1994]=3653;
		sine[1995]=3741;
		sine[1996]=3815;
		sine[1997]=3873;
		sine[1998]=3914;
		sine[1999]=3940;
		sine[2000]=3948;
		sine[2001]=3940;
		sine[2002]=3914;
		sine[2003]=3873;
		sine[2004]=3815;
		sine[2005]=3741;
		sine[2006]=3653;
		sine[2007]=3551;
		sine[2008]=3435;
		sine[2009]=3308;
		sine[2010]=3170;
		sine[2011]=3023;
		sine[2012]=2868;
		sine[2013]=2706;
		sine[2014]=2539;
		sine[2015]=2370;
		sine[2016]=2198;
		sine[2017]=2026;
		sine[2018]=1857;
		sine[2019]=1690;
		sine[2020]=1528;
		sine[2021]=1373;
		sine[2022]=1226;
		sine[2023]=1088;
		sine[2024]=961;
		sine[2025]=845;
		sine[2026]=743;
		sine[2027]=655;
		sine[2028]=581;
		sine[2029]=523;
		sine[2030]=482;
		sine[2031]=456;
		sine[2032]=448;
		sine[2033]=456;
		sine[2034]=482;
		sine[2035]=523;
		sine[2036]=581;
		sine[2037]=655;
		sine[2038]=743;
		sine[2039]=845;
		sine[2040]=961;
		sine[2041]=1088;
		sine[2042]=1226;
		sine[2043]=1373;
		sine[2044]=1528;
		sine[2045]=1690;
		sine[2046]=1857;
		sine[2047]=2026;
		sine[2048]=2198;
		sine[2049]=2370;
		sine[2050]=2539;
		sine[2051]=2706;
		sine[2052]=2868;
		sine[2053]=3023;
		sine[2054]=3170;
		sine[2055]=3308;
		sine[2056]=3435;
		sine[2057]=3551;
		sine[2058]=3653;
		sine[2059]=3741;
		sine[2060]=3815;
		sine[2061]=3873;
		sine[2062]=3914;
		sine[2063]=3940;
		sine[2064]=3948;
		sine[2065]=3940;
		sine[2066]=3914;
		sine[2067]=3873;
		sine[2068]=3815;
		sine[2069]=3741;
		sine[2070]=3653;
		sine[2071]=3551;
		sine[2072]=3435;
		sine[2073]=3308;
		sine[2074]=3170;
		sine[2075]=3023;
		sine[2076]=2868;
		sine[2077]=2706;
		sine[2078]=2539;
		sine[2079]=2370;
		sine[2080]=2198;
		sine[2081]=2026;
		sine[2082]=1857;
		sine[2083]=1690;
		sine[2084]=1528;
		sine[2085]=1373;
		sine[2086]=1226;
		sine[2087]=1088;
		sine[2088]=961;
		sine[2089]=845;
		sine[2090]=743;
		sine[2091]=655;
		sine[2092]=581;
		sine[2093]=523;
		sine[2094]=482;
		sine[2095]=456;
		sine[2096]=448;
		sine[2097]=456;
		sine[2098]=482;
		sine[2099]=523;
		sine[2100]=581;
		sine[2101]=655;
		sine[2102]=743;
		sine[2103]=845;
		sine[2104]=961;
		sine[2105]=1088;
		sine[2106]=1226;
		sine[2107]=1373;
		sine[2108]=1528;
		sine[2109]=1690;
		sine[2110]=1857;
		sine[2111]=2026;
		sine[2112]=2198;
		sine[2113]=2370;
		sine[2114]=2539;
		sine[2115]=2706;
		sine[2116]=2868;
		sine[2117]=3023;
		sine[2118]=3170;
		sine[2119]=3308;
		sine[2120]=3435;
		sine[2121]=3551;
		sine[2122]=3653;
		sine[2123]=3741;
		sine[2124]=3815;
		sine[2125]=3873;
		sine[2126]=3914;
		sine[2127]=3940;
		sine[2128]=3948;
		sine[2129]=3940;
		sine[2130]=3914;
		sine[2131]=3873;
		sine[2132]=3815;
		sine[2133]=3741;
		sine[2134]=3653;
		sine[2135]=3551;
		sine[2136]=3435;
		sine[2137]=3308;
		sine[2138]=3170;
		sine[2139]=3023;
		sine[2140]=2868;
		sine[2141]=2706;
		sine[2142]=2539;
		sine[2143]=2370;
		sine[2144]=2198;
		sine[2145]=2026;
		sine[2146]=1857;
		sine[2147]=1690;
		sine[2148]=1528;
		sine[2149]=1373;
		sine[2150]=1226;
		sine[2151]=1088;
		sine[2152]=961;
		sine[2153]=845;
		sine[2154]=743;
		sine[2155]=655;
		sine[2156]=581;
		sine[2157]=523;
		sine[2158]=482;
		sine[2159]=456;
		sine[2160]=448;
		sine[2161]=456;
		sine[2162]=482;
		sine[2163]=523;
		sine[2164]=581;
		sine[2165]=655;
		sine[2166]=743;
		sine[2167]=845;
		sine[2168]=961;
		sine[2169]=1088;
		sine[2170]=1226;
		sine[2171]=1373;
		sine[2172]=1528;
		sine[2173]=1690;
		sine[2174]=1857;
		sine[2175]=2026;
		sine[2176]=2198;
		sine[2177]=2370;
		sine[2178]=2539;
		sine[2179]=2706;
		sine[2180]=2868;
		sine[2181]=3023;
		sine[2182]=3170;
		sine[2183]=3308;
		sine[2184]=3435;
		sine[2185]=3551;
		sine[2186]=3653;
		sine[2187]=3741;
		sine[2188]=3815;
		sine[2189]=3873;
		sine[2190]=3914;
		sine[2191]=3940;
		sine[2192]=3948;
		sine[2193]=3940;
		sine[2194]=3914;
		sine[2195]=3873;
		sine[2196]=3815;
		sine[2197]=3741;
		sine[2198]=3653;
		sine[2199]=3551;
		sine[2200]=3435;
		sine[2201]=3308;
		sine[2202]=3170;
		sine[2203]=3023;
		sine[2204]=2868;
		sine[2205]=2706;
		sine[2206]=2539;
		sine[2207]=2370;
		sine[2208]=2198;
		sine[2209]=2026;
		sine[2210]=1857;
		sine[2211]=1690;
		sine[2212]=1528;
		sine[2213]=1373;
		sine[2214]=1226;
		sine[2215]=1088;
		sine[2216]=961;
		sine[2217]=845;
		sine[2218]=743;
		sine[2219]=655;
		sine[2220]=581;
		sine[2221]=523;
		sine[2222]=482;
		sine[2223]=456;
		sine[2224]=448;
		sine[2225]=456;
		sine[2226]=482;
		sine[2227]=523;
		sine[2228]=581;
		sine[2229]=655;
		sine[2230]=743;
		sine[2231]=845;
		sine[2232]=961;
		sine[2233]=1088;
		sine[2234]=1226;
		sine[2235]=1373;
		sine[2236]=1528;
		sine[2237]=1690;
		sine[2238]=1857;
		sine[2239]=2026;
		sine[2240]=2198;
		sine[2241]=2370;
		sine[2242]=2539;
		sine[2243]=2706;
		sine[2244]=2868;
		sine[2245]=3023;
		sine[2246]=3170;
		sine[2247]=3308;
		sine[2248]=3435;
		sine[2249]=3551;
		sine[2250]=3653;
		sine[2251]=3741;
		sine[2252]=3815;
		sine[2253]=3873;
		sine[2254]=3914;
		sine[2255]=3940;
		sine[2256]=3948;
		sine[2257]=3940;
		sine[2258]=3914;
		sine[2259]=3873;
		sine[2260]=3815;
		sine[2261]=3741;
		sine[2262]=3653;
		sine[2263]=3551;
		sine[2264]=3435;
		sine[2265]=3308;
		sine[2266]=3170;
		sine[2267]=3023;
		sine[2268]=2868;
		sine[2269]=2706;
		sine[2270]=2539;
		sine[2271]=2370;
		sine[2272]=2198;
		sine[2273]=2026;
		sine[2274]=1857;
		sine[2275]=1690;
		sine[2276]=1528;
		sine[2277]=1373;
		sine[2278]=1226;
		sine[2279]=1088;
		sine[2280]=961;
		sine[2281]=845;
		sine[2282]=743;
		sine[2283]=655;
		sine[2284]=581;
		sine[2285]=523;
		sine[2286]=482;
		sine[2287]=456;
		sine[2288]=448;
		sine[2289]=456;
		sine[2290]=482;
		sine[2291]=523;
		sine[2292]=581;
		sine[2293]=655;
		sine[2294]=743;
		sine[2295]=845;
		sine[2296]=961;
		sine[2297]=1088;
		sine[2298]=1226;
		sine[2299]=1373;
		sine[2300]=1528;
		sine[2301]=1690;
		sine[2302]=1857;
		sine[2303]=2026;
		sine[2304]=2198;
		sine[2305]=2370;
		sine[2306]=2539;
		sine[2307]=2706;
		sine[2308]=2868;
		sine[2309]=3023;
		sine[2310]=3170;
		sine[2311]=3308;
		sine[2312]=3435;
		sine[2313]=3551;
		sine[2314]=3653;
		sine[2315]=3741;
		sine[2316]=3815;
		sine[2317]=3873;
		sine[2318]=3914;
		sine[2319]=3940;
		sine[2320]=3948;
		sine[2321]=3940;
		sine[2322]=3914;
		sine[2323]=3873;
		sine[2324]=3815;
		sine[2325]=3741;
		sine[2326]=3653;
		sine[2327]=3551;
		sine[2328]=3435;
		sine[2329]=3308;
		sine[2330]=3170;
		sine[2331]=3023;
		sine[2332]=2868;
		sine[2333]=2706;
		sine[2334]=2539;
		sine[2335]=2370;
		sine[2336]=2198;
		sine[2337]=2026;
		sine[2338]=1857;
		sine[2339]=1690;
		sine[2340]=1528;
		sine[2341]=1373;
		sine[2342]=1226;
		sine[2343]=1088;
		sine[2344]=961;
		sine[2345]=845;
		sine[2346]=743;
		sine[2347]=655;
		sine[2348]=581;
		sine[2349]=523;
		sine[2350]=482;
		sine[2351]=456;
		sine[2352]=448;
		sine[2353]=456;
		sine[2354]=482;
		sine[2355]=523;
		sine[2356]=581;
		sine[2357]=655;
		sine[2358]=743;
		sine[2359]=845;
		sine[2360]=961;
		sine[2361]=1088;
		sine[2362]=1226;
		sine[2363]=1373;
		sine[2364]=1528;
		sine[2365]=1690;
		sine[2366]=1857;
		sine[2367]=2026;
		sine[2368]=2198;
		sine[2369]=2370;
		sine[2370]=2539;
		sine[2371]=2706;
		sine[2372]=2868;
		sine[2373]=3023;
		sine[2374]=3170;
		sine[2375]=3308;
		sine[2376]=3435;
		sine[2377]=3551;
		sine[2378]=3653;
		sine[2379]=3741;
		sine[2380]=3815;
		sine[2381]=3873;
		sine[2382]=3914;
		sine[2383]=3940;
		sine[2384]=3948;
		sine[2385]=3940;
		sine[2386]=3914;
		sine[2387]=3873;
		sine[2388]=3815;
		sine[2389]=3741;
		sine[2390]=3653;
		sine[2391]=3551;
		sine[2392]=3435;
		sine[2393]=3308;
		sine[2394]=3170;
		sine[2395]=3023;
		sine[2396]=2868;
		sine[2397]=2706;
		sine[2398]=2539;
		sine[2399]=2370;
		sine[2400]=2198;
		sine[2401]=2026;
		sine[2402]=1857;
		sine[2403]=1690;
		sine[2404]=1528;
		sine[2405]=1373;
		sine[2406]=1226;
		sine[2407]=1088;
		sine[2408]=961;
		sine[2409]=845;
		sine[2410]=743;
		sine[2411]=655;
		sine[2412]=581;
		sine[2413]=523;
		sine[2414]=482;
		sine[2415]=456;
		sine[2416]=448;
		sine[2417]=456;
		sine[2418]=482;
		sine[2419]=523;
		sine[2420]=581;
		sine[2421]=655;
		sine[2422]=743;
		sine[2423]=845;
		sine[2424]=961;
		sine[2425]=1088;
		sine[2426]=1226;
		sine[2427]=1373;
		sine[2428]=1528;
		sine[2429]=1690;
		sine[2430]=1857;
		sine[2431]=2026;
		sine[2432]=2198;
		sine[2433]=2370;
		sine[2434]=2539;
		sine[2435]=2706;
		sine[2436]=2868;
		sine[2437]=3023;
		sine[2438]=3170;
		sine[2439]=3308;
		sine[2440]=3435;
		sine[2441]=3551;
		sine[2442]=3653;
		sine[2443]=3741;
		sine[2444]=3815;
		sine[2445]=3873;
		sine[2446]=3914;
		sine[2447]=3940;
		sine[2448]=3948;
		sine[2449]=3940;
		sine[2450]=3914;
		sine[2451]=3873;
		sine[2452]=3815;
		sine[2453]=3741;
		sine[2454]=3653;
		sine[2455]=3551;
		sine[2456]=3435;
		sine[2457]=3308;
		sine[2458]=3170;
		sine[2459]=3023;
		sine[2460]=2868;
		sine[2461]=2706;
		sine[2462]=2539;
		sine[2463]=2370;
		sine[2464]=2198;
		sine[2465]=2026;
		sine[2466]=1857;
		sine[2467]=1690;
		sine[2468]=1528;
		sine[2469]=1373;
		sine[2470]=1226;
		sine[2471]=1088;
		sine[2472]=961;
		sine[2473]=845;
		sine[2474]=743;
		sine[2475]=655;
		sine[2476]=581;
		sine[2477]=523;
		sine[2478]=482;
		sine[2479]=456;
		sine[2480]=448;
		sine[2481]=456;
		sine[2482]=482;
		sine[2483]=523;
		sine[2484]=581;
		sine[2485]=655;
		sine[2486]=743;
		sine[2487]=845;
		sine[2488]=961;
		sine[2489]=1088;
		sine[2490]=1226;
		sine[2491]=1373;
		sine[2492]=1528;
		sine[2493]=1690;
		sine[2494]=1857;
		sine[2495]=2026;
		sine[2496]=2198;
		sine[2497]=2370;
		sine[2498]=2539;
		sine[2499]=2706;
		sine[2500]=2868;
		sine[2501]=3023;
		sine[2502]=3170;
		sine[2503]=3308;
		sine[2504]=3435;
		sine[2505]=3551;
		sine[2506]=3653;
		sine[2507]=3741;
		sine[2508]=3815;
		sine[2509]=3873;
		sine[2510]=3914;
		sine[2511]=3940;
		sine[2512]=3948;
		sine[2513]=3940;
		sine[2514]=3914;
		sine[2515]=3873;
		sine[2516]=3815;
		sine[2517]=3741;
		sine[2518]=3653;
		sine[2519]=3551;
		sine[2520]=3435;
		sine[2521]=3308;
		sine[2522]=3170;
		sine[2523]=3023;
		sine[2524]=2868;
		sine[2525]=2706;
		sine[2526]=2539;
		sine[2527]=2370;
		sine[2528]=2198;
		sine[2529]=2026;
		sine[2530]=1857;
		sine[2531]=1690;
		sine[2532]=1528;
		sine[2533]=1373;
		sine[2534]=1226;
		sine[2535]=1088;
		sine[2536]=961;
		sine[2537]=845;
		sine[2538]=743;
		sine[2539]=655;
		sine[2540]=581;
		sine[2541]=523;
		sine[2542]=482;
		sine[2543]=456;
		sine[2544]=448;
		sine[2545]=456;
		sine[2546]=482;
		sine[2547]=523;
		sine[2548]=581;
		sine[2549]=655;
		sine[2550]=743;
		sine[2551]=845;
		sine[2552]=961;
		sine[2553]=1088;
		sine[2554]=1226;
		sine[2555]=1373;
		sine[2556]=1528;
		sine[2557]=1690;
		sine[2558]=1857;
		sine[2559]=2026;
		sine[2560]=2198;
		sine[2561]=2370;
		sine[2562]=2539;
		sine[2563]=2706;
		sine[2564]=2868;
		sine[2565]=3023;
		sine[2566]=3170;
		sine[2567]=3308;
		sine[2568]=3435;
		sine[2569]=3551;
		sine[2570]=3653;
		sine[2571]=3741;
		sine[2572]=3815;
		sine[2573]=3873;
		sine[2574]=3914;
		sine[2575]=3940;
		sine[2576]=3948;
		sine[2577]=3940;
		sine[2578]=3914;
		sine[2579]=3873;
		sine[2580]=3815;
		sine[2581]=3741;
		sine[2582]=3653;
		sine[2583]=3551;
		sine[2584]=3435;
		sine[2585]=3308;
		sine[2586]=3170;
		sine[2587]=3023;
		sine[2588]=2868;
		sine[2589]=2706;
		sine[2590]=2539;
		sine[2591]=2370;
		sine[2592]=2198;
		sine[2593]=2026;
		sine[2594]=1857;
		sine[2595]=1690;
		sine[2596]=1528;
		sine[2597]=1373;
		sine[2598]=1226;
		sine[2599]=1088;
		sine[2600]=961;
		sine[2601]=845;
		sine[2602]=743;
		sine[2603]=655;
		sine[2604]=581;
		sine[2605]=523;
		sine[2606]=482;
		sine[2607]=456;
		sine[2608]=448;
		sine[2609]=456;
		sine[2610]=482;
		sine[2611]=523;
		sine[2612]=581;
		sine[2613]=655;
		sine[2614]=743;
		sine[2615]=845;
		sine[2616]=961;
		sine[2617]=1088;
		sine[2618]=1226;
		sine[2619]=1373;
		sine[2620]=1528;
		sine[2621]=1690;
		sine[2622]=1857;
		sine[2623]=2026;
		sine[2624]=2198;
		sine[2625]=2370;
		sine[2626]=2539;
		sine[2627]=2706;
		sine[2628]=2868;
		sine[2629]=3023;
		sine[2630]=3170;
		sine[2631]=3308;
		sine[2632]=3435;
		sine[2633]=3551;
		sine[2634]=3653;
		sine[2635]=3741;
		sine[2636]=3815;
		sine[2637]=3873;
		sine[2638]=3914;
		sine[2639]=3940;
		sine[2640]=3948;
		sine[2641]=3940;
		sine[2642]=3914;
		sine[2643]=3873;
		sine[2644]=3815;
		sine[2645]=3741;
		sine[2646]=3653;
		sine[2647]=3551;
		sine[2648]=3435;
		sine[2649]=3308;
		sine[2650]=3170;
		sine[2651]=3023;
		sine[2652]=2868;
		sine[2653]=2706;
		sine[2654]=2539;
		sine[2655]=2370;
		sine[2656]=2198;
		sine[2657]=2026;
		sine[2658]=1857;
		sine[2659]=1690;
		sine[2660]=1528;
		sine[2661]=1373;
		sine[2662]=1226;
		sine[2663]=1088;
		sine[2664]=961;
		sine[2665]=845;
		sine[2666]=743;
		sine[2667]=655;
		sine[2668]=581;
		sine[2669]=523;
		sine[2670]=482;
		sine[2671]=456;
		sine[2672]=448;
		sine[2673]=456;
		sine[2674]=482;
		sine[2675]=523;
		sine[2676]=581;
		sine[2677]=655;
		sine[2678]=743;
		sine[2679]=845;
		sine[2680]=961;
		sine[2681]=1088;
		sine[2682]=1226;
		sine[2683]=1373;
		sine[2684]=1528;
		sine[2685]=1690;
		sine[2686]=1857;
		sine[2687]=2026;
		sine[2688]=2198;
		sine[2689]=2370;
		sine[2690]=2539;
		sine[2691]=2706;
		sine[2692]=2868;
		sine[2693]=3023;
		sine[2694]=3170;
		sine[2695]=3308;
		sine[2696]=3435;
		sine[2697]=3551;
		sine[2698]=3653;
		sine[2699]=3741;
		sine[2700]=3815;
		sine[2701]=3873;
		sine[2702]=3914;
		sine[2703]=3940;
		sine[2704]=3948;
		sine[2705]=3940;
		sine[2706]=3914;
		sine[2707]=3873;
		sine[2708]=3815;
		sine[2709]=3741;
		sine[2710]=3653;
		sine[2711]=3551;
		sine[2712]=3435;
		sine[2713]=3308;
		sine[2714]=3170;
		sine[2715]=3023;
		sine[2716]=2868;
		sine[2717]=2706;
		sine[2718]=2539;
		sine[2719]=2370;
		sine[2720]=2198;
		sine[2721]=2026;
		sine[2722]=1857;
		sine[2723]=1690;
		sine[2724]=1528;
		sine[2725]=1373;
		sine[2726]=1226;
		sine[2727]=1088;
		sine[2728]=961;
		sine[2729]=845;
		sine[2730]=743;
		sine[2731]=655;
		sine[2732]=581;
		sine[2733]=523;
		sine[2734]=482;
		sine[2735]=456;
		sine[2736]=448;
		sine[2737]=456;
		sine[2738]=482;
		sine[2739]=523;
		sine[2740]=581;
		sine[2741]=655;
		sine[2742]=743;
		sine[2743]=845;
		sine[2744]=961;
		sine[2745]=1088;
		sine[2746]=1226;
		sine[2747]=1373;
		sine[2748]=1528;
		sine[2749]=1690;
		sine[2750]=1857;
		sine[2751]=2026;
		sine[2752]=2198;
		sine[2753]=2370;
		sine[2754]=2539;
		sine[2755]=2706;
		sine[2756]=2868;
		sine[2757]=3023;
		sine[2758]=3170;
		sine[2759]=3308;
		sine[2760]=3435;
		sine[2761]=3551;
		sine[2762]=3653;
		sine[2763]=3741;
		sine[2764]=3815;
		sine[2765]=3873;
		sine[2766]=3914;
		sine[2767]=3940;
		sine[2768]=3948;
		sine[2769]=3940;
		sine[2770]=3914;
		sine[2771]=3873;
		sine[2772]=3815;
		sine[2773]=3741;
		sine[2774]=3653;
		sine[2775]=3551;
		sine[2776]=3435;
		sine[2777]=3308;
		sine[2778]=3170;
		sine[2779]=3023;
		sine[2780]=2868;
		sine[2781]=2706;
		sine[2782]=2539;
		sine[2783]=2370;
		sine[2784]=2198;
		sine[2785]=2026;
		sine[2786]=1857;
		sine[2787]=1690;
		sine[2788]=1528;
		sine[2789]=1373;
		sine[2790]=1226;
		sine[2791]=1088;
		sine[2792]=961;
		sine[2793]=845;
		sine[2794]=743;
		sine[2795]=655;
		sine[2796]=581;
		sine[2797]=523;
		sine[2798]=482;
		sine[2799]=456;
		sine[2800]=448;
		sine[2801]=456;
		sine[2802]=482;
		sine[2803]=523;
		sine[2804]=581;
		sine[2805]=655;
		sine[2806]=743;
		sine[2807]=845;
		sine[2808]=961;
		sine[2809]=1088;
		sine[2810]=1226;
		sine[2811]=1373;
		sine[2812]=1528;
		sine[2813]=1690;
		sine[2814]=1857;
		sine[2815]=2026;
		sine[2816]=2198;
		sine[2817]=2370;
		sine[2818]=2539;
		sine[2819]=2706;
		sine[2820]=2868;
		sine[2821]=3023;
		sine[2822]=3170;
		sine[2823]=3308;
		sine[2824]=3435;
		sine[2825]=3551;
		sine[2826]=3653;
		sine[2827]=3741;
		sine[2828]=3815;
		sine[2829]=3873;
		sine[2830]=3914;
		sine[2831]=3940;
		sine[2832]=3948;
		sine[2833]=3940;
		sine[2834]=3914;
		sine[2835]=3873;
		sine[2836]=3815;
		sine[2837]=3741;
		sine[2838]=3653;
		sine[2839]=3551;
		sine[2840]=3435;
		sine[2841]=3308;
		sine[2842]=3170;
		sine[2843]=3023;
		sine[2844]=2868;
		sine[2845]=2706;
		sine[2846]=2539;
		sine[2847]=2370;
		sine[2848]=2198;
		sine[2849]=2026;
		sine[2850]=1857;
		sine[2851]=1690;
		sine[2852]=1528;
		sine[2853]=1373;
		sine[2854]=1226;
		sine[2855]=1088;
		sine[2856]=961;
		sine[2857]=845;
		sine[2858]=743;
		sine[2859]=655;
		sine[2860]=581;
		sine[2861]=523;
		sine[2862]=482;
		sine[2863]=456;
		sine[2864]=448;
		sine[2865]=456;
		sine[2866]=482;
		sine[2867]=523;
		sine[2868]=581;
		sine[2869]=655;
		sine[2870]=743;
		sine[2871]=845;
		sine[2872]=961;
		sine[2873]=1088;
		sine[2874]=1226;
		sine[2875]=1373;
		sine[2876]=1528;
		sine[2877]=1690;
		sine[2878]=1857;
		sine[2879]=2026;
		sine[2880]=2198;
		sine[2881]=2370;
		sine[2882]=2539;
		sine[2883]=2706;
		sine[2884]=2868;
		sine[2885]=3023;
		sine[2886]=3170;
		sine[2887]=3308;
		sine[2888]=3435;
		sine[2889]=3551;
		sine[2890]=3653;
		sine[2891]=3741;
		sine[2892]=3815;
		sine[2893]=3873;
		sine[2894]=3914;
		sine[2895]=3940;
		sine[2896]=3948;
		sine[2897]=3940;
		sine[2898]=3914;
		sine[2899]=3873;
		sine[2900]=3815;
		sine[2901]=3741;
		sine[2902]=3653;
		sine[2903]=3551;
		sine[2904]=3435;
		sine[2905]=3308;
		sine[2906]=3170;
		sine[2907]=3023;
		sine[2908]=2868;
		sine[2909]=2706;
		sine[2910]=2539;
		sine[2911]=2370;
		sine[2912]=2198;
		sine[2913]=2026;
		sine[2914]=1857;
		sine[2915]=1690;
		sine[2916]=1528;
		sine[2917]=1373;
		sine[2918]=1226;
		sine[2919]=1088;
		sine[2920]=961;
		sine[2921]=845;
		sine[2922]=743;
		sine[2923]=655;
		sine[2924]=581;
		sine[2925]=523;
		sine[2926]=482;
		sine[2927]=456;
		sine[2928]=448;
		sine[2929]=456;
		sine[2930]=482;
		sine[2931]=523;
		sine[2932]=581;
		sine[2933]=655;
		sine[2934]=743;
		sine[2935]=845;
		sine[2936]=961;
		sine[2937]=1088;
		sine[2938]=1226;
		sine[2939]=1373;
		sine[2940]=1528;
		sine[2941]=1690;
		sine[2942]=1857;
		sine[2943]=2026;
		sine[2944]=2198;
		sine[2945]=2370;
		sine[2946]=2539;
		sine[2947]=2706;
		sine[2948]=2868;
		sine[2949]=3023;
		sine[2950]=3170;
		sine[2951]=3308;
		sine[2952]=3435;
		sine[2953]=3551;
		sine[2954]=3653;
		sine[2955]=3741;
		sine[2956]=3815;
		sine[2957]=3873;
		sine[2958]=3914;
		sine[2959]=3940;
		sine[2960]=3948;
		sine[2961]=3940;
		sine[2962]=3914;
		sine[2963]=3873;
		sine[2964]=3815;
		sine[2965]=3741;
		sine[2966]=3653;
		sine[2967]=3551;
		sine[2968]=3435;
		sine[2969]=3308;
		sine[2970]=3170;
		sine[2971]=3023;
		sine[2972]=2868;
		sine[2973]=2706;
		sine[2974]=2539;
		sine[2975]=2370;
		sine[2976]=2198;
		sine[2977]=2026;
		sine[2978]=1857;
		sine[2979]=1690;
		sine[2980]=1528;
		sine[2981]=1373;
		sine[2982]=1226;
		sine[2983]=1088;
		sine[2984]=961;
		sine[2985]=845;
		sine[2986]=743;
		sine[2987]=655;
		sine[2988]=581;
		sine[2989]=523;
		sine[2990]=482;
		sine[2991]=456;
		sine[2992]=448;
		sine[2993]=456;
		sine[2994]=482;
		sine[2995]=523;
		sine[2996]=581;
		sine[2997]=655;
		sine[2998]=743;
		sine[2999]=845;
		sine[3000]=961;
		sine[3001]=1088;
		sine[3002]=1226;
		sine[3003]=1373;
		sine[3004]=1528;
		sine[3005]=1690;
		sine[3006]=1857;
		sine[3007]=2026;
		sine[3008]=2198;
		sine[3009]=2370;
		sine[3010]=2539;
		sine[3011]=2706;
		sine[3012]=2868;
		sine[3013]=3023;
		sine[3014]=3170;
		sine[3015]=3308;
		sine[3016]=3435;
		sine[3017]=3551;
		sine[3018]=3653;
		sine[3019]=3741;
		sine[3020]=3815;
		sine[3021]=3873;
		sine[3022]=3914;
		sine[3023]=3940;
		sine[3024]=3948;
		sine[3025]=3940;
		sine[3026]=3914;
		sine[3027]=3873;
		sine[3028]=3815;
		sine[3029]=3741;
		sine[3030]=3653;
		sine[3031]=3551;
		sine[3032]=3435;
		sine[3033]=3308;
		sine[3034]=3170;
		sine[3035]=3023;
		sine[3036]=2868;
		sine[3037]=2706;
		sine[3038]=2539;
		sine[3039]=2370;
		sine[3040]=2198;
		sine[3041]=2026;
		sine[3042]=1857;
		sine[3043]=1690;
		sine[3044]=1528;
		sine[3045]=1373;
		sine[3046]=1226;
		sine[3047]=1088;
		sine[3048]=961;
		sine[3049]=845;
		sine[3050]=743;
		sine[3051]=655;
		sine[3052]=581;
		sine[3053]=523;
		sine[3054]=482;
		sine[3055]=456;
		sine[3056]=448;
		sine[3057]=456;
		sine[3058]=482;
		sine[3059]=523;
		sine[3060]=581;
		sine[3061]=655;
		sine[3062]=743;
		sine[3063]=845;
		sine[3064]=961;
		sine[3065]=1088;
		sine[3066]=1226;
		sine[3067]=1373;
		sine[3068]=1528;
		sine[3069]=1690;
		sine[3070]=1857;
		sine[3071]=2026;
		sine[3072]=2198;
		sine[3073]=2370;
		sine[3074]=2539;
		sine[3075]=2706;
		sine[3076]=2868;
		sine[3077]=3023;
		sine[3078]=3170;
		sine[3079]=3308;
		sine[3080]=3435;
		sine[3081]=3551;
		sine[3082]=3653;
		sine[3083]=3741;
		sine[3084]=3815;
		sine[3085]=3873;
		sine[3086]=3914;
		sine[3087]=3940;
		sine[3088]=3948;
		sine[3089]=3940;
		sine[3090]=3914;
		sine[3091]=3873;
		sine[3092]=3815;
		sine[3093]=3741;
		sine[3094]=3653;
		sine[3095]=3551;
		sine[3096]=3435;
		sine[3097]=3308;
		sine[3098]=3170;
		sine[3099]=3023;
		sine[3100]=2868;
		sine[3101]=2706;
		sine[3102]=2539;
		sine[3103]=2370;
		sine[3104]=2198;
		sine[3105]=2026;
		sine[3106]=1857;
		sine[3107]=1690;
		sine[3108]=1528;
		sine[3109]=1373;
		sine[3110]=1226;
		sine[3111]=1088;
		sine[3112]=961;
		sine[3113]=845;
		sine[3114]=743;
		sine[3115]=655;
		sine[3116]=581;
		sine[3117]=523;
		sine[3118]=482;
		sine[3119]=456;
		sine[3120]=448;
		sine[3121]=456;
		sine[3122]=482;
		sine[3123]=523;
		sine[3124]=581;
		sine[3125]=655;
		sine[3126]=743;
		sine[3127]=845;
		sine[3128]=961;
		sine[3129]=1088;
		sine[3130]=1226;
		sine[3131]=1373;
		sine[3132]=1528;
		sine[3133]=1690;
		sine[3134]=1857;
		sine[3135]=2026;
		sine[3136]=2198;
		sine[3137]=2370;
		sine[3138]=2539;
		sine[3139]=2706;
		sine[3140]=2868;
		sine[3141]=3023;
		sine[3142]=3170;
		sine[3143]=3308;
		sine[3144]=3435;
		sine[3145]=3551;
		sine[3146]=3653;
		sine[3147]=3741;
		sine[3148]=3815;
		sine[3149]=3873;
		sine[3150]=3914;
		sine[3151]=3940;
		sine[3152]=3948;
		sine[3153]=3940;
		sine[3154]=3914;
		sine[3155]=3873;
		sine[3156]=3815;
		sine[3157]=3741;
		sine[3158]=3653;
		sine[3159]=3551;
		sine[3160]=3435;
		sine[3161]=3308;
		sine[3162]=3170;
		sine[3163]=3023;
		sine[3164]=2868;
		sine[3165]=2706;
		sine[3166]=2539;
		sine[3167]=2370;
		sine[3168]=2198;
		sine[3169]=2026;
		sine[3170]=1857;
		sine[3171]=1690;
		sine[3172]=1528;
		sine[3173]=1373;
		sine[3174]=1226;
		sine[3175]=1088;
		sine[3176]=961;
		sine[3177]=845;
		sine[3178]=743;
		sine[3179]=655;
		sine[3180]=581;
		sine[3181]=523;
		sine[3182]=482;
		sine[3183]=456;
		sine[3184]=448;
		sine[3185]=456;
		sine[3186]=482;
		sine[3187]=523;
		sine[3188]=581;
		sine[3189]=655;
		sine[3190]=743;
		sine[3191]=845;
		sine[3192]=961;
		sine[3193]=1088;
		sine[3194]=1226;
		sine[3195]=1373;
		sine[3196]=1528;
		sine[3197]=1690;
		sine[3198]=1857;
		sine[3199]=2026;
		sine[3200]=2198;
		sine[3201]=2370;
		sine[3202]=2539;
		sine[3203]=2706;
		sine[3204]=2868;
		sine[3205]=3023;
		sine[3206]=3170;
		sine[3207]=3308;
		sine[3208]=3435;
		sine[3209]=3551;
		sine[3210]=3653;
		sine[3211]=3741;
		sine[3212]=3815;
		sine[3213]=3873;
		sine[3214]=3914;
		sine[3215]=3940;
		sine[3216]=3948;
		sine[3217]=3940;
		sine[3218]=3914;
		sine[3219]=3873;
		sine[3220]=3815;
		sine[3221]=3741;
		sine[3222]=3653;
		sine[3223]=3551;
		sine[3224]=3435;
		sine[3225]=3308;
		sine[3226]=3170;
		sine[3227]=3023;
		sine[3228]=2868;
		sine[3229]=2706;
		sine[3230]=2539;
		sine[3231]=2370;
		sine[3232]=2198;
		sine[3233]=2026;
		sine[3234]=1857;
		sine[3235]=1690;
		sine[3236]=1528;
		sine[3237]=1373;
		sine[3238]=1226;
		sine[3239]=1088;
		sine[3240]=961;
		sine[3241]=845;
		sine[3242]=743;
		sine[3243]=655;
		sine[3244]=581;
		sine[3245]=523;
		sine[3246]=482;
		sine[3247]=456;
		sine[3248]=448;
		sine[3249]=456;
		sine[3250]=482;
		sine[3251]=523;
		sine[3252]=581;
		sine[3253]=655;
		sine[3254]=743;
		sine[3255]=845;
		sine[3256]=961;
		sine[3257]=1088;
		sine[3258]=1226;
		sine[3259]=1373;
		sine[3260]=1528;
		sine[3261]=1690;
		sine[3262]=1857;
		sine[3263]=2026;
		sine[3264]=2198;
		sine[3265]=2370;
		sine[3266]=2539;
		sine[3267]=2706;
		sine[3268]=2868;
		sine[3269]=3023;
		sine[3270]=3170;
		sine[3271]=3308;
		sine[3272]=3435;
		sine[3273]=3551;
		sine[3274]=3653;
		sine[3275]=3741;
		sine[3276]=3815;
		sine[3277]=3873;
		sine[3278]=3914;
		sine[3279]=3940;
		sine[3280]=3948;
		sine[3281]=3940;
		sine[3282]=3914;
		sine[3283]=3873;
		sine[3284]=3815;
		sine[3285]=3741;
		sine[3286]=3653;
		sine[3287]=3551;
		sine[3288]=3435;
		sine[3289]=3308;
		sine[3290]=3170;
		sine[3291]=3023;
		sine[3292]=2868;
		sine[3293]=2706;
		sine[3294]=2539;
		sine[3295]=2370;
		sine[3296]=2198;
		sine[3297]=2026;
		sine[3298]=1857;
		sine[3299]=1690;
		sine[3300]=1528;
		sine[3301]=1373;
		sine[3302]=1226;
		sine[3303]=1088;
		sine[3304]=961;
		sine[3305]=845;
		sine[3306]=743;
		sine[3307]=655;
		sine[3308]=581;
		sine[3309]=523;
		sine[3310]=482;
		sine[3311]=456;
		sine[3312]=448;
		sine[3313]=456;
		sine[3314]=482;
		sine[3315]=523;
		sine[3316]=581;
		sine[3317]=655;
		sine[3318]=743;
		sine[3319]=845;
		sine[3320]=961;
		sine[3321]=1088;
		sine[3322]=1226;
		sine[3323]=1373;
		sine[3324]=1528;
		sine[3325]=1690;
		sine[3326]=1857;
		sine[3327]=2026;
		sine[3328]=2198;
		sine[3329]=2370;
		sine[3330]=2539;
		sine[3331]=2706;
		sine[3332]=2868;
		sine[3333]=3023;
		sine[3334]=3170;
		sine[3335]=3308;
		sine[3336]=3435;
		sine[3337]=3551;
		sine[3338]=3653;
		sine[3339]=3741;
		sine[3340]=3815;
		sine[3341]=3873;
		sine[3342]=3914;
		sine[3343]=3940;
		sine[3344]=3948;
		sine[3345]=3940;
		sine[3346]=3914;
		sine[3347]=3873;
		sine[3348]=3815;
		sine[3349]=3741;
		sine[3350]=3653;
		sine[3351]=3551;
		sine[3352]=3435;
		sine[3353]=3308;
		sine[3354]=3170;
		sine[3355]=3023;
		sine[3356]=2868;
		sine[3357]=2706;
		sine[3358]=2539;
		sine[3359]=2370;
		sine[3360]=2198;
		sine[3361]=2026;
		sine[3362]=1857;
		sine[3363]=1690;
		sine[3364]=1528;
		sine[3365]=1373;
		sine[3366]=1226;
		sine[3367]=1088;
		sine[3368]=961;
		sine[3369]=845;
		sine[3370]=743;
		sine[3371]=655;
		sine[3372]=581;
		sine[3373]=523;
		sine[3374]=482;
		sine[3375]=456;
		sine[3376]=448;
		sine[3377]=456;
		sine[3378]=482;
		sine[3379]=523;
		sine[3380]=581;
		sine[3381]=655;
		sine[3382]=743;
		sine[3383]=845;
		sine[3384]=961;
		sine[3385]=1088;
		sine[3386]=1226;
		sine[3387]=1373;
		sine[3388]=1528;
		sine[3389]=1690;
		sine[3390]=1857;
		sine[3391]=2026;
		sine[3392]=2198;
		sine[3393]=2370;
		sine[3394]=2539;
		sine[3395]=2706;
		sine[3396]=2868;
		sine[3397]=3023;
		sine[3398]=3170;
		sine[3399]=3308;
		sine[3400]=3435;
		sine[3401]=3551;
		sine[3402]=3653;
		sine[3403]=3741;
		sine[3404]=3815;
		sine[3405]=3873;
		sine[3406]=3914;
		sine[3407]=3940;
		sine[3408]=3948;
		sine[3409]=3940;
		sine[3410]=3914;
		sine[3411]=3873;
		sine[3412]=3815;
		sine[3413]=3741;
		sine[3414]=3653;
		sine[3415]=3551;
		sine[3416]=3435;
		sine[3417]=3308;
		sine[3418]=3170;
		sine[3419]=3023;
		sine[3420]=2868;
		sine[3421]=2706;
		sine[3422]=2539;
		sine[3423]=2370;
		sine[3424]=2198;
		sine[3425]=2026;
		sine[3426]=1857;
		sine[3427]=1690;
		sine[3428]=1528;
		sine[3429]=1373;
		sine[3430]=1226;
		sine[3431]=1088;
		sine[3432]=961;
		sine[3433]=845;
		sine[3434]=743;
		sine[3435]=655;
		sine[3436]=581;
		sine[3437]=523;
		sine[3438]=482;
		sine[3439]=456;
		sine[3440]=448;
		sine[3441]=456;
		sine[3442]=482;
		sine[3443]=523;
		sine[3444]=581;
		sine[3445]=655;
		sine[3446]=743;
		sine[3447]=845;
		sine[3448]=961;
		sine[3449]=1088;
		sine[3450]=1226;
		sine[3451]=1373;
		sine[3452]=1528;
		sine[3453]=1690;
		sine[3454]=1857;
		sine[3455]=2026;
		sine[3456]=2198;
		sine[3457]=2370;
		sine[3458]=2539;
		sine[3459]=2706;
		sine[3460]=2868;
		sine[3461]=3023;
		sine[3462]=3170;
		sine[3463]=3308;
		sine[3464]=3435;
		sine[3465]=3551;
		sine[3466]=3653;
		sine[3467]=3741;
		sine[3468]=3815;
		sine[3469]=3873;
		sine[3470]=3914;
		sine[3471]=3940;
		sine[3472]=3948;
		sine[3473]=3940;
		sine[3474]=3914;
		sine[3475]=3873;
		sine[3476]=3815;
		sine[3477]=3741;
		sine[3478]=3653;
		sine[3479]=3551;
		sine[3480]=3435;
		sine[3481]=3308;
		sine[3482]=3170;
		sine[3483]=3023;
		sine[3484]=2868;
		sine[3485]=2706;
		sine[3486]=2539;
		sine[3487]=2370;
		sine[3488]=2198;
		sine[3489]=2026;
		sine[3490]=1857;
		sine[3491]=1690;
		sine[3492]=1528;
		sine[3493]=1373;
		sine[3494]=1226;
		sine[3495]=1088;
		sine[3496]=961;
		sine[3497]=845;
		sine[3498]=743;
		sine[3499]=655;
		sine[3500]=581;
		sine[3501]=523;
		sine[3502]=482;
		sine[3503]=456;
		sine[3504]=448;
		sine[3505]=456;
		sine[3506]=482;
		sine[3507]=523;
		sine[3508]=581;
		sine[3509]=655;
		sine[3510]=743;
		sine[3511]=845;
		sine[3512]=961;
		sine[3513]=1088;
		sine[3514]=1226;
		sine[3515]=1373;
		sine[3516]=1528;
		sine[3517]=1690;
		sine[3518]=1857;
		sine[3519]=2026;
		sine[3520]=2198;
		sine[3521]=2370;
		sine[3522]=2539;
		sine[3523]=2706;
		sine[3524]=2868;
		sine[3525]=3023;
		sine[3526]=3170;
		sine[3527]=3308;
		sine[3528]=3435;
		sine[3529]=3551;
		sine[3530]=3653;
		sine[3531]=3741;
		sine[3532]=3815;
		sine[3533]=3873;
		sine[3534]=3914;
		sine[3535]=3940;
		sine[3536]=3948;
		sine[3537]=3940;
		sine[3538]=3914;
		sine[3539]=3873;
		sine[3540]=3815;
		sine[3541]=3741;
		sine[3542]=3653;
		sine[3543]=3551;
		sine[3544]=3435;
		sine[3545]=3308;
		sine[3546]=3170;
		sine[3547]=3023;
		sine[3548]=2868;
		sine[3549]=2706;
		sine[3550]=2539;
		sine[3551]=2370;
		sine[3552]=2198;
		sine[3553]=2026;
		sine[3554]=1857;
		sine[3555]=1690;
		sine[3556]=1528;
		sine[3557]=1373;
		sine[3558]=1226;
		sine[3559]=1088;
		sine[3560]=961;
		sine[3561]=845;
		sine[3562]=743;
		sine[3563]=655;
		sine[3564]=581;
		sine[3565]=523;
		sine[3566]=482;
		sine[3567]=456;
		sine[3568]=448;
		sine[3569]=456;
		sine[3570]=482;
		sine[3571]=523;
		sine[3572]=581;
		sine[3573]=655;
		sine[3574]=743;
		sine[3575]=845;
		sine[3576]=961;
		sine[3577]=1088;
		sine[3578]=1226;
		sine[3579]=1373;
		sine[3580]=1528;
		sine[3581]=1690;
		sine[3582]=1857;
		sine[3583]=2026;
		sine[3584]=2198;
		sine[3585]=2370;
		sine[3586]=2539;
		sine[3587]=2706;
		sine[3588]=2868;
		sine[3589]=3023;
		sine[3590]=3170;
		sine[3591]=3308;
		sine[3592]=3435;
		sine[3593]=3551;
		sine[3594]=3653;
		sine[3595]=3741;
		sine[3596]=3815;
		sine[3597]=3873;
		sine[3598]=3914;
		sine[3599]=3940;
		sine[3600]=3948;
		sine[3601]=3940;
		sine[3602]=3914;
		sine[3603]=3873;
		sine[3604]=3815;
		sine[3605]=3741;
		sine[3606]=3653;
		sine[3607]=3551;
		sine[3608]=3435;
		sine[3609]=3308;
		sine[3610]=3170;
		sine[3611]=3023;
		sine[3612]=2868;
		sine[3613]=2706;
		sine[3614]=2539;
		sine[3615]=2370;
		sine[3616]=2198;
		sine[3617]=2026;
		sine[3618]=1857;
		sine[3619]=1690;
		sine[3620]=1528;
		sine[3621]=1373;
		sine[3622]=1226;
		sine[3623]=1088;
		sine[3624]=961;
		sine[3625]=845;
		sine[3626]=743;
		sine[3627]=655;
		sine[3628]=581;
		sine[3629]=523;
		sine[3630]=482;
		sine[3631]=456;
		sine[3632]=448;
		sine[3633]=456;
		sine[3634]=482;
		sine[3635]=523;
		sine[3636]=581;
		sine[3637]=655;
		sine[3638]=743;
		sine[3639]=845;
		sine[3640]=961;
		sine[3641]=1088;
		sine[3642]=1226;
		sine[3643]=1373;
		sine[3644]=1528;
		sine[3645]=1690;
		sine[3646]=1857;
		sine[3647]=2026;
		sine[3648]=2198;
		sine[3649]=2370;
		sine[3650]=2539;
		sine[3651]=2706;
		sine[3652]=2868;
		sine[3653]=3023;
		sine[3654]=3170;
		sine[3655]=3308;
		sine[3656]=3435;
		sine[3657]=3551;
		sine[3658]=3653;
		sine[3659]=3741;
		sine[3660]=3815;
		sine[3661]=3873;
		sine[3662]=3914;
		sine[3663]=3940;
		sine[3664]=3948;
		sine[3665]=3940;
		sine[3666]=3914;
		sine[3667]=3873;
		sine[3668]=3815;
		sine[3669]=3741;
		sine[3670]=3653;
		sine[3671]=3551;
		sine[3672]=3435;
		sine[3673]=3308;
		sine[3674]=3170;
		sine[3675]=3023;
		sine[3676]=2868;
		sine[3677]=2706;
		sine[3678]=2539;
		sine[3679]=2370;
		sine[3680]=2198;
		sine[3681]=2026;
		sine[3682]=1857;
		sine[3683]=1690;
		sine[3684]=1528;
		sine[3685]=1373;
		sine[3686]=1226;
		sine[3687]=1088;
		sine[3688]=961;
		sine[3689]=845;
		sine[3690]=743;
		sine[3691]=655;
		sine[3692]=581;
		sine[3693]=523;
		sine[3694]=482;
		sine[3695]=456;
		sine[3696]=448;
		sine[3697]=456;
		sine[3698]=482;
		sine[3699]=523;
		sine[3700]=581;
		sine[3701]=655;
		sine[3702]=743;
		sine[3703]=845;
		sine[3704]=961;
		sine[3705]=1088;
		sine[3706]=1226;
		sine[3707]=1373;
		sine[3708]=1528;
		sine[3709]=1690;
		sine[3710]=1857;
		sine[3711]=2026;
		sine[3712]=2198;
		sine[3713]=2370;
		sine[3714]=2539;
		sine[3715]=2706;
		sine[3716]=2868;
		sine[3717]=3023;
		sine[3718]=3170;
		sine[3719]=3308;
		sine[3720]=3435;
		sine[3721]=3551;
		sine[3722]=3653;
		sine[3723]=3741;
		sine[3724]=3815;
		sine[3725]=3873;
		sine[3726]=3914;
		sine[3727]=3940;
		sine[3728]=3948;
		sine[3729]=3940;
		sine[3730]=3914;
		sine[3731]=3873;
		sine[3732]=3815;
		sine[3733]=3741;
		sine[3734]=3653;
		sine[3735]=3551;
		sine[3736]=3435;
		sine[3737]=3308;
		sine[3738]=3170;
		sine[3739]=3023;
		sine[3740]=2868;
		sine[3741]=2706;
		sine[3742]=2539;
		sine[3743]=2370;
		sine[3744]=2198;
		sine[3745]=2026;
		sine[3746]=1857;
		sine[3747]=1690;
		sine[3748]=1528;
		sine[3749]=1373;
		sine[3750]=1226;
		sine[3751]=1088;
		sine[3752]=961;
		sine[3753]=845;
		sine[3754]=743;
		sine[3755]=655;
		sine[3756]=581;
		sine[3757]=523;
		sine[3758]=482;
		sine[3759]=456;
		sine[3760]=448;
		sine[3761]=456;
		sine[3762]=482;
		sine[3763]=523;
		sine[3764]=581;
		sine[3765]=655;
		sine[3766]=743;
		sine[3767]=845;
		sine[3768]=961;
		sine[3769]=1088;
		sine[3770]=1226;
		sine[3771]=1373;
		sine[3772]=1528;
		sine[3773]=1690;
		sine[3774]=1857;
		sine[3775]=2026;
		sine[3776]=2198;
		sine[3777]=2370;
		sine[3778]=2539;
		sine[3779]=2706;
		sine[3780]=2868;
		sine[3781]=3023;
		sine[3782]=3170;
		sine[3783]=3308;
		sine[3784]=3435;
		sine[3785]=3551;
		sine[3786]=3653;
		sine[3787]=3741;
		sine[3788]=3815;
		sine[3789]=3873;
		sine[3790]=3914;
		sine[3791]=3940;
		sine[3792]=3948;
		sine[3793]=3940;
		sine[3794]=3914;
		sine[3795]=3873;
		sine[3796]=3815;
		sine[3797]=3741;
		sine[3798]=3653;
		sine[3799]=3551;
		sine[3800]=3435;
		sine[3801]=3308;
		sine[3802]=3170;
		sine[3803]=3023;
		sine[3804]=2868;
		sine[3805]=2706;
		sine[3806]=2539;
		sine[3807]=2370;
		sine[3808]=2198;
		sine[3809]=2026;
		sine[3810]=1857;
		sine[3811]=1690;
		sine[3812]=1528;
		sine[3813]=1373;
		sine[3814]=1226;
		sine[3815]=1088;
		sine[3816]=961;
		sine[3817]=845;
		sine[3818]=743;
		sine[3819]=655;
		sine[3820]=581;
		sine[3821]=523;
		sine[3822]=482;
		sine[3823]=456;
		sine[3824]=448;
		sine[3825]=456;
		sine[3826]=482;
		sine[3827]=523;
		sine[3828]=581;
		sine[3829]=655;
		sine[3830]=743;
		sine[3831]=845;
		sine[3832]=961;
		sine[3833]=1088;
		sine[3834]=1226;
		sine[3835]=1373;
		sine[3836]=1528;
		sine[3837]=1690;
		sine[3838]=1857;
		sine[3839]=2026;
		sine[3840]=2198;
		sine[3841]=2370;
		sine[3842]=2539;
		sine[3843]=2706;
		sine[3844]=2868;
		sine[3845]=3023;
		sine[3846]=3170;
		sine[3847]=3308;
		sine[3848]=3435;
		sine[3849]=3551;
		sine[3850]=3653;
		sine[3851]=3741;
		sine[3852]=3815;
		sine[3853]=3873;
		sine[3854]=3914;
		sine[3855]=3940;
		sine[3856]=3948;
		sine[3857]=3940;
		sine[3858]=3914;
		sine[3859]=3873;
		sine[3860]=3815;
		sine[3861]=3741;
		sine[3862]=3653;
		sine[3863]=3551;
		sine[3864]=3435;
		sine[3865]=3308;
		sine[3866]=3170;
		sine[3867]=3023;
		sine[3868]=2868;
		sine[3869]=2706;
		sine[3870]=2539;
		sine[3871]=2370;
		sine[3872]=2198;
		sine[3873]=2026;
		sine[3874]=1857;
		sine[3875]=1690;
		sine[3876]=1528;
		sine[3877]=1373;
		sine[3878]=1226;
		sine[3879]=1088;
		sine[3880]=961;
		sine[3881]=845;
		sine[3882]=743;
		sine[3883]=655;
		sine[3884]=581;
		sine[3885]=523;
		sine[3886]=482;
		sine[3887]=456;
		sine[3888]=448;
		sine[3889]=456;
		sine[3890]=482;
		sine[3891]=523;
		sine[3892]=581;
		sine[3893]=655;
		sine[3894]=743;
		sine[3895]=845;
		sine[3896]=961;
		sine[3897]=1088;
		sine[3898]=1226;
		sine[3899]=1373;
		sine[3900]=1528;
		sine[3901]=1690;
		sine[3902]=1857;
		sine[3903]=2026;
		sine[3904]=2198;
		sine[3905]=2370;
		sine[3906]=2539;
		sine[3907]=2706;
		sine[3908]=2868;
		sine[3909]=3023;
		sine[3910]=3170;
		sine[3911]=3308;
		sine[3912]=3435;
		sine[3913]=3551;
		sine[3914]=3653;
		sine[3915]=3741;
		sine[3916]=3815;
		sine[3917]=3873;
		sine[3918]=3914;
		sine[3919]=3940;
		sine[3920]=3948;
		sine[3921]=3940;
		sine[3922]=3914;
		sine[3923]=3873;
		sine[3924]=3815;
		sine[3925]=3741;
		sine[3926]=3653;
		sine[3927]=3551;
		sine[3928]=3435;
		sine[3929]=3308;
		sine[3930]=3170;
		sine[3931]=3023;
		sine[3932]=2868;
		sine[3933]=2706;
		sine[3934]=2539;
		sine[3935]=2370;
		sine[3936]=2198;
		sine[3937]=2026;
		sine[3938]=1857;
		sine[3939]=1690;
		sine[3940]=1528;
		sine[3941]=1373;
		sine[3942]=1226;
		sine[3943]=1088;
		sine[3944]=961;
		sine[3945]=845;
		sine[3946]=743;
		sine[3947]=655;
		sine[3948]=581;
		sine[3949]=523;
		sine[3950]=482;
		sine[3951]=456;
		sine[3952]=448;
		sine[3953]=456;
		sine[3954]=482;
		sine[3955]=523;
		sine[3956]=581;
		sine[3957]=655;
		sine[3958]=743;
		sine[3959]=845;
		sine[3960]=961;
		sine[3961]=1088;
		sine[3962]=1226;
		sine[3963]=1373;
		sine[3964]=1528;
		sine[3965]=1690;
		sine[3966]=1857;
		sine[3967]=2026;
		sine[3968]=2198;
		sine[3969]=2370;
		sine[3970]=2539;
		sine[3971]=2706;
		sine[3972]=2868;
		sine[3973]=3023;
		sine[3974]=3170;
		sine[3975]=3308;
		sine[3976]=3435;
		sine[3977]=3551;
		sine[3978]=3653;
		sine[3979]=3741;
		sine[3980]=3815;
		sine[3981]=3873;
		sine[3982]=3914;
		sine[3983]=3940;
		sine[3984]=3948;
		sine[3985]=3940;
		sine[3986]=3914;
		sine[3987]=3873;
		sine[3988]=3815;
		sine[3989]=3741;
		sine[3990]=3653;
		sine[3991]=3551;
		sine[3992]=3435;
		sine[3993]=3308;
		sine[3994]=3170;
		sine[3995]=3023;
		sine[3996]=2868;
		sine[3997]=2706;
		sine[3998]=2539;
		sine[3999]=2370;
		sine[4000]=2198;
		sine[4001]=2026;
		sine[4002]=1857;
		sine[4003]=1690;
		sine[4004]=1528;
		sine[4005]=1373;
		sine[4006]=1226;
		sine[4007]=1088;
		sine[4008]=961;
		sine[4009]=845;
		sine[4010]=743;
		sine[4011]=655;
		sine[4012]=581;
		sine[4013]=523;
		sine[4014]=482;
		sine[4015]=456;
		sine[4016]=448;
		sine[4017]=456;
		sine[4018]=482;
		sine[4019]=523;
		sine[4020]=581;
		sine[4021]=655;
		sine[4022]=743;
		sine[4023]=845;
		sine[4024]=961;
		sine[4025]=1088;
		sine[4026]=1226;
		sine[4027]=1373;
		sine[4028]=1528;
		sine[4029]=1690;
		sine[4030]=1857;
		sine[4031]=2026;
		sine[4032]=2198;
		sine[4033]=2370;
		sine[4034]=2539;
		sine[4035]=2706;
		sine[4036]=2868;
		sine[4037]=3023;
		sine[4038]=3170;
		sine[4039]=3308;
		sine[4040]=3435;
		sine[4041]=3551;
		sine[4042]=3653;
		sine[4043]=3741;
		sine[4044]=3815;
		sine[4045]=3873;
		sine[4046]=3914;
		sine[4047]=3940;
		sine[4048]=3948;
		sine[4049]=3940;
		sine[4050]=3914;
		sine[4051]=3873;
		sine[4052]=3815;
		sine[4053]=3741;
		sine[4054]=3653;
		sine[4055]=3551;
		sine[4056]=3435;
		sine[4057]=3308;
		sine[4058]=3170;
		sine[4059]=3023;
		sine[4060]=2868;
		sine[4061]=2706;
		sine[4062]=2539;
		sine[4063]=2370;
		sine[4064]=2198;
		sine[4065]=2026;
		sine[4066]=1857;
		sine[4067]=1690;
		sine[4068]=1528;
		sine[4069]=1373;
		sine[4070]=1226;
		sine[4071]=1088;
		sine[4072]=961;
		sine[4073]=845;
		sine[4074]=743;
		sine[4075]=655;
		sine[4076]=581;
		sine[4077]=523;
		sine[4078]=482;
		sine[4079]=456;
		sine[4080]=448;
		sine[4081]=456;
		sine[4082]=482;
		sine[4083]=523;
		sine[4084]=581;
		sine[4085]=655;
		sine[4086]=743;
		sine[4087]=845;
		sine[4088]=961;
		sine[4089]=1088;
		sine[4090]=1226;
		sine[4091]=1373;
		sine[4092]=1528;
		sine[4093]=1690;
		sine[4094]=1857;
		sine[4095]=2026;

*/

/*		//16khz data flipped
		sine[0]=2370;
		sine[1]=2198;
		sine[2]=2706;
		sine[3]=2539;
		sine[4]=3023;
		sine[5]=2868;
		sine[6]=3308;
		sine[7]=3170;
		sine[8]=3551;
		sine[9]=3435;
		sine[10]=3741;
		sine[11]=3653;
		sine[12]=3873;
		sine[13]=3815;
		sine[14]=3940;
		sine[15]=3914;
		sine[16]=3940;
		sine[17]=3948;
		sine[18]=3873;
		sine[19]=3914;
		sine[20]=3741;
		sine[21]=3815;
		sine[22]=3551;
		sine[23]=3653;
		sine[24]=3308;
		sine[25]=3435;
		sine[26]=3023;
		sine[27]=3170;
		sine[28]=2706;
		sine[29]=2868;
		sine[30]=2370;
		sine[31]=2539;
		sine[32]=2026;
		sine[33]=2198;
		sine[34]=1690;
		sine[35]=1857;
		sine[36]=1373;
		sine[37]=1528;
		sine[38]=1088;
		sine[39]=1226;
		sine[40]=845;
		sine[41]=961;
		sine[42]=655;
		sine[43]=743;
		sine[44]=523;
		sine[45]=581;
		sine[46]=456;
		sine[47]=482;
		sine[48]=456;
		sine[49]=448;
		sine[50]=523;
		sine[51]=482;
		sine[52]=655;
		sine[53]=581;
		sine[54]=845;
		sine[55]=743;
		sine[56]=1088;
		sine[57]=961;
		sine[58]=1373;
		sine[59]=1226;
		sine[60]=1690;
		sine[61]=1528;
		sine[62]=2026;
		sine[63]=1857;
		sine[64]=2370;
		sine[65]=2198;
		sine[66]=2706;
		sine[67]=2539;
		sine[68]=3023;
		sine[69]=2868;
		sine[70]=3308;
		sine[71]=3170;
		sine[72]=3551;
		sine[73]=3435;
		sine[74]=3741;
		sine[75]=3653;
		sine[76]=3873;
		sine[77]=3815;
		sine[78]=3940;
		sine[79]=3914;
		sine[80]=3940;
		sine[81]=3948;
		sine[82]=3873;
		sine[83]=3914;
		sine[84]=3741;
		sine[85]=3815;
		sine[86]=3551;
		sine[87]=3653;
		sine[88]=3308;
		sine[89]=3435;
		sine[90]=3023;
		sine[91]=3170;
		sine[92]=2706;
		sine[93]=2868;
		sine[94]=2370;
		sine[95]=2539;
		sine[96]=2026;
		sine[97]=2198;
		sine[98]=1690;
		sine[99]=1857;
		sine[100]=1373;
		sine[101]=1528;
		sine[102]=1088;
		sine[103]=1226;
		sine[104]=845;
		sine[105]=961;
		sine[106]=655;
		sine[107]=743;
		sine[108]=523;
		sine[109]=581;
		sine[110]=456;
		sine[111]=482;
		sine[112]=456;
		sine[113]=448;
		sine[114]=523;
		sine[115]=482;
		sine[116]=655;
		sine[117]=581;
		sine[118]=845;
		sine[119]=743;
		sine[120]=1088;
		sine[121]=961;
		sine[122]=1373;
		sine[123]=1226;
		sine[124]=1690;
		sine[125]=1528;
		sine[126]=2026;
		sine[127]=1857;
		sine[128]=2370;
		sine[129]=2198;
		sine[130]=2706;
		sine[131]=2539;
		sine[132]=3023;
		sine[133]=2868;
		sine[134]=3308;
		sine[135]=3170;
		sine[136]=3551;
		sine[137]=3435;
		sine[138]=3741;
		sine[139]=3653;
		sine[140]=3873;
		sine[141]=3815;
		sine[142]=3940;
		sine[143]=3914;
		sine[144]=3940;
		sine[145]=3948;
		sine[146]=3873;
		sine[147]=3914;
		sine[148]=3741;
		sine[149]=3815;
		sine[150]=3551;
		sine[151]=3653;
		sine[152]=3308;
		sine[153]=3435;
		sine[154]=3023;
		sine[155]=3170;
		sine[156]=2706;
		sine[157]=2868;
		sine[158]=2370;
		sine[159]=2539;
		sine[160]=2026;
		sine[161]=2198;
		sine[162]=1690;
		sine[163]=1857;
		sine[164]=1373;
		sine[165]=1528;
		sine[166]=1088;
		sine[167]=1226;
		sine[168]=845;
		sine[169]=961;
		sine[170]=655;
		sine[171]=743;
		sine[172]=523;
		sine[173]=581;
		sine[174]=456;
		sine[175]=482;
		sine[176]=456;
		sine[177]=448;
		sine[178]=523;
		sine[179]=482;
		sine[180]=655;
		sine[181]=581;
		sine[182]=845;
		sine[183]=743;
		sine[184]=1088;
		sine[185]=961;
		sine[186]=1373;
		sine[187]=1226;
		sine[188]=1690;
		sine[189]=1528;
		sine[190]=2026;
		sine[191]=1857;
		sine[192]=2370;
		sine[193]=2198;
		sine[194]=2706;
		sine[195]=2539;
		sine[196]=3023;
		sine[197]=2868;
		sine[198]=3308;
		sine[199]=3170;
		sine[200]=3551;
		sine[201]=3435;
		sine[202]=3741;
		sine[203]=3653;
		sine[204]=3873;
		sine[205]=3815;
		sine[206]=3940;
		sine[207]=3914;
		sine[208]=3940;
		sine[209]=3948;
		sine[210]=3873;
		sine[211]=3914;
		sine[212]=3741;
		sine[213]=3815;
		sine[214]=3551;
		sine[215]=3653;
		sine[216]=3308;
		sine[217]=3435;
		sine[218]=3023;
		sine[219]=3170;
		sine[220]=2706;
		sine[221]=2868;
		sine[222]=2370;
		sine[223]=2539;
		sine[224]=2026;
		sine[225]=2198;
		sine[226]=1690;
		sine[227]=1857;
		sine[228]=1373;
		sine[229]=1528;
		sine[230]=1088;
		sine[231]=1226;
		sine[232]=845;
		sine[233]=961;
		sine[234]=655;
		sine[235]=743;
		sine[236]=523;
		sine[237]=581;
		sine[238]=456;
		sine[239]=482;
		sine[240]=456;
		sine[241]=448;
		sine[242]=523;
		sine[243]=482;
		sine[244]=655;
		sine[245]=581;
		sine[246]=845;
		sine[247]=743;
		sine[248]=1088;
		sine[249]=961;
		sine[250]=1373;
		sine[251]=1226;
		sine[252]=1690;
		sine[253]=1528;
		sine[254]=2026;
		sine[255]=1857;
		sine[256]=2370;
		sine[257]=2198;
		sine[258]=2706;
		sine[259]=2539;
		sine[260]=3023;
		sine[261]=2868;
		sine[262]=3308;
		sine[263]=3170;
		sine[264]=3551;
		sine[265]=3435;
		sine[266]=3741;
		sine[267]=3653;
		sine[268]=3873;
		sine[269]=3815;
		sine[270]=3940;
		sine[271]=3914;
		sine[272]=3940;
		sine[273]=3948;
		sine[274]=3873;
		sine[275]=3914;
		sine[276]=3741;
		sine[277]=3815;
		sine[278]=3551;
		sine[279]=3653;
		sine[280]=3308;
		sine[281]=3435;
		sine[282]=3023;
		sine[283]=3170;
		sine[284]=2706;
		sine[285]=2868;
		sine[286]=2370;
		sine[287]=2539;
		sine[288]=2026;
		sine[289]=2198;
		sine[290]=1690;
		sine[291]=1857;
		sine[292]=1373;
		sine[293]=1528;
		sine[294]=1088;
		sine[295]=1226;
		sine[296]=845;
		sine[297]=961;
		sine[298]=655;
		sine[299]=743;
		sine[300]=523;
		sine[301]=581;
		sine[302]=456;
		sine[303]=482;
		sine[304]=456;
		sine[305]=448;
		sine[306]=523;
		sine[307]=482;
		sine[308]=655;
		sine[309]=581;
		sine[310]=845;
		sine[311]=743;
		sine[312]=1088;
		sine[313]=961;
		sine[314]=1373;
		sine[315]=1226;
		sine[316]=1690;
		sine[317]=1528;
		sine[318]=2026;
		sine[319]=1857;
		sine[320]=2370;
		sine[321]=2198;
		sine[322]=2706;
		sine[323]=2539;
		sine[324]=3023;
		sine[325]=2868;
		sine[326]=3308;
		sine[327]=3170;
		sine[328]=3551;
		sine[329]=3435;
		sine[330]=3741;
		sine[331]=3653;
		sine[332]=3873;
		sine[333]=3815;
		sine[334]=3940;
		sine[335]=3914;
		sine[336]=3940;
		sine[337]=3948;
		sine[338]=3873;
		sine[339]=3914;
		sine[340]=3741;
		sine[341]=3815;
		sine[342]=3551;
		sine[343]=3653;
		sine[344]=3308;
		sine[345]=3435;
		sine[346]=3023;
		sine[347]=3170;
		sine[348]=2706;
		sine[349]=2868;
		sine[350]=2370;
		sine[351]=2539;
		sine[352]=2026;
		sine[353]=2198;
		sine[354]=1690;
		sine[355]=1857;
		sine[356]=1373;
		sine[357]=1528;
		sine[358]=1088;
		sine[359]=1226;
		sine[360]=845;
		sine[361]=961;
		sine[362]=655;
		sine[363]=743;
		sine[364]=523;
		sine[365]=581;
		sine[366]=456;
		sine[367]=482;
		sine[368]=456;
		sine[369]=448;
		sine[370]=523;
		sine[371]=482;
		sine[372]=655;
		sine[373]=581;
		sine[374]=845;
		sine[375]=743;
		sine[376]=1088;
		sine[377]=961;
		sine[378]=1373;
		sine[379]=1226;
		sine[380]=1690;
		sine[381]=1528;
		sine[382]=2026;
		sine[383]=1857;
		sine[384]=2370;
		sine[385]=2198;
		sine[386]=2706;
		sine[387]=2539;
		sine[388]=3023;
		sine[389]=2868;
		sine[390]=3308;
		sine[391]=3170;
		sine[392]=3551;
		sine[393]=3435;
		sine[394]=3741;
		sine[395]=3653;
		sine[396]=3873;
		sine[397]=3815;
		sine[398]=3940;
		sine[399]=3914;
		sine[400]=3940;
		sine[401]=3948;
		sine[402]=3873;
		sine[403]=3914;
		sine[404]=3741;
		sine[405]=3815;
		sine[406]=3551;
		sine[407]=3653;
		sine[408]=3308;
		sine[409]=3435;
		sine[410]=3023;
		sine[411]=3170;
		sine[412]=2706;
		sine[413]=2868;
		sine[414]=2370;
		sine[415]=2539;
		sine[416]=2026;
		sine[417]=2198;
		sine[418]=1690;
		sine[419]=1857;
		sine[420]=1373;
		sine[421]=1528;
		sine[422]=1088;
		sine[423]=1226;
		sine[424]=845;
		sine[425]=961;
		sine[426]=655;
		sine[427]=743;
		sine[428]=523;
		sine[429]=581;
		sine[430]=456;
		sine[431]=482;
		sine[432]=456;
		sine[433]=448;
		sine[434]=523;
		sine[435]=482;
		sine[436]=655;
		sine[437]=581;
		sine[438]=845;
		sine[439]=743;
		sine[440]=1088;
		sine[441]=961;
		sine[442]=1373;
		sine[443]=1226;
		sine[444]=1690;
		sine[445]=1528;
		sine[446]=2026;
		sine[447]=1857;
		sine[448]=2370;
		sine[449]=2198;
		sine[450]=2706;
		sine[451]=2539;
		sine[452]=3023;
		sine[453]=2868;
		sine[454]=3308;
		sine[455]=3170;
		sine[456]=3551;
		sine[457]=3435;
		sine[458]=3741;
		sine[459]=3653;
		sine[460]=3873;
		sine[461]=3815;
		sine[462]=3940;
		sine[463]=3914;
		sine[464]=3940;
		sine[465]=3948;
		sine[466]=3873;
		sine[467]=3914;
		sine[468]=3741;
		sine[469]=3815;
		sine[470]=3551;
		sine[471]=3653;
		sine[472]=3308;
		sine[473]=3435;
		sine[474]=3023;
		sine[475]=3170;
		sine[476]=2706;
		sine[477]=2868;
		sine[478]=2370;
		sine[479]=2539;
		sine[480]=2026;
		sine[481]=2198;
		sine[482]=1690;
		sine[483]=1857;
		sine[484]=1373;
		sine[485]=1528;
		sine[486]=1088;
		sine[487]=1226;
		sine[488]=845;
		sine[489]=961;
		sine[490]=655;
		sine[491]=743;
		sine[492]=523;
		sine[493]=581;
		sine[494]=456;
		sine[495]=482;
		sine[496]=456;
		sine[497]=448;
		sine[498]=523;
		sine[499]=482;
		sine[500]=655;
		sine[501]=581;
		sine[502]=845;
		sine[503]=743;
		sine[504]=1088;
		sine[505]=961;
		sine[506]=1373;
		sine[507]=1226;
		sine[508]=1690;
		sine[509]=1528;
		sine[510]=2026;
		sine[511]=1857;
		sine[512]=2370;
		sine[513]=2198;
		sine[514]=2706;
		sine[515]=2539;
		sine[516]=3023;
		sine[517]=2868;
		sine[518]=3308;
		sine[519]=3170;
		sine[520]=3551;
		sine[521]=3435;
		sine[522]=3741;
		sine[523]=3653;
		sine[524]=3873;
		sine[525]=3815;
		sine[526]=3940;
		sine[527]=3914;
		sine[528]=3940;
		sine[529]=3948;
		sine[530]=3873;
		sine[531]=3914;
		sine[532]=3741;
		sine[533]=3815;
		sine[534]=3551;
		sine[535]=3653;
		sine[536]=3308;
		sine[537]=3435;
		sine[538]=3023;
		sine[539]=3170;
		sine[540]=2706;
		sine[541]=2868;
		sine[542]=2370;
		sine[543]=2539;
		sine[544]=2026;
		sine[545]=2198;
		sine[546]=1690;
		sine[547]=1857;
		sine[548]=1373;
		sine[549]=1528;
		sine[550]=1088;
		sine[551]=1226;
		sine[552]=845;
		sine[553]=961;
		sine[554]=655;
		sine[555]=743;
		sine[556]=523;
		sine[557]=581;
		sine[558]=456;
		sine[559]=482;
		sine[560]=456;
		sine[561]=448;
		sine[562]=523;
		sine[563]=482;
		sine[564]=655;
		sine[565]=581;
		sine[566]=845;
		sine[567]=743;
		sine[568]=1088;
		sine[569]=961;
		sine[570]=1373;
		sine[571]=1226;
		sine[572]=1690;
		sine[573]=1528;
		sine[574]=2026;
		sine[575]=1857;
		sine[576]=2370;
		sine[577]=2198;
		sine[578]=2706;
		sine[579]=2539;
		sine[580]=3023;
		sine[581]=2868;
		sine[582]=3308;
		sine[583]=3170;
		sine[584]=3551;
		sine[585]=3435;
		sine[586]=3741;
		sine[587]=3653;
		sine[588]=3873;
		sine[589]=3815;
		sine[590]=3940;
		sine[591]=3914;
		sine[592]=3940;
		sine[593]=3948;
		sine[594]=3873;
		sine[595]=3914;
		sine[596]=3741;
		sine[597]=3815;
		sine[598]=3551;
		sine[599]=3653;
		sine[600]=3308;
		sine[601]=3435;
		sine[602]=3023;
		sine[603]=3170;
		sine[604]=2706;
		sine[605]=2868;
		sine[606]=2370;
		sine[607]=2539;
		sine[608]=2026;
		sine[609]=2198;
		sine[610]=1690;
		sine[611]=1857;
		sine[612]=1373;
		sine[613]=1528;
		sine[614]=1088;
		sine[615]=1226;
		sine[616]=845;
		sine[617]=961;
		sine[618]=655;
		sine[619]=743;
		sine[620]=523;
		sine[621]=581;
		sine[622]=456;
		sine[623]=482;
		sine[624]=456;
		sine[625]=448;
		sine[626]=523;
		sine[627]=482;
		sine[628]=655;
		sine[629]=581;
		sine[630]=845;
		sine[631]=743;
		sine[632]=1088;
		sine[633]=961;
		sine[634]=1373;
		sine[635]=1226;
		sine[636]=1690;
		sine[637]=1528;
		sine[638]=2026;
		sine[639]=1857;
		sine[640]=2370;
		sine[641]=2198;
		sine[642]=2706;
		sine[643]=2539;
		sine[644]=3023;
		sine[645]=2868;
		sine[646]=3308;
		sine[647]=3170;
		sine[648]=3551;
		sine[649]=3435;
		sine[650]=3741;
		sine[651]=3653;
		sine[652]=3873;
		sine[653]=3815;
		sine[654]=3940;
		sine[655]=3914;
		sine[656]=3940;
		sine[657]=3948;
		sine[658]=3873;
		sine[659]=3914;
		sine[660]=3741;
		sine[661]=3815;
		sine[662]=3551;
		sine[663]=3653;
		sine[664]=3308;
		sine[665]=3435;
		sine[666]=3023;
		sine[667]=3170;
		sine[668]=2706;
		sine[669]=2868;
		sine[670]=2370;
		sine[671]=2539;
		sine[672]=2026;
		sine[673]=2198;
		sine[674]=1690;
		sine[675]=1857;
		sine[676]=1373;
		sine[677]=1528;
		sine[678]=1088;
		sine[679]=1226;
		sine[680]=845;
		sine[681]=961;
		sine[682]=655;
		sine[683]=743;
		sine[684]=523;
		sine[685]=581;
		sine[686]=456;
		sine[687]=482;
		sine[688]=456;
		sine[689]=448;
		sine[690]=523;
		sine[691]=482;
		sine[692]=655;
		sine[693]=581;
		sine[694]=845;
		sine[695]=743;
		sine[696]=1088;
		sine[697]=961;
		sine[698]=1373;
		sine[699]=1226;
		sine[700]=1690;
		sine[701]=1528;
		sine[702]=2026;
		sine[703]=1857;
		sine[704]=2370;
		sine[705]=2198;
		sine[706]=2706;
		sine[707]=2539;
		sine[708]=3023;
		sine[709]=2868;
		sine[710]=3308;
		sine[711]=3170;
		sine[712]=3551;
		sine[713]=3435;
		sine[714]=3741;
		sine[715]=3653;
		sine[716]=3873;
		sine[717]=3815;
		sine[718]=3940;
		sine[719]=3914;
		sine[720]=3940;
		sine[721]=3948;
		sine[722]=3873;
		sine[723]=3914;
		sine[724]=3741;
		sine[725]=3815;
		sine[726]=3551;
		sine[727]=3653;
		sine[728]=3308;
		sine[729]=3435;
		sine[730]=3023;
		sine[731]=3170;
		sine[732]=2706;
		sine[733]=2868;
		sine[734]=2370;
		sine[735]=2539;
		sine[736]=2026;
		sine[737]=2198;
		sine[738]=1690;
		sine[739]=1857;
		sine[740]=1373;
		sine[741]=1528;
		sine[742]=1088;
		sine[743]=1226;
		sine[744]=845;
		sine[745]=961;
		sine[746]=655;
		sine[747]=743;
		sine[748]=523;
		sine[749]=581;
		sine[750]=456;
		sine[751]=482;
		sine[752]=456;
		sine[753]=448;
		sine[754]=523;
		sine[755]=482;
		sine[756]=655;
		sine[757]=581;
		sine[758]=845;
		sine[759]=743;
		sine[760]=1088;
		sine[761]=961;
		sine[762]=1373;
		sine[763]=1226;
		sine[764]=1690;
		sine[765]=1528;
		sine[766]=2026;
		sine[767]=1857;
		sine[768]=2370;
		sine[769]=2198;
		sine[770]=2706;
		sine[771]=2539;
		sine[772]=3023;
		sine[773]=2868;
		sine[774]=3308;
		sine[775]=3170;
		sine[776]=3551;
		sine[777]=3435;
		sine[778]=3741;
		sine[779]=3653;
		sine[780]=3873;
		sine[781]=3815;
		sine[782]=3940;
		sine[783]=3914;
		sine[784]=3940;
		sine[785]=3948;
		sine[786]=3873;
		sine[787]=3914;
		sine[788]=3741;
		sine[789]=3815;
		sine[790]=3551;
		sine[791]=3653;
		sine[792]=3308;
		sine[793]=3435;
		sine[794]=3023;
		sine[795]=3170;
		sine[796]=2706;
		sine[797]=2868;
		sine[798]=2370;
		sine[799]=2539;
		sine[800]=2026;
		sine[801]=2198;
		sine[802]=1690;
		sine[803]=1857;
		sine[804]=1373;
		sine[805]=1528;
		sine[806]=1088;
		sine[807]=1226;
		sine[808]=845;
		sine[809]=961;
		sine[810]=655;
		sine[811]=743;
		sine[812]=523;
		sine[813]=581;
		sine[814]=456;
		sine[815]=482;
		sine[816]=456;
		sine[817]=448;
		sine[818]=523;
		sine[819]=482;
		sine[820]=655;
		sine[821]=581;
		sine[822]=845;
		sine[823]=743;
		sine[824]=1088;
		sine[825]=961;
		sine[826]=1373;
		sine[827]=1226;
		sine[828]=1690;
		sine[829]=1528;
		sine[830]=2026;
		sine[831]=1857;
		sine[832]=2370;
		sine[833]=2198;
		sine[834]=2706;
		sine[835]=2539;
		sine[836]=3023;
		sine[837]=2868;
		sine[838]=3308;
		sine[839]=3170;
		sine[840]=3551;
		sine[841]=3435;
		sine[842]=3741;
		sine[843]=3653;
		sine[844]=3873;
		sine[845]=3815;
		sine[846]=3940;
		sine[847]=3914;
		sine[848]=3940;
		sine[849]=3948;
		sine[850]=3873;
		sine[851]=3914;
		sine[852]=3741;
		sine[853]=3815;
		sine[854]=3551;
		sine[855]=3653;
		sine[856]=3308;
		sine[857]=3435;
		sine[858]=3023;
		sine[859]=3170;
		sine[860]=2706;
		sine[861]=2868;
		sine[862]=2370;
		sine[863]=2539;
		sine[864]=2026;
		sine[865]=2198;
		sine[866]=1690;
		sine[867]=1857;
		sine[868]=1373;
		sine[869]=1528;
		sine[870]=1088;
		sine[871]=1226;
		sine[872]=845;
		sine[873]=961;
		sine[874]=655;
		sine[875]=743;
		sine[876]=523;
		sine[877]=581;
		sine[878]=456;
		sine[879]=482;
		sine[880]=456;
		sine[881]=448;
		sine[882]=523;
		sine[883]=482;
		sine[884]=655;
		sine[885]=581;
		sine[886]=845;
		sine[887]=743;
		sine[888]=1088;
		sine[889]=961;
		sine[890]=1373;
		sine[891]=1226;
		sine[892]=1690;
		sine[893]=1528;
		sine[894]=2026;
		sine[895]=1857;
		sine[896]=2370;
		sine[897]=2198;
		sine[898]=2706;
		sine[899]=2539;
		sine[900]=3023;
		sine[901]=2868;
		sine[902]=3308;
		sine[903]=3170;
		sine[904]=3551;
		sine[905]=3435;
		sine[906]=3741;
		sine[907]=3653;
		sine[908]=3873;
		sine[909]=3815;
		sine[910]=3940;
		sine[911]=3914;
		sine[912]=3940;
		sine[913]=3948;
		sine[914]=3873;
		sine[915]=3914;
		sine[916]=3741;
		sine[917]=3815;
		sine[918]=3551;
		sine[919]=3653;
		sine[920]=3308;
		sine[921]=3435;
		sine[922]=3023;
		sine[923]=3170;
		sine[924]=2706;
		sine[925]=2868;
		sine[926]=2370;
		sine[927]=2539;
		sine[928]=2026;
		sine[929]=2198;
		sine[930]=1690;
		sine[931]=1857;
		sine[932]=1373;
		sine[933]=1528;
		sine[934]=1088;
		sine[935]=1226;
		sine[936]=845;
		sine[937]=961;
		sine[938]=655;
		sine[939]=743;
		sine[940]=523;
		sine[941]=581;
		sine[942]=456;
		sine[943]=482;
		sine[944]=456;
		sine[945]=448;
		sine[946]=523;
		sine[947]=482;
		sine[948]=655;
		sine[949]=581;
		sine[950]=845;
		sine[951]=743;
		sine[952]=1088;
		sine[953]=961;
		sine[954]=1373;
		sine[955]=1226;
		sine[956]=1690;
		sine[957]=1528;
		sine[958]=2026;
		sine[959]=1857;
		sine[960]=2370;
		sine[961]=2198;
		sine[962]=2706;
		sine[963]=2539;
		sine[964]=3023;
		sine[965]=2868;
		sine[966]=3308;
		sine[967]=3170;
		sine[968]=3551;
		sine[969]=3435;
		sine[970]=3741;
		sine[971]=3653;
		sine[972]=3873;
		sine[973]=3815;
		sine[974]=3940;
		sine[975]=3914;
		sine[976]=3940;
		sine[977]=3948;
		sine[978]=3873;
		sine[979]=3914;
		sine[980]=3741;
		sine[981]=3815;
		sine[982]=3551;
		sine[983]=3653;
		sine[984]=3308;
		sine[985]=3435;
		sine[986]=3023;
		sine[987]=3170;
		sine[988]=2706;
		sine[989]=2868;
		sine[990]=2370;
		sine[991]=2539;
		sine[992]=2026;
		sine[993]=2198;
		sine[994]=1690;
		sine[995]=1857;
		sine[996]=1373;
		sine[997]=1528;
		sine[998]=1088;
		sine[999]=1226;
		sine[1000]=845;
		sine[1001]=961;
		sine[1002]=655;
		sine[1003]=743;
		sine[1004]=523;
		sine[1005]=581;
		sine[1006]=456;
		sine[1007]=482;
		sine[1008]=456;
		sine[1009]=448;
		sine[1010]=523;
		sine[1011]=482;
		sine[1012]=655;
		sine[1013]=581;
		sine[1014]=845;
		sine[1015]=743;
		sine[1016]=1088;
		sine[1017]=961;
		sine[1018]=1373;
		sine[1019]=1226;
		sine[1020]=1690;
		sine[1021]=1528;
		sine[1022]=2026;
		sine[1023]=1857;
		sine[1024]=2370;
		sine[1025]=2198;
		sine[1026]=2706;
		sine[1027]=2539;
		sine[1028]=3023;
		sine[1029]=2868;
		sine[1030]=3308;
		sine[1031]=3170;
		sine[1032]=3551;
		sine[1033]=3435;
		sine[1034]=3741;
		sine[1035]=3653;
		sine[1036]=3873;
		sine[1037]=3815;
		sine[1038]=3940;
		sine[1039]=3914;
		sine[1040]=3940;
		sine[1041]=3948;
		sine[1042]=3873;
		sine[1043]=3914;
		sine[1044]=3741;
		sine[1045]=3815;
		sine[1046]=3551;
		sine[1047]=3653;
		sine[1048]=3308;
		sine[1049]=3435;
		sine[1050]=3023;
		sine[1051]=3170;
		sine[1052]=2706;
		sine[1053]=2868;
		sine[1054]=2370;
		sine[1055]=2539;
		sine[1056]=2026;
		sine[1057]=2198;
		sine[1058]=1690;
		sine[1059]=1857;
		sine[1060]=1373;
		sine[1061]=1528;
		sine[1062]=1088;
		sine[1063]=1226;
		sine[1064]=845;
		sine[1065]=961;
		sine[1066]=655;
		sine[1067]=743;
		sine[1068]=523;
		sine[1069]=581;
		sine[1070]=456;
		sine[1071]=482;
		sine[1072]=456;
		sine[1073]=448;
		sine[1074]=523;
		sine[1075]=482;
		sine[1076]=655;
		sine[1077]=581;
		sine[1078]=845;
		sine[1079]=743;
		sine[1080]=1088;
		sine[1081]=961;
		sine[1082]=1373;
		sine[1083]=1226;
		sine[1084]=1690;
		sine[1085]=1528;
		sine[1086]=2026;
		sine[1087]=1857;
		sine[1088]=2370;
		sine[1089]=2198;
		sine[1090]=2706;
		sine[1091]=2539;
		sine[1092]=3023;
		sine[1093]=2868;
		sine[1094]=3308;
		sine[1095]=3170;
		sine[1096]=3551;
		sine[1097]=3435;
		sine[1098]=3741;
		sine[1099]=3653;
		sine[1100]=3873;
		sine[1101]=3815;
		sine[1102]=3940;
		sine[1103]=3914;
		sine[1104]=3940;
		sine[1105]=3948;
		sine[1106]=3873;
		sine[1107]=3914;
		sine[1108]=3741;
		sine[1109]=3815;
		sine[1110]=3551;
		sine[1111]=3653;
		sine[1112]=3308;
		sine[1113]=3435;
		sine[1114]=3023;
		sine[1115]=3170;
		sine[1116]=2706;
		sine[1117]=2868;
		sine[1118]=2370;
		sine[1119]=2539;
		sine[1120]=2026;
		sine[1121]=2198;
		sine[1122]=1690;
		sine[1123]=1857;
		sine[1124]=1373;
		sine[1125]=1528;
		sine[1126]=1088;
		sine[1127]=1226;
		sine[1128]=845;
		sine[1129]=961;
		sine[1130]=655;
		sine[1131]=743;
		sine[1132]=523;
		sine[1133]=581;
		sine[1134]=456;
		sine[1135]=482;
		sine[1136]=456;
		sine[1137]=448;
		sine[1138]=523;
		sine[1139]=482;
		sine[1140]=655;
		sine[1141]=581;
		sine[1142]=845;
		sine[1143]=743;
		sine[1144]=1088;
		sine[1145]=961;
		sine[1146]=1373;
		sine[1147]=1226;
		sine[1148]=1690;
		sine[1149]=1528;
		sine[1150]=2026;
		sine[1151]=1857;
		sine[1152]=2370;
		sine[1153]=2198;
		sine[1154]=2706;
		sine[1155]=2539;
		sine[1156]=3023;
		sine[1157]=2868;
		sine[1158]=3308;
		sine[1159]=3170;
		sine[1160]=3551;
		sine[1161]=3435;
		sine[1162]=3741;
		sine[1163]=3653;
		sine[1164]=3873;
		sine[1165]=3815;
		sine[1166]=3940;
		sine[1167]=3914;
		sine[1168]=3940;
		sine[1169]=3948;
		sine[1170]=3873;
		sine[1171]=3914;
		sine[1172]=3741;
		sine[1173]=3815;
		sine[1174]=3551;
		sine[1175]=3653;
		sine[1176]=3308;
		sine[1177]=3435;
		sine[1178]=3023;
		sine[1179]=3170;
		sine[1180]=2706;
		sine[1181]=2868;
		sine[1182]=2370;
		sine[1183]=2539;
		sine[1184]=2026;
		sine[1185]=2198;
		sine[1186]=1690;
		sine[1187]=1857;
		sine[1188]=1373;
		sine[1189]=1528;
		sine[1190]=1088;
		sine[1191]=1226;
		sine[1192]=845;
		sine[1193]=961;
		sine[1194]=655;
		sine[1195]=743;
		sine[1196]=523;
		sine[1197]=581;
		sine[1198]=456;
		sine[1199]=482;
		sine[1200]=456;
		sine[1201]=448;
		sine[1202]=523;
		sine[1203]=482;
		sine[1204]=655;
		sine[1205]=581;
		sine[1206]=845;
		sine[1207]=743;
		sine[1208]=1088;
		sine[1209]=961;
		sine[1210]=1373;
		sine[1211]=1226;
		sine[1212]=1690;
		sine[1213]=1528;
		sine[1214]=2026;
		sine[1215]=1857;
		sine[1216]=2370;
		sine[1217]=2198;
		sine[1218]=2706;
		sine[1219]=2539;
		sine[1220]=3023;
		sine[1221]=2868;
		sine[1222]=3308;
		sine[1223]=3170;
		sine[1224]=3551;
		sine[1225]=3435;
		sine[1226]=3741;
		sine[1227]=3653;
		sine[1228]=3873;
		sine[1229]=3815;
		sine[1230]=3940;
		sine[1231]=3914;
		sine[1232]=3940;
		sine[1233]=3948;
		sine[1234]=3873;
		sine[1235]=3914;
		sine[1236]=3741;
		sine[1237]=3815;
		sine[1238]=3551;
		sine[1239]=3653;
		sine[1240]=3308;
		sine[1241]=3435;
		sine[1242]=3023;
		sine[1243]=3170;
		sine[1244]=2706;
		sine[1245]=2868;
		sine[1246]=2370;
		sine[1247]=2539;
		sine[1248]=2026;
		sine[1249]=2198;
		sine[1250]=1690;
		sine[1251]=1857;
		sine[1252]=1373;
		sine[1253]=1528;
		sine[1254]=1088;
		sine[1255]=1226;
		sine[1256]=845;
		sine[1257]=961;
		sine[1258]=655;
		sine[1259]=743;
		sine[1260]=523;
		sine[1261]=581;
		sine[1262]=456;
		sine[1263]=482;
		sine[1264]=456;
		sine[1265]=448;
		sine[1266]=523;
		sine[1267]=482;
		sine[1268]=655;
		sine[1269]=581;
		sine[1270]=845;
		sine[1271]=743;
		sine[1272]=1088;
		sine[1273]=961;
		sine[1274]=1373;
		sine[1275]=1226;
		sine[1276]=1690;
		sine[1277]=1528;
		sine[1278]=2026;
		sine[1279]=1857;
		sine[1280]=2370;
		sine[1281]=2198;
		sine[1282]=2706;
		sine[1283]=2539;
		sine[1284]=3023;
		sine[1285]=2868;
		sine[1286]=3308;
		sine[1287]=3170;
		sine[1288]=3551;
		sine[1289]=3435;
		sine[1290]=3741;
		sine[1291]=3653;
		sine[1292]=3873;
		sine[1293]=3815;
		sine[1294]=3940;
		sine[1295]=3914;
		sine[1296]=3940;
		sine[1297]=3948;
		sine[1298]=3873;
		sine[1299]=3914;
		sine[1300]=3741;
		sine[1301]=3815;
		sine[1302]=3551;
		sine[1303]=3653;
		sine[1304]=3308;
		sine[1305]=3435;
		sine[1306]=3023;
		sine[1307]=3170;
		sine[1308]=2706;
		sine[1309]=2868;
		sine[1310]=2370;
		sine[1311]=2539;
		sine[1312]=2026;
		sine[1313]=2198;
		sine[1314]=1690;
		sine[1315]=1857;
		sine[1316]=1373;
		sine[1317]=1528;
		sine[1318]=1088;
		sine[1319]=1226;
		sine[1320]=845;
		sine[1321]=961;
		sine[1322]=655;
		sine[1323]=743;
		sine[1324]=523;
		sine[1325]=581;
		sine[1326]=456;
		sine[1327]=482;
		sine[1328]=456;
		sine[1329]=448;
		sine[1330]=523;
		sine[1331]=482;
		sine[1332]=655;
		sine[1333]=581;
		sine[1334]=845;
		sine[1335]=743;
		sine[1336]=1088;
		sine[1337]=961;
		sine[1338]=1373;
		sine[1339]=1226;
		sine[1340]=1690;
		sine[1341]=1528;
		sine[1342]=2026;
		sine[1343]=1857;
		sine[1344]=2370;
		sine[1345]=2198;
		sine[1346]=2706;
		sine[1347]=2539;
		sine[1348]=3023;
		sine[1349]=2868;
		sine[1350]=3308;
		sine[1351]=3170;
		sine[1352]=3551;
		sine[1353]=3435;
		sine[1354]=3741;
		sine[1355]=3653;
		sine[1356]=3873;
		sine[1357]=3815;
		sine[1358]=3940;
		sine[1359]=3914;
		sine[1360]=3940;
		sine[1361]=3948;
		sine[1362]=3873;
		sine[1363]=3914;
		sine[1364]=3741;
		sine[1365]=3815;
		sine[1366]=3551;
		sine[1367]=3653;
		sine[1368]=3308;
		sine[1369]=3435;
		sine[1370]=3023;
		sine[1371]=3170;
		sine[1372]=2706;
		sine[1373]=2868;
		sine[1374]=2370;
		sine[1375]=2539;
		sine[1376]=2026;
		sine[1377]=2198;
		sine[1378]=1690;
		sine[1379]=1857;
		sine[1380]=1373;
		sine[1381]=1528;
		sine[1382]=1088;
		sine[1383]=1226;
		sine[1384]=845;
		sine[1385]=961;
		sine[1386]=655;
		sine[1387]=743;
		sine[1388]=523;
		sine[1389]=581;
		sine[1390]=456;
		sine[1391]=482;
		sine[1392]=456;
		sine[1393]=448;
		sine[1394]=523;
		sine[1395]=482;
		sine[1396]=655;
		sine[1397]=581;
		sine[1398]=845;
		sine[1399]=743;
		sine[1400]=1088;
		sine[1401]=961;
		sine[1402]=1373;
		sine[1403]=1226;
		sine[1404]=1690;
		sine[1405]=1528;
		sine[1406]=2026;
		sine[1407]=1857;
		sine[1408]=2370;
		sine[1409]=2198;
		sine[1410]=2706;
		sine[1411]=2539;
		sine[1412]=3023;
		sine[1413]=2868;
		sine[1414]=3308;
		sine[1415]=3170;
		sine[1416]=3551;
		sine[1417]=3435;
		sine[1418]=3741;
		sine[1419]=3653;
		sine[1420]=3873;
		sine[1421]=3815;
		sine[1422]=3940;
		sine[1423]=3914;
		sine[1424]=3940;
		sine[1425]=3948;
		sine[1426]=3873;
		sine[1427]=3914;
		sine[1428]=3741;
		sine[1429]=3815;
		sine[1430]=3551;
		sine[1431]=3653;
		sine[1432]=3308;
		sine[1433]=3435;
		sine[1434]=3023;
		sine[1435]=3170;
		sine[1436]=2706;
		sine[1437]=2868;
		sine[1438]=2370;
		sine[1439]=2539;
		sine[1440]=2026;
		sine[1441]=2198;
		sine[1442]=1690;
		sine[1443]=1857;
		sine[1444]=1373;
		sine[1445]=1528;
		sine[1446]=1088;
		sine[1447]=1226;
		sine[1448]=845;
		sine[1449]=961;
		sine[1450]=655;
		sine[1451]=743;
		sine[1452]=523;
		sine[1453]=581;
		sine[1454]=456;
		sine[1455]=482;
		sine[1456]=456;
		sine[1457]=448;
		sine[1458]=523;
		sine[1459]=482;
		sine[1460]=655;
		sine[1461]=581;
		sine[1462]=845;
		sine[1463]=743;
		sine[1464]=1088;
		sine[1465]=961;
		sine[1466]=1373;
		sine[1467]=1226;
		sine[1468]=1690;
		sine[1469]=1528;
		sine[1470]=2026;
		sine[1471]=1857;
		sine[1472]=2370;
		sine[1473]=2198;
		sine[1474]=2706;
		sine[1475]=2539;
		sine[1476]=3023;
		sine[1477]=2868;
		sine[1478]=3308;
		sine[1479]=3170;
		sine[1480]=3551;
		sine[1481]=3435;
		sine[1482]=3741;
		sine[1483]=3653;
		sine[1484]=3873;
		sine[1485]=3815;
		sine[1486]=3940;
		sine[1487]=3914;
		sine[1488]=3940;
		sine[1489]=3948;
		sine[1490]=3873;
		sine[1491]=3914;
		sine[1492]=3741;
		sine[1493]=3815;
		sine[1494]=3551;
		sine[1495]=3653;
		sine[1496]=3308;
		sine[1497]=3435;
		sine[1498]=3023;
		sine[1499]=3170;
		sine[1500]=2706;
		sine[1501]=2868;
		sine[1502]=2370;
		sine[1503]=2539;
		sine[1504]=2026;
		sine[1505]=2198;
		sine[1506]=1690;
		sine[1507]=1857;
		sine[1508]=1373;
		sine[1509]=1528;
		sine[1510]=1088;
		sine[1511]=1226;
		sine[1512]=845;
		sine[1513]=961;
		sine[1514]=655;
		sine[1515]=743;
		sine[1516]=523;
		sine[1517]=581;
		sine[1518]=456;
		sine[1519]=482;
		sine[1520]=456;
		sine[1521]=448;
		sine[1522]=523;
		sine[1523]=482;
		sine[1524]=655;
		sine[1525]=581;
		sine[1526]=845;
		sine[1527]=743;
		sine[1528]=1088;
		sine[1529]=961;
		sine[1530]=1373;
		sine[1531]=1226;
		sine[1532]=1690;
		sine[1533]=1528;
		sine[1534]=2026;
		sine[1535]=1857;
		sine[1536]=2370;
		sine[1537]=2198;
		sine[1538]=2706;
		sine[1539]=2539;
		sine[1540]=3023;
		sine[1541]=2868;
		sine[1542]=3308;
		sine[1543]=3170;
		sine[1544]=3551;
		sine[1545]=3435;
		sine[1546]=3741;
		sine[1547]=3653;
		sine[1548]=3873;
		sine[1549]=3815;
		sine[1550]=3940;
		sine[1551]=3914;
		sine[1552]=3940;
		sine[1553]=3948;
		sine[1554]=3873;
		sine[1555]=3914;
		sine[1556]=3741;
		sine[1557]=3815;
		sine[1558]=3551;
		sine[1559]=3653;
		sine[1560]=3308;
		sine[1561]=3435;
		sine[1562]=3023;
		sine[1563]=3170;
		sine[1564]=2706;
		sine[1565]=2868;
		sine[1566]=2370;
		sine[1567]=2539;
		sine[1568]=2026;
		sine[1569]=2198;
		sine[1570]=1690;
		sine[1571]=1857;
		sine[1572]=1373;
		sine[1573]=1528;
		sine[1574]=1088;
		sine[1575]=1226;
		sine[1576]=845;
		sine[1577]=961;
		sine[1578]=655;
		sine[1579]=743;
		sine[1580]=523;
		sine[1581]=581;
		sine[1582]=456;
		sine[1583]=482;
		sine[1584]=456;
		sine[1585]=448;
		sine[1586]=523;
		sine[1587]=482;
		sine[1588]=655;
		sine[1589]=581;
		sine[1590]=845;
		sine[1591]=743;
		sine[1592]=1088;
		sine[1593]=961;
		sine[1594]=1373;
		sine[1595]=1226;
		sine[1596]=1690;
		sine[1597]=1528;
		sine[1598]=2026;
		sine[1599]=1857;
		sine[1600]=2370;
		sine[1601]=2198;
		sine[1602]=2706;
		sine[1603]=2539;
		sine[1604]=3023;
		sine[1605]=2868;
		sine[1606]=3308;
		sine[1607]=3170;
		sine[1608]=3551;
		sine[1609]=3435;
		sine[1610]=3741;
		sine[1611]=3653;
		sine[1612]=3873;
		sine[1613]=3815;
		sine[1614]=3940;
		sine[1615]=3914;
		sine[1616]=3940;
		sine[1617]=3948;
		sine[1618]=3873;
		sine[1619]=3914;
		sine[1620]=3741;
		sine[1621]=3815;
		sine[1622]=3551;
		sine[1623]=3653;
		sine[1624]=3308;
		sine[1625]=3435;
		sine[1626]=3023;
		sine[1627]=3170;
		sine[1628]=2706;
		sine[1629]=2868;
		sine[1630]=2370;
		sine[1631]=2539;
		sine[1632]=2026;
		sine[1633]=2198;
		sine[1634]=1690;
		sine[1635]=1857;
		sine[1636]=1373;
		sine[1637]=1528;
		sine[1638]=1088;
		sine[1639]=1226;
		sine[1640]=845;
		sine[1641]=961;
		sine[1642]=655;
		sine[1643]=743;
		sine[1644]=523;
		sine[1645]=581;
		sine[1646]=456;
		sine[1647]=482;
		sine[1648]=456;
		sine[1649]=448;
		sine[1650]=523;
		sine[1651]=482;
		sine[1652]=655;
		sine[1653]=581;
		sine[1654]=845;
		sine[1655]=743;
		sine[1656]=1088;
		sine[1657]=961;
		sine[1658]=1373;
		sine[1659]=1226;
		sine[1660]=1690;
		sine[1661]=1528;
		sine[1662]=2026;
		sine[1663]=1857;
		sine[1664]=2370;
		sine[1665]=2198;
		sine[1666]=2706;
		sine[1667]=2539;
		sine[1668]=3023;
		sine[1669]=2868;
		sine[1670]=3308;
		sine[1671]=3170;
		sine[1672]=3551;
		sine[1673]=3435;
		sine[1674]=3741;
		sine[1675]=3653;
		sine[1676]=3873;
		sine[1677]=3815;
		sine[1678]=3940;
		sine[1679]=3914;
		sine[1680]=3940;
		sine[1681]=3948;
		sine[1682]=3873;
		sine[1683]=3914;
		sine[1684]=3741;
		sine[1685]=3815;
		sine[1686]=3551;
		sine[1687]=3653;
		sine[1688]=3308;
		sine[1689]=3435;
		sine[1690]=3023;
		sine[1691]=3170;
		sine[1692]=2706;
		sine[1693]=2868;
		sine[1694]=2370;
		sine[1695]=2539;
		sine[1696]=2026;
		sine[1697]=2198;
		sine[1698]=1690;
		sine[1699]=1857;
		sine[1700]=1373;
		sine[1701]=1528;
		sine[1702]=1088;
		sine[1703]=1226;
		sine[1704]=845;
		sine[1705]=961;
		sine[1706]=655;
		sine[1707]=743;
		sine[1708]=523;
		sine[1709]=581;
		sine[1710]=456;
		sine[1711]=482;
		sine[1712]=456;
		sine[1713]=448;
		sine[1714]=523;
		sine[1715]=482;
		sine[1716]=655;
		sine[1717]=581;
		sine[1718]=845;
		sine[1719]=743;
		sine[1720]=1088;
		sine[1721]=961;
		sine[1722]=1373;
		sine[1723]=1226;
		sine[1724]=1690;
		sine[1725]=1528;
		sine[1726]=2026;
		sine[1727]=1857;
		sine[1728]=2370;
		sine[1729]=2198;
		sine[1730]=2706;
		sine[1731]=2539;
		sine[1732]=3023;
		sine[1733]=2868;
		sine[1734]=3308;
		sine[1735]=3170;
		sine[1736]=3551;
		sine[1737]=3435;
		sine[1738]=3741;
		sine[1739]=3653;
		sine[1740]=3873;
		sine[1741]=3815;
		sine[1742]=3940;
		sine[1743]=3914;
		sine[1744]=3940;
		sine[1745]=3948;
		sine[1746]=3873;
		sine[1747]=3914;
		sine[1748]=3741;
		sine[1749]=3815;
		sine[1750]=3551;
		sine[1751]=3653;
		sine[1752]=3308;
		sine[1753]=3435;
		sine[1754]=3023;
		sine[1755]=3170;
		sine[1756]=2706;
		sine[1757]=2868;
		sine[1758]=2370;
		sine[1759]=2539;
		sine[1760]=2026;
		sine[1761]=2198;
		sine[1762]=1690;
		sine[1763]=1857;
		sine[1764]=1373;
		sine[1765]=1528;
		sine[1766]=1088;
		sine[1767]=1226;
		sine[1768]=845;
		sine[1769]=961;
		sine[1770]=655;
		sine[1771]=743;
		sine[1772]=523;
		sine[1773]=581;
		sine[1774]=456;
		sine[1775]=482;
		sine[1776]=456;
		sine[1777]=448;
		sine[1778]=523;
		sine[1779]=482;
		sine[1780]=655;
		sine[1781]=581;
		sine[1782]=845;
		sine[1783]=743;
		sine[1784]=1088;
		sine[1785]=961;
		sine[1786]=1373;
		sine[1787]=1226;
		sine[1788]=1690;
		sine[1789]=1528;
		sine[1790]=2026;
		sine[1791]=1857;
		sine[1792]=2370;
		sine[1793]=2198;
		sine[1794]=2706;
		sine[1795]=2539;
		sine[1796]=3023;
		sine[1797]=2868;
		sine[1798]=3308;
		sine[1799]=3170;
		sine[1800]=3551;
		sine[1801]=3435;
		sine[1802]=3741;
		sine[1803]=3653;
		sine[1804]=3873;
		sine[1805]=3815;
		sine[1806]=3940;
		sine[1807]=3914;
		sine[1808]=3940;
		sine[1809]=3948;
		sine[1810]=3873;
		sine[1811]=3914;
		sine[1812]=3741;
		sine[1813]=3815;
		sine[1814]=3551;
		sine[1815]=3653;
		sine[1816]=3308;
		sine[1817]=3435;
		sine[1818]=3023;
		sine[1819]=3170;
		sine[1820]=2706;
		sine[1821]=2868;
		sine[1822]=2370;
		sine[1823]=2539;
		sine[1824]=2026;
		sine[1825]=2198;
		sine[1826]=1690;
		sine[1827]=1857;
		sine[1828]=1373;
		sine[1829]=1528;
		sine[1830]=1088;
		sine[1831]=1226;
		sine[1832]=845;
		sine[1833]=961;
		sine[1834]=655;
		sine[1835]=743;
		sine[1836]=523;
		sine[1837]=581;
		sine[1838]=456;
		sine[1839]=482;
		sine[1840]=456;
		sine[1841]=448;
		sine[1842]=523;
		sine[1843]=482;
		sine[1844]=655;
		sine[1845]=581;
		sine[1846]=845;
		sine[1847]=743;
		sine[1848]=1088;
		sine[1849]=961;
		sine[1850]=1373;
		sine[1851]=1226;
		sine[1852]=1690;
		sine[1853]=1528;
		sine[1854]=2026;
		sine[1855]=1857;
		sine[1856]=2370;
		sine[1857]=2198;
		sine[1858]=2706;
		sine[1859]=2539;
		sine[1860]=3023;
		sine[1861]=2868;
		sine[1862]=3308;
		sine[1863]=3170;
		sine[1864]=3551;
		sine[1865]=3435;
		sine[1866]=3741;
		sine[1867]=3653;
		sine[1868]=3873;
		sine[1869]=3815;
		sine[1870]=3940;
		sine[1871]=3914;
		sine[1872]=3940;
		sine[1873]=3948;
		sine[1874]=3873;
		sine[1875]=3914;
		sine[1876]=3741;
		sine[1877]=3815;
		sine[1878]=3551;
		sine[1879]=3653;
		sine[1880]=3308;
		sine[1881]=3435;
		sine[1882]=3023;
		sine[1883]=3170;
		sine[1884]=2706;
		sine[1885]=2868;
		sine[1886]=2370;
		sine[1887]=2539;
		sine[1888]=2026;
		sine[1889]=2198;
		sine[1890]=1690;
		sine[1891]=1857;
		sine[1892]=1373;
		sine[1893]=1528;
		sine[1894]=1088;
		sine[1895]=1226;
		sine[1896]=845;
		sine[1897]=961;
		sine[1898]=655;
		sine[1899]=743;
		sine[1900]=523;
		sine[1901]=581;
		sine[1902]=456;
		sine[1903]=482;
		sine[1904]=456;
		sine[1905]=448;
		sine[1906]=523;
		sine[1907]=482;
		sine[1908]=655;
		sine[1909]=581;
		sine[1910]=845;
		sine[1911]=743;
		sine[1912]=1088;
		sine[1913]=961;
		sine[1914]=1373;
		sine[1915]=1226;
		sine[1916]=1690;
		sine[1917]=1528;
		sine[1918]=2026;
		sine[1919]=1857;
		sine[1920]=2370;
		sine[1921]=2198;
		sine[1922]=2706;
		sine[1923]=2539;
		sine[1924]=3023;
		sine[1925]=2868;
		sine[1926]=3308;
		sine[1927]=3170;
		sine[1928]=3551;
		sine[1929]=3435;
		sine[1930]=3741;
		sine[1931]=3653;
		sine[1932]=3873;
		sine[1933]=3815;
		sine[1934]=3940;
		sine[1935]=3914;
		sine[1936]=3940;
		sine[1937]=3948;
		sine[1938]=3873;
		sine[1939]=3914;
		sine[1940]=3741;
		sine[1941]=3815;
		sine[1942]=3551;
		sine[1943]=3653;
		sine[1944]=3308;
		sine[1945]=3435;
		sine[1946]=3023;
		sine[1947]=3170;
		sine[1948]=2706;
		sine[1949]=2868;
		sine[1950]=2370;
		sine[1951]=2539;
		sine[1952]=2026;
		sine[1953]=2198;
		sine[1954]=1690;
		sine[1955]=1857;
		sine[1956]=1373;
		sine[1957]=1528;
		sine[1958]=1088;
		sine[1959]=1226;
		sine[1960]=845;
		sine[1961]=961;
		sine[1962]=655;
		sine[1963]=743;
		sine[1964]=523;
		sine[1965]=581;
		sine[1966]=456;
		sine[1967]=482;
		sine[1968]=456;
		sine[1969]=448;
		sine[1970]=523;
		sine[1971]=482;
		sine[1972]=655;
		sine[1973]=581;
		sine[1974]=845;
		sine[1975]=743;
		sine[1976]=1088;
		sine[1977]=961;
		sine[1978]=1373;
		sine[1979]=1226;
		sine[1980]=1690;
		sine[1981]=1528;
		sine[1982]=2026;
		sine[1983]=1857;
		sine[1984]=2370;
		sine[1985]=2198;
		sine[1986]=2706;
		sine[1987]=2539;
		sine[1988]=3023;
		sine[1989]=2868;
		sine[1990]=3308;
		sine[1991]=3170;
		sine[1992]=3551;
		sine[1993]=3435;
		sine[1994]=3741;
		sine[1995]=3653;
		sine[1996]=3873;
		sine[1997]=3815;
		sine[1998]=3940;
		sine[1999]=3914;
		sine[2000]=3940;
		sine[2001]=3948;
		sine[2002]=3873;
		sine[2003]=3914;
		sine[2004]=3741;
		sine[2005]=3815;
		sine[2006]=3551;
		sine[2007]=3653;
		sine[2008]=3308;
		sine[2009]=3435;
		sine[2010]=3023;
		sine[2011]=3170;
		sine[2012]=2706;
		sine[2013]=2868;
		sine[2014]=2370;
		sine[2015]=2539;
		sine[2016]=2026;
		sine[2017]=2198;
		sine[2018]=1690;
		sine[2019]=1857;
		sine[2020]=1373;
		sine[2021]=1528;
		sine[2022]=1088;
		sine[2023]=1226;
		sine[2024]=845;
		sine[2025]=961;
		sine[2026]=655;
		sine[2027]=743;
		sine[2028]=523;
		sine[2029]=581;
		sine[2030]=456;
		sine[2031]=482;
		sine[2032]=456;
		sine[2033]=448;
		sine[2034]=523;
		sine[2035]=482;
		sine[2036]=655;
		sine[2037]=581;
		sine[2038]=845;
		sine[2039]=743;
		sine[2040]=1088;
		sine[2041]=961;
		sine[2042]=1373;
		sine[2043]=1226;
		sine[2044]=1690;
		sine[2045]=1528;
		sine[2046]=2026;
		sine[2047]=1857;
		sine[2048]=2370;
		sine[2049]=2198;
		sine[2050]=2706;
		sine[2051]=2539;
		sine[2052]=3023;
		sine[2053]=2868;
		sine[2054]=3308;
		sine[2055]=3170;
		sine[2056]=3551;
		sine[2057]=3435;
		sine[2058]=3741;
		sine[2059]=3653;
		sine[2060]=3873;
		sine[2061]=3815;
		sine[2062]=3940;
		sine[2063]=3914;
		sine[2064]=3940;
		sine[2065]=3948;
		sine[2066]=3873;
		sine[2067]=3914;
		sine[2068]=3741;
		sine[2069]=3815;
		sine[2070]=3551;
		sine[2071]=3653;
		sine[2072]=3308;
		sine[2073]=3435;
		sine[2074]=3023;
		sine[2075]=3170;
		sine[2076]=2706;
		sine[2077]=2868;
		sine[2078]=2370;
		sine[2079]=2539;
		sine[2080]=2026;
		sine[2081]=2198;
		sine[2082]=1690;
		sine[2083]=1857;
		sine[2084]=1373;
		sine[2085]=1528;
		sine[2086]=1088;
		sine[2087]=1226;
		sine[2088]=845;
		sine[2089]=961;
		sine[2090]=655;
		sine[2091]=743;
		sine[2092]=523;
		sine[2093]=581;
		sine[2094]=456;
		sine[2095]=482;
		sine[2096]=456;
		sine[2097]=448;
		sine[2098]=523;
		sine[2099]=482;
		sine[2100]=655;
		sine[2101]=581;
		sine[2102]=845;
		sine[2103]=743;
		sine[2104]=1088;
		sine[2105]=961;
		sine[2106]=1373;
		sine[2107]=1226;
		sine[2108]=1690;
		sine[2109]=1528;
		sine[2110]=2026;
		sine[2111]=1857;
		sine[2112]=2370;
		sine[2113]=2198;
		sine[2114]=2706;
		sine[2115]=2539;
		sine[2116]=3023;
		sine[2117]=2868;
		sine[2118]=3308;
		sine[2119]=3170;
		sine[2120]=3551;
		sine[2121]=3435;
		sine[2122]=3741;
		sine[2123]=3653;
		sine[2124]=3873;
		sine[2125]=3815;
		sine[2126]=3940;
		sine[2127]=3914;
		sine[2128]=3940;
		sine[2129]=3948;
		sine[2130]=3873;
		sine[2131]=3914;
		sine[2132]=3741;
		sine[2133]=3815;
		sine[2134]=3551;
		sine[2135]=3653;
		sine[2136]=3308;
		sine[2137]=3435;
		sine[2138]=3023;
		sine[2139]=3170;
		sine[2140]=2706;
		sine[2141]=2868;
		sine[2142]=2370;
		sine[2143]=2539;
		sine[2144]=2026;
		sine[2145]=2198;
		sine[2146]=1690;
		sine[2147]=1857;
		sine[2148]=1373;
		sine[2149]=1528;
		sine[2150]=1088;
		sine[2151]=1226;
		sine[2152]=845;
		sine[2153]=961;
		sine[2154]=655;
		sine[2155]=743;
		sine[2156]=523;
		sine[2157]=581;
		sine[2158]=456;
		sine[2159]=482;
		sine[2160]=456;
		sine[2161]=448;
		sine[2162]=523;
		sine[2163]=482;
		sine[2164]=655;
		sine[2165]=581;
		sine[2166]=845;
		sine[2167]=743;
		sine[2168]=1088;
		sine[2169]=961;
		sine[2170]=1373;
		sine[2171]=1226;
		sine[2172]=1690;
		sine[2173]=1528;
		sine[2174]=2026;
		sine[2175]=1857;
		sine[2176]=2370;
		sine[2177]=2198;
		sine[2178]=2706;
		sine[2179]=2539;
		sine[2180]=3023;
		sine[2181]=2868;
		sine[2182]=3308;
		sine[2183]=3170;
		sine[2184]=3551;
		sine[2185]=3435;
		sine[2186]=3741;
		sine[2187]=3653;
		sine[2188]=3873;
		sine[2189]=3815;
		sine[2190]=3940;
		sine[2191]=3914;
		sine[2192]=3940;
		sine[2193]=3948;
		sine[2194]=3873;
		sine[2195]=3914;
		sine[2196]=3741;
		sine[2197]=3815;
		sine[2198]=3551;
		sine[2199]=3653;
		sine[2200]=3308;
		sine[2201]=3435;
		sine[2202]=3023;
		sine[2203]=3170;
		sine[2204]=2706;
		sine[2205]=2868;
		sine[2206]=2370;
		sine[2207]=2539;
		sine[2208]=2026;
		sine[2209]=2198;
		sine[2210]=1690;
		sine[2211]=1857;
		sine[2212]=1373;
		sine[2213]=1528;
		sine[2214]=1088;
		sine[2215]=1226;
		sine[2216]=845;
		sine[2217]=961;
		sine[2218]=655;
		sine[2219]=743;
		sine[2220]=523;
		sine[2221]=581;
		sine[2222]=456;
		sine[2223]=482;
		sine[2224]=456;
		sine[2225]=448;
		sine[2226]=523;
		sine[2227]=482;
		sine[2228]=655;
		sine[2229]=581;
		sine[2230]=845;
		sine[2231]=743;
		sine[2232]=1088;
		sine[2233]=961;
		sine[2234]=1373;
		sine[2235]=1226;
		sine[2236]=1690;
		sine[2237]=1528;
		sine[2238]=2026;
		sine[2239]=1857;
		sine[2240]=2370;
		sine[2241]=2198;
		sine[2242]=2706;
		sine[2243]=2539;
		sine[2244]=3023;
		sine[2245]=2868;
		sine[2246]=3308;
		sine[2247]=3170;
		sine[2248]=3551;
		sine[2249]=3435;
		sine[2250]=3741;
		sine[2251]=3653;
		sine[2252]=3873;
		sine[2253]=3815;
		sine[2254]=3940;
		sine[2255]=3914;
		sine[2256]=3940;
		sine[2257]=3948;
		sine[2258]=3873;
		sine[2259]=3914;
		sine[2260]=3741;
		sine[2261]=3815;
		sine[2262]=3551;
		sine[2263]=3653;
		sine[2264]=3308;
		sine[2265]=3435;
		sine[2266]=3023;
		sine[2267]=3170;
		sine[2268]=2706;
		sine[2269]=2868;
		sine[2270]=2370;
		sine[2271]=2539;
		sine[2272]=2026;
		sine[2273]=2198;
		sine[2274]=1690;
		sine[2275]=1857;
		sine[2276]=1373;
		sine[2277]=1528;
		sine[2278]=1088;
		sine[2279]=1226;
		sine[2280]=845;
		sine[2281]=961;
		sine[2282]=655;
		sine[2283]=743;
		sine[2284]=523;
		sine[2285]=581;
		sine[2286]=456;
		sine[2287]=482;
		sine[2288]=456;
		sine[2289]=448;
		sine[2290]=523;
		sine[2291]=482;
		sine[2292]=655;
		sine[2293]=581;
		sine[2294]=845;
		sine[2295]=743;
		sine[2296]=1088;
		sine[2297]=961;
		sine[2298]=1373;
		sine[2299]=1226;
		sine[2300]=1690;
		sine[2301]=1528;
		sine[2302]=2026;
		sine[2303]=1857;
		sine[2304]=2370;
		sine[2305]=2198;
		sine[2306]=2706;
		sine[2307]=2539;
		sine[2308]=3023;
		sine[2309]=2868;
		sine[2310]=3308;
		sine[2311]=3170;
		sine[2312]=3551;
		sine[2313]=3435;
		sine[2314]=3741;
		sine[2315]=3653;
		sine[2316]=3873;
		sine[2317]=3815;
		sine[2318]=3940;
		sine[2319]=3914;
		sine[2320]=3940;
		sine[2321]=3948;
		sine[2322]=3873;
		sine[2323]=3914;
		sine[2324]=3741;
		sine[2325]=3815;
		sine[2326]=3551;
		sine[2327]=3653;
		sine[2328]=3308;
		sine[2329]=3435;
		sine[2330]=3023;
		sine[2331]=3170;
		sine[2332]=2706;
		sine[2333]=2868;
		sine[2334]=2370;
		sine[2335]=2539;
		sine[2336]=2026;
		sine[2337]=2198;
		sine[2338]=1690;
		sine[2339]=1857;
		sine[2340]=1373;
		sine[2341]=1528;
		sine[2342]=1088;
		sine[2343]=1226;
		sine[2344]=845;
		sine[2345]=961;
		sine[2346]=655;
		sine[2347]=743;
		sine[2348]=523;
		sine[2349]=581;
		sine[2350]=456;
		sine[2351]=482;
		sine[2352]=456;
		sine[2353]=448;
		sine[2354]=523;
		sine[2355]=482;
		sine[2356]=655;
		sine[2357]=581;
		sine[2358]=845;
		sine[2359]=743;
		sine[2360]=1088;
		sine[2361]=961;
		sine[2362]=1373;
		sine[2363]=1226;
		sine[2364]=1690;
		sine[2365]=1528;
		sine[2366]=2026;
		sine[2367]=1857;
		sine[2368]=2370;
		sine[2369]=2198;
		sine[2370]=2706;
		sine[2371]=2539;
		sine[2372]=3023;
		sine[2373]=2868;
		sine[2374]=3308;
		sine[2375]=3170;
		sine[2376]=3551;
		sine[2377]=3435;
		sine[2378]=3741;
		sine[2379]=3653;
		sine[2380]=3873;
		sine[2381]=3815;
		sine[2382]=3940;
		sine[2383]=3914;
		sine[2384]=3940;
		sine[2385]=3948;
		sine[2386]=3873;
		sine[2387]=3914;
		sine[2388]=3741;
		sine[2389]=3815;
		sine[2390]=3551;
		sine[2391]=3653;
		sine[2392]=3308;
		sine[2393]=3435;
		sine[2394]=3023;
		sine[2395]=3170;
		sine[2396]=2706;
		sine[2397]=2868;
		sine[2398]=2370;
		sine[2399]=2539;
		sine[2400]=2026;
		sine[2401]=2198;
		sine[2402]=1690;
		sine[2403]=1857;
		sine[2404]=1373;
		sine[2405]=1528;
		sine[2406]=1088;
		sine[2407]=1226;
		sine[2408]=845;
		sine[2409]=961;
		sine[2410]=655;
		sine[2411]=743;
		sine[2412]=523;
		sine[2413]=581;
		sine[2414]=456;
		sine[2415]=482;
		sine[2416]=456;
		sine[2417]=448;
		sine[2418]=523;
		sine[2419]=482;
		sine[2420]=655;
		sine[2421]=581;
		sine[2422]=845;
		sine[2423]=743;
		sine[2424]=1088;
		sine[2425]=961;
		sine[2426]=1373;
		sine[2427]=1226;
		sine[2428]=1690;
		sine[2429]=1528;
		sine[2430]=2026;
		sine[2431]=1857;
		sine[2432]=2370;
		sine[2433]=2198;
		sine[2434]=2706;
		sine[2435]=2539;
		sine[2436]=3023;
		sine[2437]=2868;
		sine[2438]=3308;
		sine[2439]=3170;
		sine[2440]=3551;
		sine[2441]=3435;
		sine[2442]=3741;
		sine[2443]=3653;
		sine[2444]=3873;
		sine[2445]=3815;
		sine[2446]=3940;
		sine[2447]=3914;
		sine[2448]=3940;
		sine[2449]=3948;
		sine[2450]=3873;
		sine[2451]=3914;
		sine[2452]=3741;
		sine[2453]=3815;
		sine[2454]=3551;
		sine[2455]=3653;
		sine[2456]=3308;
		sine[2457]=3435;
		sine[2458]=3023;
		sine[2459]=3170;
		sine[2460]=2706;
		sine[2461]=2868;
		sine[2462]=2370;
		sine[2463]=2539;
		sine[2464]=2026;
		sine[2465]=2198;
		sine[2466]=1690;
		sine[2467]=1857;
		sine[2468]=1373;
		sine[2469]=1528;
		sine[2470]=1088;
		sine[2471]=1226;
		sine[2472]=845;
		sine[2473]=961;
		sine[2474]=655;
		sine[2475]=743;
		sine[2476]=523;
		sine[2477]=581;
		sine[2478]=456;
		sine[2479]=482;
		sine[2480]=456;
		sine[2481]=448;
		sine[2482]=523;
		sine[2483]=482;
		sine[2484]=655;
		sine[2485]=581;
		sine[2486]=845;
		sine[2487]=743;
		sine[2488]=1088;
		sine[2489]=961;
		sine[2490]=1373;
		sine[2491]=1226;
		sine[2492]=1690;
		sine[2493]=1528;
		sine[2494]=2026;
		sine[2495]=1857;
		sine[2496]=2370;
		sine[2497]=2198;
		sine[2498]=2706;
		sine[2499]=2539;
		sine[2500]=3023;
		sine[2501]=2868;
		sine[2502]=3308;
		sine[2503]=3170;
		sine[2504]=3551;
		sine[2505]=3435;
		sine[2506]=3741;
		sine[2507]=3653;
		sine[2508]=3873;
		sine[2509]=3815;
		sine[2510]=3940;
		sine[2511]=3914;
		sine[2512]=3940;
		sine[2513]=3948;
		sine[2514]=3873;
		sine[2515]=3914;
		sine[2516]=3741;
		sine[2517]=3815;
		sine[2518]=3551;
		sine[2519]=3653;
		sine[2520]=3308;
		sine[2521]=3435;
		sine[2522]=3023;
		sine[2523]=3170;
		sine[2524]=2706;
		sine[2525]=2868;
		sine[2526]=2370;
		sine[2527]=2539;
		sine[2528]=2026;
		sine[2529]=2198;
		sine[2530]=1690;
		sine[2531]=1857;
		sine[2532]=1373;
		sine[2533]=1528;
		sine[2534]=1088;
		sine[2535]=1226;
		sine[2536]=845;
		sine[2537]=961;
		sine[2538]=655;
		sine[2539]=743;
		sine[2540]=523;
		sine[2541]=581;
		sine[2542]=456;
		sine[2543]=482;
		sine[2544]=456;
		sine[2545]=448;
		sine[2546]=523;
		sine[2547]=482;
		sine[2548]=655;
		sine[2549]=581;
		sine[2550]=845;
		sine[2551]=743;
		sine[2552]=1088;
		sine[2553]=961;
		sine[2554]=1373;
		sine[2555]=1226;
		sine[2556]=1690;
		sine[2557]=1528;
		sine[2558]=2026;
		sine[2559]=1857;
		sine[2560]=2370;
		sine[2561]=2198;
		sine[2562]=2706;
		sine[2563]=2539;
		sine[2564]=3023;
		sine[2565]=2868;
		sine[2566]=3308;
		sine[2567]=3170;
		sine[2568]=3551;
		sine[2569]=3435;
		sine[2570]=3741;
		sine[2571]=3653;
		sine[2572]=3873;
		sine[2573]=3815;
		sine[2574]=3940;
		sine[2575]=3914;
		sine[2576]=3940;
		sine[2577]=3948;
		sine[2578]=3873;
		sine[2579]=3914;
		sine[2580]=3741;
		sine[2581]=3815;
		sine[2582]=3551;
		sine[2583]=3653;
		sine[2584]=3308;
		sine[2585]=3435;
		sine[2586]=3023;
		sine[2587]=3170;
		sine[2588]=2706;
		sine[2589]=2868;
		sine[2590]=2370;
		sine[2591]=2539;
		sine[2592]=2026;
		sine[2593]=2198;
		sine[2594]=1690;
		sine[2595]=1857;
		sine[2596]=1373;
		sine[2597]=1528;
		sine[2598]=1088;
		sine[2599]=1226;
		sine[2600]=845;
		sine[2601]=961;
		sine[2602]=655;
		sine[2603]=743;
		sine[2604]=523;
		sine[2605]=581;
		sine[2606]=456;
		sine[2607]=482;
		sine[2608]=456;
		sine[2609]=448;
		sine[2610]=523;
		sine[2611]=482;
		sine[2612]=655;
		sine[2613]=581;
		sine[2614]=845;
		sine[2615]=743;
		sine[2616]=1088;
		sine[2617]=961;
		sine[2618]=1373;
		sine[2619]=1226;
		sine[2620]=1690;
		sine[2621]=1528;
		sine[2622]=2026;
		sine[2623]=1857;
		sine[2624]=2370;
		sine[2625]=2198;
		sine[2626]=2706;
		sine[2627]=2539;
		sine[2628]=3023;
		sine[2629]=2868;
		sine[2630]=3308;
		sine[2631]=3170;
		sine[2632]=3551;
		sine[2633]=3435;
		sine[2634]=3741;
		sine[2635]=3653;
		sine[2636]=3873;
		sine[2637]=3815;
		sine[2638]=3940;
		sine[2639]=3914;
		sine[2640]=3940;
		sine[2641]=3948;
		sine[2642]=3873;
		sine[2643]=3914;
		sine[2644]=3741;
		sine[2645]=3815;
		sine[2646]=3551;
		sine[2647]=3653;
		sine[2648]=3308;
		sine[2649]=3435;
		sine[2650]=3023;
		sine[2651]=3170;
		sine[2652]=2706;
		sine[2653]=2868;
		sine[2654]=2370;
		sine[2655]=2539;
		sine[2656]=2026;
		sine[2657]=2198;
		sine[2658]=1690;
		sine[2659]=1857;
		sine[2660]=1373;
		sine[2661]=1528;
		sine[2662]=1088;
		sine[2663]=1226;
		sine[2664]=845;
		sine[2665]=961;
		sine[2666]=655;
		sine[2667]=743;
		sine[2668]=523;
		sine[2669]=581;
		sine[2670]=456;
		sine[2671]=482;
		sine[2672]=456;
		sine[2673]=448;
		sine[2674]=523;
		sine[2675]=482;
		sine[2676]=655;
		sine[2677]=581;
		sine[2678]=845;
		sine[2679]=743;
		sine[2680]=1088;
		sine[2681]=961;
		sine[2682]=1373;
		sine[2683]=1226;
		sine[2684]=1690;
		sine[2685]=1528;
		sine[2686]=2026;
		sine[2687]=1857;
		sine[2688]=2370;
		sine[2689]=2198;
		sine[2690]=2706;
		sine[2691]=2539;
		sine[2692]=3023;
		sine[2693]=2868;
		sine[2694]=3308;
		sine[2695]=3170;
		sine[2696]=3551;
		sine[2697]=3435;
		sine[2698]=3741;
		sine[2699]=3653;
		sine[2700]=3873;
		sine[2701]=3815;
		sine[2702]=3940;
		sine[2703]=3914;
		sine[2704]=3940;
		sine[2705]=3948;
		sine[2706]=3873;
		sine[2707]=3914;
		sine[2708]=3741;
		sine[2709]=3815;
		sine[2710]=3551;
		sine[2711]=3653;
		sine[2712]=3308;
		sine[2713]=3435;
		sine[2714]=3023;
		sine[2715]=3170;
		sine[2716]=2706;
		sine[2717]=2868;
		sine[2718]=2370;
		sine[2719]=2539;
		sine[2720]=2026;
		sine[2721]=2198;
		sine[2722]=1690;
		sine[2723]=1857;
		sine[2724]=1373;
		sine[2725]=1528;
		sine[2726]=1088;
		sine[2727]=1226;
		sine[2728]=845;
		sine[2729]=961;
		sine[2730]=655;
		sine[2731]=743;
		sine[2732]=523;
		sine[2733]=581;
		sine[2734]=456;
		sine[2735]=482;
		sine[2736]=456;
		sine[2737]=448;
		sine[2738]=523;
		sine[2739]=482;
		sine[2740]=655;
		sine[2741]=581;
		sine[2742]=845;
		sine[2743]=743;
		sine[2744]=1088;
		sine[2745]=961;
		sine[2746]=1373;
		sine[2747]=1226;
		sine[2748]=1690;
		sine[2749]=1528;
		sine[2750]=2026;
		sine[2751]=1857;
		sine[2752]=2370;
		sine[2753]=2198;
		sine[2754]=2706;
		sine[2755]=2539;
		sine[2756]=3023;
		sine[2757]=2868;
		sine[2758]=3308;
		sine[2759]=3170;
		sine[2760]=3551;
		sine[2761]=3435;
		sine[2762]=3741;
		sine[2763]=3653;
		sine[2764]=3873;
		sine[2765]=3815;
		sine[2766]=3940;
		sine[2767]=3914;
		sine[2768]=3940;
		sine[2769]=3948;
		sine[2770]=3873;
		sine[2771]=3914;
		sine[2772]=3741;
		sine[2773]=3815;
		sine[2774]=3551;
		sine[2775]=3653;
		sine[2776]=3308;
		sine[2777]=3435;
		sine[2778]=3023;
		sine[2779]=3170;
		sine[2780]=2706;
		sine[2781]=2868;
		sine[2782]=2370;
		sine[2783]=2539;
		sine[2784]=2026;
		sine[2785]=2198;
		sine[2786]=1690;
		sine[2787]=1857;
		sine[2788]=1373;
		sine[2789]=1528;
		sine[2790]=1088;
		sine[2791]=1226;
		sine[2792]=845;
		sine[2793]=961;
		sine[2794]=655;
		sine[2795]=743;
		sine[2796]=523;
		sine[2797]=581;
		sine[2798]=456;
		sine[2799]=482;
		sine[2800]=456;
		sine[2801]=448;
		sine[2802]=523;
		sine[2803]=482;
		sine[2804]=655;
		sine[2805]=581;
		sine[2806]=845;
		sine[2807]=743;
		sine[2808]=1088;
		sine[2809]=961;
		sine[2810]=1373;
		sine[2811]=1226;
		sine[2812]=1690;
		sine[2813]=1528;
		sine[2814]=2026;
		sine[2815]=1857;
		sine[2816]=2370;
		sine[2817]=2198;
		sine[2818]=2706;
		sine[2819]=2539;
		sine[2820]=3023;
		sine[2821]=2868;
		sine[2822]=3308;
		sine[2823]=3170;
		sine[2824]=3551;
		sine[2825]=3435;
		sine[2826]=3741;
		sine[2827]=3653;
		sine[2828]=3873;
		sine[2829]=3815;
		sine[2830]=3940;
		sine[2831]=3914;
		sine[2832]=3940;
		sine[2833]=3948;
		sine[2834]=3873;
		sine[2835]=3914;
		sine[2836]=3741;
		sine[2837]=3815;
		sine[2838]=3551;
		sine[2839]=3653;
		sine[2840]=3308;
		sine[2841]=3435;
		sine[2842]=3023;
		sine[2843]=3170;
		sine[2844]=2706;
		sine[2845]=2868;
		sine[2846]=2370;
		sine[2847]=2539;
		sine[2848]=2026;
		sine[2849]=2198;
		sine[2850]=1690;
		sine[2851]=1857;
		sine[2852]=1373;
		sine[2853]=1528;
		sine[2854]=1088;
		sine[2855]=1226;
		sine[2856]=845;
		sine[2857]=961;
		sine[2858]=655;
		sine[2859]=743;
		sine[2860]=523;
		sine[2861]=581;
		sine[2862]=456;
		sine[2863]=482;
		sine[2864]=456;
		sine[2865]=448;
		sine[2866]=523;
		sine[2867]=482;
		sine[2868]=655;
		sine[2869]=581;
		sine[2870]=845;
		sine[2871]=743;
		sine[2872]=1088;
		sine[2873]=961;
		sine[2874]=1373;
		sine[2875]=1226;
		sine[2876]=1690;
		sine[2877]=1528;
		sine[2878]=2026;
		sine[2879]=1857;
		sine[2880]=2370;
		sine[2881]=2198;
		sine[2882]=2706;
		sine[2883]=2539;
		sine[2884]=3023;
		sine[2885]=2868;
		sine[2886]=3308;
		sine[2887]=3170;
		sine[2888]=3551;
		sine[2889]=3435;
		sine[2890]=3741;
		sine[2891]=3653;
		sine[2892]=3873;
		sine[2893]=3815;
		sine[2894]=3940;
		sine[2895]=3914;
		sine[2896]=3940;
		sine[2897]=3948;
		sine[2898]=3873;
		sine[2899]=3914;
		sine[2900]=3741;
		sine[2901]=3815;
		sine[2902]=3551;
		sine[2903]=3653;
		sine[2904]=3308;
		sine[2905]=3435;
		sine[2906]=3023;
		sine[2907]=3170;
		sine[2908]=2706;
		sine[2909]=2868;
		sine[2910]=2370;
		sine[2911]=2539;
		sine[2912]=2026;
		sine[2913]=2198;
		sine[2914]=1690;
		sine[2915]=1857;
		sine[2916]=1373;
		sine[2917]=1528;
		sine[2918]=1088;
		sine[2919]=1226;
		sine[2920]=845;
		sine[2921]=961;
		sine[2922]=655;
		sine[2923]=743;
		sine[2924]=523;
		sine[2925]=581;
		sine[2926]=456;
		sine[2927]=482;
		sine[2928]=456;
		sine[2929]=448;
		sine[2930]=523;
		sine[2931]=482;
		sine[2932]=655;
		sine[2933]=581;
		sine[2934]=845;
		sine[2935]=743;
		sine[2936]=1088;
		sine[2937]=961;
		sine[2938]=1373;
		sine[2939]=1226;
		sine[2940]=1690;
		sine[2941]=1528;
		sine[2942]=2026;
		sine[2943]=1857;
		sine[2944]=2370;
		sine[2945]=2198;
		sine[2946]=2706;
		sine[2947]=2539;
		sine[2948]=3023;
		sine[2949]=2868;
		sine[2950]=3308;
		sine[2951]=3170;
		sine[2952]=3551;
		sine[2953]=3435;
		sine[2954]=3741;
		sine[2955]=3653;
		sine[2956]=3873;
		sine[2957]=3815;
		sine[2958]=3940;
		sine[2959]=3914;
		sine[2960]=3940;
		sine[2961]=3948;
		sine[2962]=3873;
		sine[2963]=3914;
		sine[2964]=3741;
		sine[2965]=3815;
		sine[2966]=3551;
		sine[2967]=3653;
		sine[2968]=3308;
		sine[2969]=3435;
		sine[2970]=3023;
		sine[2971]=3170;
		sine[2972]=2706;
		sine[2973]=2868;
		sine[2974]=2370;
		sine[2975]=2539;
		sine[2976]=2026;
		sine[2977]=2198;
		sine[2978]=1690;
		sine[2979]=1857;
		sine[2980]=1373;
		sine[2981]=1528;
		sine[2982]=1088;
		sine[2983]=1226;
		sine[2984]=845;
		sine[2985]=961;
		sine[2986]=655;
		sine[2987]=743;
		sine[2988]=523;
		sine[2989]=581;
		sine[2990]=456;
		sine[2991]=482;
		sine[2992]=456;
		sine[2993]=448;
		sine[2994]=523;
		sine[2995]=482;
		sine[2996]=655;
		sine[2997]=581;
		sine[2998]=845;
		sine[2999]=743;
		sine[3000]=1088;
		sine[3001]=961;
		sine[3002]=1373;
		sine[3003]=1226;
		sine[3004]=1690;
		sine[3005]=1528;
		sine[3006]=2026;
		sine[3007]=1857;
		sine[3008]=2370;
		sine[3009]=2198;
		sine[3010]=2706;
		sine[3011]=2539;
		sine[3012]=3023;
		sine[3013]=2868;
		sine[3014]=3308;
		sine[3015]=3170;
		sine[3016]=3551;
		sine[3017]=3435;
		sine[3018]=3741;
		sine[3019]=3653;
		sine[3020]=3873;
		sine[3021]=3815;
		sine[3022]=3940;
		sine[3023]=3914;
		sine[3024]=3940;
		sine[3025]=3948;
		sine[3026]=3873;
		sine[3027]=3914;
		sine[3028]=3741;
		sine[3029]=3815;
		sine[3030]=3551;
		sine[3031]=3653;
		sine[3032]=3308;
		sine[3033]=3435;
		sine[3034]=3023;
		sine[3035]=3170;
		sine[3036]=2706;
		sine[3037]=2868;
		sine[3038]=2370;
		sine[3039]=2539;
		sine[3040]=2026;
		sine[3041]=2198;
		sine[3042]=1690;
		sine[3043]=1857;
		sine[3044]=1373;
		sine[3045]=1528;
		sine[3046]=1088;
		sine[3047]=1226;
		sine[3048]=845;
		sine[3049]=961;
		sine[3050]=655;
		sine[3051]=743;
		sine[3052]=523;
		sine[3053]=581;
		sine[3054]=456;
		sine[3055]=482;
		sine[3056]=456;
		sine[3057]=448;
		sine[3058]=523;
		sine[3059]=482;
		sine[3060]=655;
		sine[3061]=581;
		sine[3062]=845;
		sine[3063]=743;
		sine[3064]=1088;
		sine[3065]=961;
		sine[3066]=1373;
		sine[3067]=1226;
		sine[3068]=1690;
		sine[3069]=1528;
		sine[3070]=2026;
		sine[3071]=1857;
		sine[3072]=2370;
		sine[3073]=2198;
		sine[3074]=2706;
		sine[3075]=2539;
		sine[3076]=3023;
		sine[3077]=2868;
		sine[3078]=3308;
		sine[3079]=3170;
		sine[3080]=3551;
		sine[3081]=3435;
		sine[3082]=3741;
		sine[3083]=3653;
		sine[3084]=3873;
		sine[3085]=3815;
		sine[3086]=3940;
		sine[3087]=3914;
		sine[3088]=3940;
		sine[3089]=3948;
		sine[3090]=3873;
		sine[3091]=3914;
		sine[3092]=3741;
		sine[3093]=3815;
		sine[3094]=3551;
		sine[3095]=3653;
		sine[3096]=3308;
		sine[3097]=3435;
		sine[3098]=3023;
		sine[3099]=3170;
		sine[3100]=2706;
		sine[3101]=2868;
		sine[3102]=2370;
		sine[3103]=2539;
		sine[3104]=2026;
		sine[3105]=2198;
		sine[3106]=1690;
		sine[3107]=1857;
		sine[3108]=1373;
		sine[3109]=1528;
		sine[3110]=1088;
		sine[3111]=1226;
		sine[3112]=845;
		sine[3113]=961;
		sine[3114]=655;
		sine[3115]=743;
		sine[3116]=523;
		sine[3117]=581;
		sine[3118]=456;
		sine[3119]=482;
		sine[3120]=456;
		sine[3121]=448;
		sine[3122]=523;
		sine[3123]=482;
		sine[3124]=655;
		sine[3125]=581;
		sine[3126]=845;
		sine[3127]=743;
		sine[3128]=1088;
		sine[3129]=961;
		sine[3130]=1373;
		sine[3131]=1226;
		sine[3132]=1690;
		sine[3133]=1528;
		sine[3134]=2026;
		sine[3135]=1857;
		sine[3136]=2370;
		sine[3137]=2198;
		sine[3138]=2706;
		sine[3139]=2539;
		sine[3140]=3023;
		sine[3141]=2868;
		sine[3142]=3308;
		sine[3143]=3170;
		sine[3144]=3551;
		sine[3145]=3435;
		sine[3146]=3741;
		sine[3147]=3653;
		sine[3148]=3873;
		sine[3149]=3815;
		sine[3150]=3940;
		sine[3151]=3914;
		sine[3152]=3940;
		sine[3153]=3948;
		sine[3154]=3873;
		sine[3155]=3914;
		sine[3156]=3741;
		sine[3157]=3815;
		sine[3158]=3551;
		sine[3159]=3653;
		sine[3160]=3308;
		sine[3161]=3435;
		sine[3162]=3023;
		sine[3163]=3170;
		sine[3164]=2706;
		sine[3165]=2868;
		sine[3166]=2370;
		sine[3167]=2539;
		sine[3168]=2026;
		sine[3169]=2198;
		sine[3170]=1690;
		sine[3171]=1857;
		sine[3172]=1373;
		sine[3173]=1528;
		sine[3174]=1088;
		sine[3175]=1226;
		sine[3176]=845;
		sine[3177]=961;
		sine[3178]=655;
		sine[3179]=743;
		sine[3180]=523;
		sine[3181]=581;
		sine[3182]=456;
		sine[3183]=482;
		sine[3184]=456;
		sine[3185]=448;
		sine[3186]=523;
		sine[3187]=482;
		sine[3188]=655;
		sine[3189]=581;
		sine[3190]=845;
		sine[3191]=743;
		sine[3192]=1088;
		sine[3193]=961;
		sine[3194]=1373;
		sine[3195]=1226;
		sine[3196]=1690;
		sine[3197]=1528;
		sine[3198]=2026;
		sine[3199]=1857;
		sine[3200]=2370;
		sine[3201]=2198;
		sine[3202]=2706;
		sine[3203]=2539;
		sine[3204]=3023;
		sine[3205]=2868;
		sine[3206]=3308;
		sine[3207]=3170;
		sine[3208]=3551;
		sine[3209]=3435;
		sine[3210]=3741;
		sine[3211]=3653;
		sine[3212]=3873;
		sine[3213]=3815;
		sine[3214]=3940;
		sine[3215]=3914;
		sine[3216]=3940;
		sine[3217]=3948;
		sine[3218]=3873;
		sine[3219]=3914;
		sine[3220]=3741;
		sine[3221]=3815;
		sine[3222]=3551;
		sine[3223]=3653;
		sine[3224]=3308;
		sine[3225]=3435;
		sine[3226]=3023;
		sine[3227]=3170;
		sine[3228]=2706;
		sine[3229]=2868;
		sine[3230]=2370;
		sine[3231]=2539;
		sine[3232]=2026;
		sine[3233]=2198;
		sine[3234]=1690;
		sine[3235]=1857;
		sine[3236]=1373;
		sine[3237]=1528;
		sine[3238]=1088;
		sine[3239]=1226;
		sine[3240]=845;
		sine[3241]=961;
		sine[3242]=655;
		sine[3243]=743;
		sine[3244]=523;
		sine[3245]=581;
		sine[3246]=456;
		sine[3247]=482;
		sine[3248]=456;
		sine[3249]=448;
		sine[3250]=523;
		sine[3251]=482;
		sine[3252]=655;
		sine[3253]=581;
		sine[3254]=845;
		sine[3255]=743;
		sine[3256]=1088;
		sine[3257]=961;
		sine[3258]=1373;
		sine[3259]=1226;
		sine[3260]=1690;
		sine[3261]=1528;
		sine[3262]=2026;
		sine[3263]=1857;
		sine[3264]=2370;
		sine[3265]=2198;
		sine[3266]=2706;
		sine[3267]=2539;
		sine[3268]=3023;
		sine[3269]=2868;
		sine[3270]=3308;
		sine[3271]=3170;
		sine[3272]=3551;
		sine[3273]=3435;
		sine[3274]=3741;
		sine[3275]=3653;
		sine[3276]=3873;
		sine[3277]=3815;
		sine[3278]=3940;
		sine[3279]=3914;
		sine[3280]=3940;
		sine[3281]=3948;
		sine[3282]=3873;
		sine[3283]=3914;
		sine[3284]=3741;
		sine[3285]=3815;
		sine[3286]=3551;
		sine[3287]=3653;
		sine[3288]=3308;
		sine[3289]=3435;
		sine[3290]=3023;
		sine[3291]=3170;
		sine[3292]=2706;
		sine[3293]=2868;
		sine[3294]=2370;
		sine[3295]=2539;
		sine[3296]=2026;
		sine[3297]=2198;
		sine[3298]=1690;
		sine[3299]=1857;
		sine[3300]=1373;
		sine[3301]=1528;
		sine[3302]=1088;
		sine[3303]=1226;
		sine[3304]=845;
		sine[3305]=961;
		sine[3306]=655;
		sine[3307]=743;
		sine[3308]=523;
		sine[3309]=581;
		sine[3310]=456;
		sine[3311]=482;
		sine[3312]=456;
		sine[3313]=448;
		sine[3314]=523;
		sine[3315]=482;
		sine[3316]=655;
		sine[3317]=581;
		sine[3318]=845;
		sine[3319]=743;
		sine[3320]=1088;
		sine[3321]=961;
		sine[3322]=1373;
		sine[3323]=1226;
		sine[3324]=1690;
		sine[3325]=1528;
		sine[3326]=2026;
		sine[3327]=1857;
		sine[3328]=2370;
		sine[3329]=2198;
		sine[3330]=2706;
		sine[3331]=2539;
		sine[3332]=3023;
		sine[3333]=2868;
		sine[3334]=3308;
		sine[3335]=3170;
		sine[3336]=3551;
		sine[3337]=3435;
		sine[3338]=3741;
		sine[3339]=3653;
		sine[3340]=3873;
		sine[3341]=3815;
		sine[3342]=3940;
		sine[3343]=3914;
		sine[3344]=3940;
		sine[3345]=3948;
		sine[3346]=3873;
		sine[3347]=3914;
		sine[3348]=3741;
		sine[3349]=3815;
		sine[3350]=3551;
		sine[3351]=3653;
		sine[3352]=3308;
		sine[3353]=3435;
		sine[3354]=3023;
		sine[3355]=3170;
		sine[3356]=2706;
		sine[3357]=2868;
		sine[3358]=2370;
		sine[3359]=2539;
		sine[3360]=2026;
		sine[3361]=2198;
		sine[3362]=1690;
		sine[3363]=1857;
		sine[3364]=1373;
		sine[3365]=1528;
		sine[3366]=1088;
		sine[3367]=1226;
		sine[3368]=845;
		sine[3369]=961;
		sine[3370]=655;
		sine[3371]=743;
		sine[3372]=523;
		sine[3373]=581;
		sine[3374]=456;
		sine[3375]=482;
		sine[3376]=456;
		sine[3377]=448;
		sine[3378]=523;
		sine[3379]=482;
		sine[3380]=655;
		sine[3381]=581;
		sine[3382]=845;
		sine[3383]=743;
		sine[3384]=1088;
		sine[3385]=961;
		sine[3386]=1373;
		sine[3387]=1226;
		sine[3388]=1690;
		sine[3389]=1528;
		sine[3390]=2026;
		sine[3391]=1857;
		sine[3392]=2370;
		sine[3393]=2198;
		sine[3394]=2706;
		sine[3395]=2539;
		sine[3396]=3023;
		sine[3397]=2868;
		sine[3398]=3308;
		sine[3399]=3170;
		sine[3400]=3551;
		sine[3401]=3435;
		sine[3402]=3741;
		sine[3403]=3653;
		sine[3404]=3873;
		sine[3405]=3815;
		sine[3406]=3940;
		sine[3407]=3914;
		sine[3408]=3940;
		sine[3409]=3948;
		sine[3410]=3873;
		sine[3411]=3914;
		sine[3412]=3741;
		sine[3413]=3815;
		sine[3414]=3551;
		sine[3415]=3653;
		sine[3416]=3308;
		sine[3417]=3435;
		sine[3418]=3023;
		sine[3419]=3170;
		sine[3420]=2706;
		sine[3421]=2868;
		sine[3422]=2370;
		sine[3423]=2539;
		sine[3424]=2026;
		sine[3425]=2198;
		sine[3426]=1690;
		sine[3427]=1857;
		sine[3428]=1373;
		sine[3429]=1528;
		sine[3430]=1088;
		sine[3431]=1226;
		sine[3432]=845;
		sine[3433]=961;
		sine[3434]=655;
		sine[3435]=743;
		sine[3436]=523;
		sine[3437]=581;
		sine[3438]=456;
		sine[3439]=482;
		sine[3440]=456;
		sine[3441]=448;
		sine[3442]=523;
		sine[3443]=482;
		sine[3444]=655;
		sine[3445]=581;
		sine[3446]=845;
		sine[3447]=743;
		sine[3448]=1088;
		sine[3449]=961;
		sine[3450]=1373;
		sine[3451]=1226;
		sine[3452]=1690;
		sine[3453]=1528;
		sine[3454]=2026;
		sine[3455]=1857;
		sine[3456]=2370;
		sine[3457]=2198;
		sine[3458]=2706;
		sine[3459]=2539;
		sine[3460]=3023;
		sine[3461]=2868;
		sine[3462]=3308;
		sine[3463]=3170;
		sine[3464]=3551;
		sine[3465]=3435;
		sine[3466]=3741;
		sine[3467]=3653;
		sine[3468]=3873;
		sine[3469]=3815;
		sine[3470]=3940;
		sine[3471]=3914;
		sine[3472]=3940;
		sine[3473]=3948;
		sine[3474]=3873;
		sine[3475]=3914;
		sine[3476]=3741;
		sine[3477]=3815;
		sine[3478]=3551;
		sine[3479]=3653;
		sine[3480]=3308;
		sine[3481]=3435;
		sine[3482]=3023;
		sine[3483]=3170;
		sine[3484]=2706;
		sine[3485]=2868;
		sine[3486]=2370;
		sine[3487]=2539;
		sine[3488]=2026;
		sine[3489]=2198;
		sine[3490]=1690;
		sine[3491]=1857;
		sine[3492]=1373;
		sine[3493]=1528;
		sine[3494]=1088;
		sine[3495]=1226;
		sine[3496]=845;
		sine[3497]=961;
		sine[3498]=655;
		sine[3499]=743;
		sine[3500]=523;
		sine[3501]=581;
		sine[3502]=456;
		sine[3503]=482;
		sine[3504]=456;
		sine[3505]=448;
		sine[3506]=523;
		sine[3507]=482;
		sine[3508]=655;
		sine[3509]=581;
		sine[3510]=845;
		sine[3511]=743;
		sine[3512]=1088;
		sine[3513]=961;
		sine[3514]=1373;
		sine[3515]=1226;
		sine[3516]=1690;
		sine[3517]=1528;
		sine[3518]=2026;
		sine[3519]=1857;
		sine[3520]=2370;
		sine[3521]=2198;
		sine[3522]=2706;
		sine[3523]=2539;
		sine[3524]=3023;
		sine[3525]=2868;
		sine[3526]=3308;
		sine[3527]=3170;
		sine[3528]=3551;
		sine[3529]=3435;
		sine[3530]=3741;
		sine[3531]=3653;
		sine[3532]=3873;
		sine[3533]=3815;
		sine[3534]=3940;
		sine[3535]=3914;
		sine[3536]=3940;
		sine[3537]=3948;
		sine[3538]=3873;
		sine[3539]=3914;
		sine[3540]=3741;
		sine[3541]=3815;
		sine[3542]=3551;
		sine[3543]=3653;
		sine[3544]=3308;
		sine[3545]=3435;
		sine[3546]=3023;
		sine[3547]=3170;
		sine[3548]=2706;
		sine[3549]=2868;
		sine[3550]=2370;
		sine[3551]=2539;
		sine[3552]=2026;
		sine[3553]=2198;
		sine[3554]=1690;
		sine[3555]=1857;
		sine[3556]=1373;
		sine[3557]=1528;
		sine[3558]=1088;
		sine[3559]=1226;
		sine[3560]=845;
		sine[3561]=961;
		sine[3562]=655;
		sine[3563]=743;
		sine[3564]=523;
		sine[3565]=581;
		sine[3566]=456;
		sine[3567]=482;
		sine[3568]=456;
		sine[3569]=448;
		sine[3570]=523;
		sine[3571]=482;
		sine[3572]=655;
		sine[3573]=581;
		sine[3574]=845;
		sine[3575]=743;
		sine[3576]=1088;
		sine[3577]=961;
		sine[3578]=1373;
		sine[3579]=1226;
		sine[3580]=1690;
		sine[3581]=1528;
		sine[3582]=2026;
		sine[3583]=1857;
		sine[3584]=2370;
		sine[3585]=2198;
		sine[3586]=2706;
		sine[3587]=2539;
		sine[3588]=3023;
		sine[3589]=2868;
		sine[3590]=3308;
		sine[3591]=3170;
		sine[3592]=3551;
		sine[3593]=3435;
		sine[3594]=3741;
		sine[3595]=3653;
		sine[3596]=3873;
		sine[3597]=3815;
		sine[3598]=3940;
		sine[3599]=3914;
		sine[3600]=3940;
		sine[3601]=3948;
		sine[3602]=3873;
		sine[3603]=3914;
		sine[3604]=3741;
		sine[3605]=3815;
		sine[3606]=3551;
		sine[3607]=3653;
		sine[3608]=3308;
		sine[3609]=3435;
		sine[3610]=3023;
		sine[3611]=3170;
		sine[3612]=2706;
		sine[3613]=2868;
		sine[3614]=2370;
		sine[3615]=2539;
		sine[3616]=2026;
		sine[3617]=2198;
		sine[3618]=1690;
		sine[3619]=1857;
		sine[3620]=1373;
		sine[3621]=1528;
		sine[3622]=1088;
		sine[3623]=1226;
		sine[3624]=845;
		sine[3625]=961;
		sine[3626]=655;
		sine[3627]=743;
		sine[3628]=523;
		sine[3629]=581;
		sine[3630]=456;
		sine[3631]=482;
		sine[3632]=456;
		sine[3633]=448;
		sine[3634]=523;
		sine[3635]=482;
		sine[3636]=655;
		sine[3637]=581;
		sine[3638]=845;
		sine[3639]=743;
		sine[3640]=1088;
		sine[3641]=961;
		sine[3642]=1373;
		sine[3643]=1226;
		sine[3644]=1690;
		sine[3645]=1528;
		sine[3646]=2026;
		sine[3647]=1857;
		sine[3648]=2370;
		sine[3649]=2198;
		sine[3650]=2706;
		sine[3651]=2539;
		sine[3652]=3023;
		sine[3653]=2868;
		sine[3654]=3308;
		sine[3655]=3170;
		sine[3656]=3551;
		sine[3657]=3435;
		sine[3658]=3741;
		sine[3659]=3653;
		sine[3660]=3873;
		sine[3661]=3815;
		sine[3662]=3940;
		sine[3663]=3914;
		sine[3664]=3940;
		sine[3665]=3948;
		sine[3666]=3873;
		sine[3667]=3914;
		sine[3668]=3741;
		sine[3669]=3815;
		sine[3670]=3551;
		sine[3671]=3653;
		sine[3672]=3308;
		sine[3673]=3435;
		sine[3674]=3023;
		sine[3675]=3170;
		sine[3676]=2706;
		sine[3677]=2868;
		sine[3678]=2370;
		sine[3679]=2539;
		sine[3680]=2026;
		sine[3681]=2198;
		sine[3682]=1690;
		sine[3683]=1857;
		sine[3684]=1373;
		sine[3685]=1528;
		sine[3686]=1088;
		sine[3687]=1226;
		sine[3688]=845;
		sine[3689]=961;
		sine[3690]=655;
		sine[3691]=743;
		sine[3692]=523;
		sine[3693]=581;
		sine[3694]=456;
		sine[3695]=482;
		sine[3696]=456;
		sine[3697]=448;
		sine[3698]=523;
		sine[3699]=482;
		sine[3700]=655;
		sine[3701]=581;
		sine[3702]=845;
		sine[3703]=743;
		sine[3704]=1088;
		sine[3705]=961;
		sine[3706]=1373;
		sine[3707]=1226;
		sine[3708]=1690;
		sine[3709]=1528;
		sine[3710]=2026;
		sine[3711]=1857;
		sine[3712]=2370;
		sine[3713]=2198;
		sine[3714]=2706;
		sine[3715]=2539;
		sine[3716]=3023;
		sine[3717]=2868;
		sine[3718]=3308;
		sine[3719]=3170;
		sine[3720]=3551;
		sine[3721]=3435;
		sine[3722]=3741;
		sine[3723]=3653;
		sine[3724]=3873;
		sine[3725]=3815;
		sine[3726]=3940;
		sine[3727]=3914;
		sine[3728]=3940;
		sine[3729]=3948;
		sine[3730]=3873;
		sine[3731]=3914;
		sine[3732]=3741;
		sine[3733]=3815;
		sine[3734]=3551;
		sine[3735]=3653;
		sine[3736]=3308;
		sine[3737]=3435;
		sine[3738]=3023;
		sine[3739]=3170;
		sine[3740]=2706;
		sine[3741]=2868;
		sine[3742]=2370;
		sine[3743]=2539;
		sine[3744]=2026;
		sine[3745]=2198;
		sine[3746]=1690;
		sine[3747]=1857;
		sine[3748]=1373;
		sine[3749]=1528;
		sine[3750]=1088;
		sine[3751]=1226;
		sine[3752]=845;
		sine[3753]=961;
		sine[3754]=655;
		sine[3755]=743;
		sine[3756]=523;
		sine[3757]=581;
		sine[3758]=456;
		sine[3759]=482;
		sine[3760]=456;
		sine[3761]=448;
		sine[3762]=523;
		sine[3763]=482;
		sine[3764]=655;
		sine[3765]=581;
		sine[3766]=845;
		sine[3767]=743;
		sine[3768]=1088;
		sine[3769]=961;
		sine[3770]=1373;
		sine[3771]=1226;
		sine[3772]=1690;
		sine[3773]=1528;
		sine[3774]=2026;
		sine[3775]=1857;
		sine[3776]=2370;
		sine[3777]=2198;
		sine[3778]=2706;
		sine[3779]=2539;
		sine[3780]=3023;
		sine[3781]=2868;
		sine[3782]=3308;
		sine[3783]=3170;
		sine[3784]=3551;
		sine[3785]=3435;
		sine[3786]=3741;
		sine[3787]=3653;
		sine[3788]=3873;
		sine[3789]=3815;
		sine[3790]=3940;
		sine[3791]=3914;
		sine[3792]=3940;
		sine[3793]=3948;
		sine[3794]=3873;
		sine[3795]=3914;
		sine[3796]=3741;
		sine[3797]=3815;
		sine[3798]=3551;
		sine[3799]=3653;
		sine[3800]=3308;
		sine[3801]=3435;
		sine[3802]=3023;
		sine[3803]=3170;
		sine[3804]=2706;
		sine[3805]=2868;
		sine[3806]=2370;
		sine[3807]=2539;
		sine[3808]=2026;
		sine[3809]=2198;
		sine[3810]=1690;
		sine[3811]=1857;
		sine[3812]=1373;
		sine[3813]=1528;
		sine[3814]=1088;
		sine[3815]=1226;
		sine[3816]=845;
		sine[3817]=961;
		sine[3818]=655;
		sine[3819]=743;
		sine[3820]=523;
		sine[3821]=581;
		sine[3822]=456;
		sine[3823]=482;
		sine[3824]=456;
		sine[3825]=448;
		sine[3826]=523;
		sine[3827]=482;
		sine[3828]=655;
		sine[3829]=581;
		sine[3830]=845;
		sine[3831]=743;
		sine[3832]=1088;
		sine[3833]=961;
		sine[3834]=1373;
		sine[3835]=1226;
		sine[3836]=1690;
		sine[3837]=1528;
		sine[3838]=2026;
		sine[3839]=1857;
		sine[3840]=2370;
		sine[3841]=2198;
		sine[3842]=2706;
		sine[3843]=2539;
		sine[3844]=3023;
		sine[3845]=2868;
		sine[3846]=3308;
		sine[3847]=3170;
		sine[3848]=3551;
		sine[3849]=3435;
		sine[3850]=3741;
		sine[3851]=3653;
		sine[3852]=3873;
		sine[3853]=3815;
		sine[3854]=3940;
		sine[3855]=3914;
		sine[3856]=3940;
		sine[3857]=3948;
		sine[3858]=3873;
		sine[3859]=3914;
		sine[3860]=3741;
		sine[3861]=3815;
		sine[3862]=3551;
		sine[3863]=3653;
		sine[3864]=3308;
		sine[3865]=3435;
		sine[3866]=3023;
		sine[3867]=3170;
		sine[3868]=2706;
		sine[3869]=2868;
		sine[3870]=2370;
		sine[3871]=2539;
		sine[3872]=2026;
		sine[3873]=2198;
		sine[3874]=1690;
		sine[3875]=1857;
		sine[3876]=1373;
		sine[3877]=1528;
		sine[3878]=1088;
		sine[3879]=1226;
		sine[3880]=845;
		sine[3881]=961;
		sine[3882]=655;
		sine[3883]=743;
		sine[3884]=523;
		sine[3885]=581;
		sine[3886]=456;
		sine[3887]=482;
		sine[3888]=456;
		sine[3889]=448;
		sine[3890]=523;
		sine[3891]=482;
		sine[3892]=655;
		sine[3893]=581;
		sine[3894]=845;
		sine[3895]=743;
		sine[3896]=1088;
		sine[3897]=961;
		sine[3898]=1373;
		sine[3899]=1226;
		sine[3900]=1690;
		sine[3901]=1528;
		sine[3902]=2026;
		sine[3903]=1857;
		sine[3904]=2370;
		sine[3905]=2198;
		sine[3906]=2706;
		sine[3907]=2539;
		sine[3908]=3023;
		sine[3909]=2868;
		sine[3910]=3308;
		sine[3911]=3170;
		sine[3912]=3551;
		sine[3913]=3435;
		sine[3914]=3741;
		sine[3915]=3653;
		sine[3916]=3873;
		sine[3917]=3815;
		sine[3918]=3940;
		sine[3919]=3914;
		sine[3920]=3940;
		sine[3921]=3948;
		sine[3922]=3873;
		sine[3923]=3914;
		sine[3924]=3741;
		sine[3925]=3815;
		sine[3926]=3551;
		sine[3927]=3653;
		sine[3928]=3308;
		sine[3929]=3435;
		sine[3930]=3023;
		sine[3931]=3170;
		sine[3932]=2706;
		sine[3933]=2868;
		sine[3934]=2370;
		sine[3935]=2539;
		sine[3936]=2026;
		sine[3937]=2198;
		sine[3938]=1690;
		sine[3939]=1857;
		sine[3940]=1373;
		sine[3941]=1528;
		sine[3942]=1088;
		sine[3943]=1226;
		sine[3944]=845;
		sine[3945]=961;
		sine[3946]=655;
		sine[3947]=743;
		sine[3948]=523;
		sine[3949]=581;
		sine[3950]=456;
		sine[3951]=482;
		sine[3952]=456;
		sine[3953]=448;
		sine[3954]=523;
		sine[3955]=482;
		sine[3956]=655;
		sine[3957]=581;
		sine[3958]=845;
		sine[3959]=743;
		sine[3960]=1088;
		sine[3961]=961;
		sine[3962]=1373;
		sine[3963]=1226;
		sine[3964]=1690;
		sine[3965]=1528;
		sine[3966]=2026;
		sine[3967]=1857;
		sine[3968]=2370;
		sine[3969]=2198;
		sine[3970]=2706;
		sine[3971]=2539;
		sine[3972]=3023;
		sine[3973]=2868;
		sine[3974]=3308;
		sine[3975]=3170;
		sine[3976]=3551;
		sine[3977]=3435;
		sine[3978]=3741;
		sine[3979]=3653;
		sine[3980]=3873;
		sine[3981]=3815;
		sine[3982]=3940;
		sine[3983]=3914;
		sine[3984]=3940;
		sine[3985]=3948;
		sine[3986]=3873;
		sine[3987]=3914;
		sine[3988]=3741;
		sine[3989]=3815;
		sine[3990]=3551;
		sine[3991]=3653;
		sine[3992]=3308;
		sine[3993]=3435;
		sine[3994]=3023;
		sine[3995]=3170;
		sine[3996]=2706;
		sine[3997]=2868;
		sine[3998]=2370;
		sine[3999]=2539;
		sine[4000]=2026;
		sine[4001]=2198;
		sine[4002]=1690;
		sine[4003]=1857;
		sine[4004]=1373;
		sine[4005]=1528;
		sine[4006]=1088;
		sine[4007]=1226;
		sine[4008]=845;
		sine[4009]=961;
		sine[4010]=655;
		sine[4011]=743;
		sine[4012]=523;
		sine[4013]=581;
		sine[4014]=456;
		sine[4015]=482;
		sine[4016]=456;
		sine[4017]=448;
		sine[4018]=523;
		sine[4019]=482;
		sine[4020]=655;
		sine[4021]=581;
		sine[4022]=845;
		sine[4023]=743;
		sine[4024]=1088;
		sine[4025]=961;
		sine[4026]=1373;
		sine[4027]=1226;
		sine[4028]=1690;
		sine[4029]=1528;
		sine[4030]=2026;
		sine[4031]=1857;
		sine[4032]=2370;
		sine[4033]=2198;
		sine[4034]=2706;
		sine[4035]=2539;
		sine[4036]=3023;
		sine[4037]=2868;
		sine[4038]=3308;
		sine[4039]=3170;
		sine[4040]=3551;
		sine[4041]=3435;
		sine[4042]=3741;
		sine[4043]=3653;
		sine[4044]=3873;
		sine[4045]=3815;
		sine[4046]=3940;
		sine[4047]=3914;
		sine[4048]=3940;
		sine[4049]=3948;
		sine[4050]=3873;
		sine[4051]=3914;
		sine[4052]=3741;
		sine[4053]=3815;
		sine[4054]=3551;
		sine[4055]=3653;
		sine[4056]=3308;
		sine[4057]=3435;
		sine[4058]=3023;
		sine[4059]=3170;
		sine[4060]=2706;
		sine[4061]=2868;
		sine[4062]=2370;
		sine[4063]=2539;
		sine[4064]=2026;
		sine[4065]=2198;
		sine[4066]=1690;
		sine[4067]=1857;
		sine[4068]=1373;
		sine[4069]=1528;
		sine[4070]=1088;
		sine[4071]=1226;
		sine[4072]=845;
		sine[4073]=961;
		sine[4074]=655;
		sine[4075]=743;
		sine[4076]=523;
		sine[4077]=581;
		sine[4078]=456;
		sine[4079]=482;
		sine[4080]=456;
		sine[4081]=448;
		sine[4082]=523;
		sine[4083]=482;
		sine[4084]=655;
		sine[4085]=581;
		sine[4086]=845;
		sine[4087]=743;
		sine[4088]=1088;
		sine[4089]=961;
		sine[4090]=1373;
		sine[4091]=1226;
		sine[4092]=1690;
		sine[4093]=1528;
		sine[4094]=2026;
		sine[4095]=1857;
	*/

		//1cycle sinewave data
		sine[0]=2201;
		sine[1]=2198;
		sine[2]=2206;
		sine[3]=2203;
		sine[4]=2211;
		sine[5]=2209;
		sine[6]=2217;
		sine[7]=2214;
		sine[8]=2222;
		sine[9]=2219;
		sine[10]=2228;
		sine[11]=2225;
		sine[12]=2233;
		sine[13]=2230;
		sine[14]=2238;
		sine[15]=2236;
		sine[16]=2244;
		sine[17]=2241;
		sine[18]=2249;
		sine[19]=2246;
		sine[20]=2254;
		sine[21]=2252;
		sine[22]=2260;
		sine[23]=2257;
		sine[24]=2265;
		sine[25]=2262;
		sine[26]=2270;
		sine[27]=2268;
		sine[28]=2276;
		sine[29]=2273;
		sine[30]=2281;
		sine[31]=2279;
		sine[32]=2287;
		sine[33]=2284;
		sine[34]=2292;
		sine[35]=2289;
		sine[36]=2297;
		sine[37]=2295;
		sine[38]=2303;
		sine[39]=2300;
		sine[40]=2308;
		sine[41]=2305;
		sine[42]=2313;
		sine[43]=2311;
		sine[44]=2319;
		sine[45]=2316;
		sine[46]=2324;
		sine[47]=2321;
		sine[48]=2329;
		sine[49]=2327;
		sine[50]=2335;
		sine[51]=2332;
		sine[52]=2340;
		sine[53]=2337;
		sine[54]=2345;
		sine[55]=2343;
		sine[56]=2351;
		sine[57]=2348;
		sine[58]=2356;
		sine[59]=2353;
		sine[60]=2362;
		sine[61]=2359;
		sine[62]=2367;
		sine[63]=2364;
		sine[64]=2372;
		sine[65]=2370;
		sine[66]=2378;
		sine[67]=2375;
		sine[68]=2383;
		sine[69]=2380;
		sine[70]=2388;
		sine[71]=2386;
		sine[72]=2394;
		sine[73]=2391;
		sine[74]=2399;
		sine[75]=2396;
		sine[76]=2404;
		sine[77]=2402;
		sine[78]=2410;
		sine[79]=2407;
		sine[80]=2415;
		sine[81]=2412;
		sine[82]=2420;
		sine[83]=2418;
		sine[84]=2426;
		sine[85]=2423;
		sine[86]=2431;
		sine[87]=2428;
		sine[88]=2436;
		sine[89]=2434;
		sine[90]=2441;
		sine[91]=2439;
		sine[92]=2447;
		sine[93]=2444;
		sine[94]=2452;
		sine[95]=2449;
		sine[96]=2457;
		sine[97]=2455;
		sine[98]=2463;
		sine[99]=2460;
		sine[100]=2468;
		sine[101]=2465;
		sine[102]=2473;
		sine[103]=2471;
		sine[104]=2479;
		sine[105]=2476;
		sine[106]=2484;
		sine[107]=2481;
		sine[108]=2489;
		sine[109]=2487;
		sine[110]=2495;
		sine[111]=2492;
		sine[112]=2500;
		sine[113]=2497;
		sine[114]=2505;
		sine[115]=2502;
		sine[116]=2510;
		sine[117]=2508;
		sine[118]=2516;
		sine[119]=2513;
		sine[120]=2521;
		sine[121]=2518;
		sine[122]=2526;
		sine[123]=2524;
		sine[124]=2532;
		sine[125]=2529;
		sine[126]=2537;
		sine[127]=2534;
		sine[128]=2542;
		sine[129]=2539;
		sine[130]=2547;
		sine[131]=2545;
		sine[132]=2553;
		sine[133]=2550;
		sine[134]=2558;
		sine[135]=2555;
		sine[136]=2563;
		sine[137]=2560;
		sine[138]=2568;
		sine[139]=2566;
		sine[140]=2574;
		sine[141]=2571;
		sine[142]=2579;
		sine[143]=2576;
		sine[144]=2584;
		sine[145]=2581;
		sine[146]=2589;
		sine[147]=2587;
		sine[148]=2595;
		sine[149]=2592;
		sine[150]=2600;
		sine[151]=2597;
		sine[152]=2605;
		sine[153]=2602;
		sine[154]=2610;
		sine[155]=2608;
		sine[156]=2615;
		sine[157]=2613;
		sine[158]=2621;
		sine[159]=2618;
		sine[160]=2626;
		sine[161]=2623;
		sine[162]=2631;
		sine[163]=2628;
		sine[164]=2636;
		sine[165]=2634;
		sine[166]=2641;
		sine[167]=2639;
		sine[168]=2647;
		sine[169]=2644;
		sine[170]=2652;
		sine[171]=2649;
		sine[172]=2657;
		sine[173]=2654;
		sine[174]=2662;
		sine[175]=2660;
		sine[176]=2667;
		sine[177]=2665;
		sine[178]=2673;
		sine[179]=2670;
		sine[180]=2678;
		sine[181]=2675;
		sine[182]=2683;
		sine[183]=2680;
		sine[184]=2688;
		sine[185]=2685;
		sine[186]=2693;
		sine[187]=2691;
		sine[188]=2698;
		sine[189]=2696;
		sine[190]=2703;
		sine[191]=2701;
		sine[192]=2709;
		sine[193]=2706;
		sine[194]=2714;
		sine[195]=2711;
		sine[196]=2719;
		sine[197]=2716;
		sine[198]=2724;
		sine[199]=2721;
		sine[200]=2729;
		sine[201]=2727;
		sine[202]=2734;
		sine[203]=2732;
		sine[204]=2739;
		sine[205]=2737;
		sine[206]=2744;
		sine[207]=2742;
		sine[208]=2749;
		sine[209]=2747;
		sine[210]=2755;
		sine[211]=2752;
		sine[212]=2760;
		sine[213]=2757;
		sine[214]=2765;
		sine[215]=2762;
		sine[216]=2770;
		sine[217]=2767;
		sine[218]=2775;
		sine[219]=2772;
		sine[220]=2780;
		sine[221]=2777;
		sine[222]=2785;
		sine[223]=2782;
		sine[224]=2790;
		sine[225]=2788;
		sine[226]=2795;
		sine[227]=2793;
		sine[228]=2800;
		sine[229]=2798;
		sine[230]=2805;
		sine[231]=2803;
		sine[232]=2810;
		sine[233]=2808;
		sine[234]=2815;
		sine[235]=2813;
		sine[236]=2820;
		sine[237]=2818;
		sine[238]=2825;
		sine[239]=2823;
		sine[240]=2830;
		sine[241]=2828;
		sine[242]=2835;
		sine[243]=2833;
		sine[244]=2840;
		sine[245]=2838;
		sine[246]=2845;
		sine[247]=2843;
		sine[248]=2850;
		sine[249]=2848;
		sine[250]=2855;
		sine[251]=2853;
		sine[252]=2860;
		sine[253]=2858;
		sine[254]=2865;
		sine[255]=2863;
		sine[256]=2870;
		sine[257]=2868;
		sine[258]=2875;
		sine[259]=2873;
		sine[260]=2880;
		sine[261]=2878;
		sine[262]=2885;
		sine[263]=2883;
		sine[264]=2890;
		sine[265]=2887;
		sine[266]=2895;
		sine[267]=2892;
		sine[268]=2900;
		sine[269]=2897;
		sine[270]=2905;
		sine[271]=2902;
		sine[272]=2910;
		sine[273]=2907;
		sine[274]=2915;
		sine[275]=2912;
		sine[276]=2919;
		sine[277]=2917;
		sine[278]=2924;
		sine[279]=2922;
		sine[280]=2929;
		sine[281]=2927;
		sine[282]=2934;
		sine[283]=2932;
		sine[284]=2939;
		sine[285]=2937;
		sine[286]=2944;
		sine[287]=2941;
		sine[288]=2949;
		sine[289]=2946;
		sine[290]=2953;
		sine[291]=2951;
		sine[292]=2958;
		sine[293]=2956;
		sine[294]=2963;
		sine[295]=2961;
		sine[296]=2968;
		sine[297]=2966;
		sine[298]=2973;
		sine[299]=2970;
		sine[300]=2978;
		sine[301]=2975;
		sine[302]=2982;
		sine[303]=2980;
		sine[304]=2987;
		sine[305]=2985;
		sine[306]=2992;
		sine[307]=2990;
		sine[308]=2997;
		sine[309]=2994;
		sine[310]=3002;
		sine[311]=2999;
		sine[312]=3006;
		sine[313]=3004;
		sine[314]=3011;
		sine[315]=3009;
		sine[316]=3016;
		sine[317]=3013;
		sine[318]=3021;
		sine[319]=3018;
		sine[320]=3025;
		sine[321]=3023;
		sine[322]=3030;
		sine[323]=3028;
		sine[324]=3035;
		sine[325]=3032;
		sine[326]=3039;
		sine[327]=3037;
		sine[328]=3044;
		sine[329]=3042;
		sine[330]=3049;
		sine[331]=3047;
		sine[332]=3054;
		sine[333]=3051;
		sine[334]=3058;
		sine[335]=3056;
		sine[336]=3063;
		sine[337]=3061;
		sine[338]=3068;
		sine[339]=3065;
		sine[340]=3072;
		sine[341]=3070;
		sine[342]=3077;
		sine[343]=3075;
		sine[344]=3082;
		sine[345]=3079;
		sine[346]=3086;
		sine[347]=3084;
		sine[348]=3091;
		sine[349]=3088;
		sine[350]=3095;
		sine[351]=3093;
		sine[352]=3100;
		sine[353]=3098;
		sine[354]=3105;
		sine[355]=3102;
		sine[356]=3109;
		sine[357]=3107;
		sine[358]=3114;
		sine[359]=3111;
		sine[360]=3118;
		sine[361]=3116;
		sine[362]=3123;
		sine[363]=3121;
		sine[364]=3127;
		sine[365]=3125;
		sine[366]=3132;
		sine[367]=3130;
		sine[368]=3137;
		sine[369]=3134;
		sine[370]=3141;
		sine[371]=3139;
		sine[372]=3146;
		sine[373]=3143;
		sine[374]=3150;
		sine[375]=3148;
		sine[376]=3155;
		sine[377]=3152;
		sine[378]=3159;
		sine[379]=3157;
		sine[380]=3164;
		sine[381]=3161;
		sine[382]=3168;
		sine[383]=3166;
		sine[384]=3172;
		sine[385]=3170;
		sine[386]=3177;
		sine[387]=3175;
		sine[388]=3181;
		sine[389]=3179;
		sine[390]=3186;
		sine[391]=3184;
		sine[392]=3190;
		sine[393]=3188;
		sine[394]=3195;
		sine[395]=3192;
		sine[396]=3199;
		sine[397]=3197;
		sine[398]=3203;
		sine[399]=3201;
		sine[400]=3208;
		sine[401]=3206;
		sine[402]=3212;
		sine[403]=3210;
		sine[404]=3217;
		sine[405]=3214;
		sine[406]=3221;
		sine[407]=3219;
		sine[408]=3225;
		sine[409]=3223;
		sine[410]=3230;
		sine[411]=3227;
		sine[412]=3234;
		sine[413]=3232;
		sine[414]=3238;
		sine[415]=3236;
		sine[416]=3243;
		sine[417]=3240;
		sine[418]=3247;
		sine[419]=3245;
		sine[420]=3251;
		sine[421]=3249;
		sine[422]=3256;
		sine[423]=3253;
		sine[424]=3260;
		sine[425]=3258;
		sine[426]=3264;
		sine[427]=3262;
		sine[428]=3268;
		sine[429]=3266;
		sine[430]=3273;
		sine[431]=3270;
		sine[432]=3277;
		sine[433]=3275;
		sine[434]=3281;
		sine[435]=3279;
		sine[436]=3285;
		sine[437]=3283;
		sine[438]=3289;
		sine[439]=3287;
		sine[440]=3294;
		sine[441]=3292;
		sine[442]=3298;
		sine[443]=3296;
		sine[444]=3302;
		sine[445]=3300;
		sine[446]=3306;
		sine[447]=3304;
		sine[448]=3310;
		sine[449]=3308;
		sine[450]=3314;
		sine[451]=3312;
		sine[452]=3319;
		sine[453]=3316;
		sine[454]=3323;
		sine[455]=3321;
		sine[456]=3327;
		sine[457]=3325;
		sine[458]=3331;
		sine[459]=3329;
		sine[460]=3335;
		sine[461]=3333;
		sine[462]=3339;
		sine[463]=3337;
		sine[464]=3343;
		sine[465]=3341;
		sine[466]=3347;
		sine[467]=3345;
		sine[468]=3351;
		sine[469]=3349;
		sine[470]=3355;
		sine[471]=3353;
		sine[472]=3359;
		sine[473]=3357;
		sine[474]=3363;
		sine[475]=3361;
		sine[476]=3367;
		sine[477]=3365;
		sine[478]=3371;
		sine[479]=3369;
		sine[480]=3375;
		sine[481]=3373;
		sine[482]=3379;
		sine[483]=3377;
		sine[484]=3383;
		sine[485]=3381;
		sine[486]=3387;
		sine[487]=3385;
		sine[488]=3391;
		sine[489]=3389;
		sine[490]=3395;
		sine[491]=3393;
		sine[492]=3399;
		sine[493]=3397;
		sine[494]=3403;
		sine[495]=3401;
		sine[496]=3407;
		sine[497]=3405;
		sine[498]=3411;
		sine[499]=3409;
		sine[500]=3414;
		sine[501]=3412;
		sine[502]=3418;
		sine[503]=3416;
		sine[504]=3422;
		sine[505]=3420;
		sine[506]=3426;
		sine[507]=3424;
		sine[508]=3430;
		sine[509]=3428;
		sine[510]=3434;
		sine[511]=3432;
		sine[512]=3437;
		sine[513]=3435;
		sine[514]=3441;
		sine[515]=3439;
		sine[516]=3445;
		sine[517]=3443;
		sine[518]=3449;
		sine[519]=3447;
		sine[520]=3452;
		sine[521]=3451;
		sine[522]=3456;
		sine[523]=3454;
		sine[524]=3460;
		sine[525]=3458;
		sine[526]=3464;
		sine[527]=3462;
		sine[528]=3467;
		sine[529]=3465;
		sine[530]=3471;
		sine[531]=3469;
		sine[532]=3475;
		sine[533]=3473;
		sine[534]=3478;
		sine[535]=3476;
		sine[536]=3482;
		sine[537]=3480;
		sine[538]=3486;
		sine[539]=3484;
		sine[540]=3489;
		sine[541]=3487;
		sine[542]=3493;
		sine[543]=3491;
		sine[544]=3496;
		sine[545]=3495;
		sine[546]=3500;
		sine[547]=3498;
		sine[548]=3504;
		sine[549]=3502;
		sine[550]=3507;
		sine[551]=3505;
		sine[552]=3511;
		sine[553]=3509;
		sine[554]=3514;
		sine[555]=3513;
		sine[556]=3518;
		sine[557]=3516;
		sine[558]=3521;
		sine[559]=3520;
		sine[560]=3525;
		sine[561]=3523;
		sine[562]=3528;
		sine[563]=3527;
		sine[564]=3532;
		sine[565]=3530;
		sine[566]=3535;
		sine[567]=3534;
		sine[568]=3539;
		sine[569]=3537;
		sine[570]=3542;
		sine[571]=3540;
		sine[572]=3546;
		sine[573]=3544;
		sine[574]=3549;
		sine[575]=3547;
		sine[576]=3552;
		sine[577]=3551;
		sine[578]=3556;
		sine[579]=3554;
		sine[580]=3559;
		sine[581]=3558;
		sine[582]=3563;
		sine[583]=3561;
		sine[584]=3566;
		sine[585]=3564;
		sine[586]=3569;
		sine[587]=3568;
		sine[588]=3573;
		sine[589]=3571;
		sine[590]=3576;
		sine[591]=3574;
		sine[592]=3579;
		sine[593]=3578;
		sine[594]=3583;
		sine[595]=3581;
		sine[596]=3586;
		sine[597]=3584;
		sine[598]=3589;
		sine[599]=3587;
		sine[600]=3592;
		sine[601]=3591;
		sine[602]=3596;
		sine[603]=3594;
		sine[604]=3599;
		sine[605]=3597;
		sine[606]=3602;
		sine[607]=3600;
		sine[608]=3605;
		sine[609]=3604;
		sine[610]=3608;
		sine[611]=3607;
		sine[612]=3612;
		sine[613]=3610;
		sine[614]=3615;
		sine[615]=3613;
		sine[616]=3618;
		sine[617]=3616;
		sine[618]=3621;
		sine[619]=3619;
		sine[620]=3624;
		sine[621]=3623;
		sine[622]=3627;
		sine[623]=3626;
		sine[624]=3630;
		sine[625]=3629;
		sine[626]=3633;
		sine[627]=3632;
		sine[628]=3636;
		sine[629]=3635;
		sine[630]=3640;
		sine[631]=3638;
		sine[632]=3643;
		sine[633]=3641;
		sine[634]=3646;
		sine[635]=3644;
		sine[636]=3649;
		sine[637]=3647;
		sine[638]=3652;
		sine[639]=3650;
		sine[640]=3655;
		sine[641]=3653;
		sine[642]=3658;
		sine[643]=3656;
		sine[644]=3660;
		sine[645]=3659;
		sine[646]=3663;
		sine[647]=3662;
		sine[648]=3666;
		sine[649]=3665;
		sine[650]=3669;
		sine[651]=3668;
		sine[652]=3672;
		sine[653]=3671;
		sine[654]=3675;
		sine[655]=3674;
		sine[656]=3678;
		sine[657]=3676;
		sine[658]=3681;
		sine[659]=3679;
		sine[660]=3684;
		sine[661]=3682;
		sine[662]=3686;
		sine[663]=3685;
		sine[664]=3689;
		sine[665]=3688;
		sine[666]=3692;
		sine[667]=3691;
		sine[668]=3695;
		sine[669]=3693;
		sine[670]=3698;
		sine[671]=3696;
		sine[672]=3700;
		sine[673]=3699;
		sine[674]=3703;
		sine[675]=3702;
		sine[676]=3706;
		sine[677]=3705;
		sine[678]=3709;
		sine[679]=3707;
		sine[680]=3711;
		sine[681]=3710;
		sine[682]=3714;
		sine[683]=3713;
		sine[684]=3717;
		sine[685]=3715;
		sine[686]=3719;
		sine[687]=3718;
		sine[688]=3722;
		sine[689]=3721;
		sine[690]=3725;
		sine[691]=3723;
		sine[692]=3727;
		sine[693]=3726;
		sine[694]=3730;
		sine[695]=3729;
		sine[696]=3732;
		sine[697]=3731;
		sine[698]=3735;
		sine[699]=3734;
		sine[700]=3738;
		sine[701]=3736;
		sine[702]=3740;
		sine[703]=3739;
		sine[704]=3743;
		sine[705]=3741;
		sine[706]=3745;
		sine[707]=3744;
		sine[708]=3748;
		sine[709]=3746;
		sine[710]=3750;
		sine[711]=3749;
		sine[712]=3753;
		sine[713]=3751;
		sine[714]=3755;
		sine[715]=3754;
		sine[716]=3758;
		sine[717]=3756;
		sine[718]=3760;
		sine[719]=3759;
		sine[720]=3762;
		sine[721]=3761;
		sine[722]=3765;
		sine[723]=3764;
		sine[724]=3767;
		sine[725]=3766;
		sine[726]=3770;
		sine[727]=3768;
		sine[728]=3772;
		sine[729]=3771;
		sine[730]=3774;
		sine[731]=3773;
		sine[732]=3777;
		sine[733]=3775;
		sine[734]=3779;
		sine[735]=3778;
		sine[736]=3781;
		sine[737]=3780;
		sine[738]=3783;
		sine[739]=3782;
		sine[740]=3786;
		sine[741]=3785;
		sine[742]=3788;
		sine[743]=3787;
		sine[744]=3790;
		sine[745]=3789;
		sine[746]=3792;
		sine[747]=3791;
		sine[748]=3795;
		sine[749]=3793;
		sine[750]=3797;
		sine[751]=3796;
		sine[752]=3799;
		sine[753]=3798;
		sine[754]=3801;
		sine[755]=3800;
		sine[756]=3803;
		sine[757]=3802;
		sine[758]=3805;
		sine[759]=3804;
		sine[760]=3808;
		sine[761]=3806;
		sine[762]=3810;
		sine[763]=3809;
		sine[764]=3812;
		sine[765]=3811;
		sine[766]=3814;
		sine[767]=3813;
		sine[768]=3816;
		sine[769]=3815;
		sine[770]=3818;
		sine[771]=3817;
		sine[772]=3820;
		sine[773]=3819;
		sine[774]=3822;
		sine[775]=3821;
		sine[776]=3824;
		sine[777]=3823;
		sine[778]=3826;
		sine[779]=3825;
		sine[780]=3828;
		sine[781]=3827;
		sine[782]=3830;
		sine[783]=3829;
		sine[784]=3832;
		sine[785]=3831;
		sine[786]=3834;
		sine[787]=3833;
		sine[788]=3836;
		sine[789]=3835;
		sine[790]=3837;
		sine[791]=3836;
		sine[792]=3839;
		sine[793]=3838;
		sine[794]=3841;
		sine[795]=3840;
		sine[796]=3843;
		sine[797]=3842;
		sine[798]=3845;
		sine[799]=3844;
		sine[800]=3847;
		sine[801]=3846;
		sine[802]=3848;
		sine[803]=3848;
		sine[804]=3850;
		sine[805]=3849;
		sine[806]=3852;
		sine[807]=3851;
		sine[808]=3854;
		sine[809]=3853;
		sine[810]=3855;
		sine[811]=3855;
		sine[812]=3857;
		sine[813]=3856;
		sine[814]=3859;
		sine[815]=3858;
		sine[816]=3861;
		sine[817]=3860;
		sine[818]=3862;
		sine[819]=3861;
		sine[820]=3864;
		sine[821]=3863;
		sine[822]=3865;
		sine[823]=3865;
		sine[824]=3867;
		sine[825]=3866;
		sine[826]=3869;
		sine[827]=3868;
		sine[828]=3870;
		sine[829]=3869;
		sine[830]=3872;
		sine[831]=3871;
		sine[832]=3873;
		sine[833]=3873;
		sine[834]=3875;
		sine[835]=3874;
		sine[836]=3876;
		sine[837]=3876;
		sine[838]=3878;
		sine[839]=3877;
		sine[840]=3879;
		sine[841]=3879;
		sine[842]=3881;
		sine[843]=3880;
		sine[844]=3882;
		sine[845]=3882;
		sine[846]=3884;
		sine[847]=3883;
		sine[848]=3885;
		sine[849]=3885;
		sine[850]=3887;
		sine[851]=3886;
		sine[852]=3888;
		sine[853]=3887;
		sine[854]=3890;
		sine[855]=3889;
		sine[856]=3891;
		sine[857]=3890;
		sine[858]=3892;
		sine[859]=3892;
		sine[860]=3894;
		sine[861]=3893;
		sine[862]=3895;
		sine[863]=3894;
		sine[864]=3896;
		sine[865]=3896;
		sine[866]=3897;
		sine[867]=3897;
		sine[868]=3899;
		sine[869]=3898;
		sine[870]=3900;
		sine[871]=3899;
		sine[872]=3901;
		sine[873]=3901;
		sine[874]=3902;
		sine[875]=3902;
		sine[876]=3904;
		sine[877]=3903;
		sine[878]=3905;
		sine[879]=3904;
		sine[880]=3906;
		sine[881]=3905;
		sine[882]=3907;
		sine[883]=3907;
		sine[884]=3908;
		sine[885]=3908;
		sine[886]=3909;
		sine[887]=3909;
		sine[888]=3911;
		sine[889]=3910;
		sine[890]=3912;
		sine[891]=3911;
		sine[892]=3913;
		sine[893]=3912;
		sine[894]=3914;
		sine[895]=3913;
		sine[896]=3915;
		sine[897]=3914;
		sine[898]=3916;
		sine[899]=3915;
		sine[900]=3917;
		sine[901]=3916;
		sine[902]=3918;
		sine[903]=3917;
		sine[904]=3919;
		sine[905]=3918;
		sine[906]=3920;
		sine[907]=3919;
		sine[908]=3921;
		sine[909]=3920;
		sine[910]=3922;
		sine[911]=3921;
		sine[912]=3923;
		sine[913]=3922;
		sine[914]=3924;
		sine[915]=3923;
		sine[916]=3924;
		sine[917]=3924;
		sine[918]=3925;
		sine[919]=3925;
		sine[920]=3926;
		sine[921]=3926;
		sine[922]=3927;
		sine[923]=3927;
		sine[924]=3928;
		sine[925]=3927;
		sine[926]=3929;
		sine[927]=3928;
		sine[928]=3929;
		sine[929]=3929;
		sine[930]=3930;
		sine[931]=3930;
		sine[932]=3931;
		sine[933]=3931;
		sine[934]=3932;
		sine[935]=3931;
		sine[936]=3932;
		sine[937]=3932;
		sine[938]=3933;
		sine[939]=3933;
		sine[940]=3934;
		sine[941]=3933;
		sine[942]=3935;
		sine[943]=3934;
		sine[944]=3935;
		sine[945]=3935;
		sine[946]=3936;
		sine[947]=3935;
		sine[948]=3936;
		sine[949]=3936;
		sine[950]=3937;
		sine[951]=3937;
		sine[952]=3938;
		sine[953]=3937;
		sine[954]=3938;
		sine[955]=3938;
		sine[956]=3939;
		sine[957]=3938;
		sine[958]=3939;
		sine[959]=3939;
		sine[960]=3940;
		sine[961]=3940;
		sine[962]=3940;
		sine[963]=3940;
		sine[964]=3941;
		sine[965]=3941;
		sine[966]=3941;
		sine[967]=3941;
		sine[968]=3942;
		sine[969]=3942;
		sine[970]=3942;
		sine[971]=3942;
		sine[972]=3943;
		sine[973]=3942;
		sine[974]=3943;
		sine[975]=3943;
		sine[976]=3943;
		sine[977]=3943;
		sine[978]=3944;
		sine[979]=3944;
		sine[980]=3944;
		sine[981]=3944;
		sine[982]=3945;
		sine[983]=3944;
		sine[984]=3945;
		sine[985]=3945;
		sine[986]=3945;
		sine[987]=3945;
		sine[988]=3945;
		sine[989]=3945;
		sine[990]=3946;
		sine[991]=3946;
		sine[992]=3946;
		sine[993]=3946;
		sine[994]=3946;
		sine[995]=3946;
		sine[996]=3946;
		sine[997]=3946;
		sine[998]=3947;
		sine[999]=3947;
		sine[1000]=3947;
		sine[1001]=3947;
		sine[1002]=3947;
		sine[1003]=3947;
		sine[1004]=3947;
		sine[1005]=3947;
		sine[1006]=3947;
		sine[1007]=3947;
		sine[1008]=3948;
		sine[1009]=3947;
		sine[1010]=3948;
		sine[1011]=3948;
		sine[1012]=3948;
		sine[1013]=3948;
		sine[1014]=3948;
		sine[1015]=3948;
		sine[1016]=3948;
		sine[1017]=3948;
		sine[1018]=3948;
		sine[1019]=3948;
		sine[1020]=3948;
		sine[1021]=3948;
		sine[1022]=3948;
		sine[1023]=3948;
		sine[1024]=3948;
		sine[1025]=3948;
		sine[1026]=3948;
		sine[1027]=3948;
		sine[1028]=3948;
		sine[1029]=3948;
		sine[1030]=3948;
		sine[1031]=3948;
		sine[1032]=3948;
		sine[1033]=3948;
		sine[1034]=3948;
		sine[1035]=3948;
		sine[1036]=3948;
		sine[1037]=3948;
		sine[1038]=3948;
		sine[1039]=3948;
		sine[1040]=3947;
		sine[1041]=3947;
		sine[1042]=3947;
		sine[1043]=3947;
		sine[1044]=3947;
		sine[1045]=3947;
		sine[1046]=3947;
		sine[1047]=3947;
		sine[1048]=3947;
		sine[1049]=3947;
		sine[1050]=3946;
		sine[1051]=3947;
		sine[1052]=3946;
		sine[1053]=3946;
		sine[1054]=3946;
		sine[1055]=3946;
		sine[1056]=3946;
		sine[1057]=3946;
		sine[1058]=3945;
		sine[1059]=3946;
		sine[1060]=3945;
		sine[1061]=3945;
		sine[1062]=3945;
		sine[1063]=3945;
		sine[1064]=3945;
		sine[1065]=3945;
		sine[1066]=3944;
		sine[1067]=3944;
		sine[1068]=3944;
		sine[1069]=3944;
		sine[1070]=3943;
		sine[1071]=3944;
		sine[1072]=3943;
		sine[1073]=3943;
		sine[1074]=3943;
		sine[1075]=3943;
		sine[1076]=3942;
		sine[1077]=3942;
		sine[1078]=3942;
		sine[1079]=3942;
		sine[1080]=3941;
		sine[1081]=3942;
		sine[1082]=3941;
		sine[1083]=3941;
		sine[1084]=3940;
		sine[1085]=3941;
		sine[1086]=3940;
		sine[1087]=3940;
		sine[1088]=3939;
		sine[1089]=3940;
		sine[1090]=3939;
		sine[1091]=3939;
		sine[1092]=3938;
		sine[1093]=3938;
		sine[1094]=3938;
		sine[1095]=3938;
		sine[1096]=3937;
		sine[1097]=3937;
		sine[1098]=3936;
		sine[1099]=3937;
		sine[1100]=3936;
		sine[1101]=3936;
		sine[1102]=3935;
		sine[1103]=3935;
		sine[1104]=3935;
		sine[1105]=3935;
		sine[1106]=3934;
		sine[1107]=3934;
		sine[1108]=3933;
		sine[1109]=3933;
		sine[1110]=3932;
		sine[1111]=3933;
		sine[1112]=3932;
		sine[1113]=3932;
		sine[1114]=3931;
		sine[1115]=3931;
		sine[1116]=3930;
		sine[1117]=3931;
		sine[1118]=3929;
		sine[1119]=3930;
		sine[1120]=3929;
		sine[1121]=3929;
		sine[1122]=3928;
		sine[1123]=3928;
		sine[1124]=3927;
		sine[1125]=3927;
		sine[1126]=3926;
		sine[1127]=3927;
		sine[1128]=3925;
		sine[1129]=3926;
		sine[1130]=3924;
		sine[1131]=3925;
		sine[1132]=3924;
		sine[1133]=3924;
		sine[1134]=3923;
		sine[1135]=3923;
		sine[1136]=3922;
		sine[1137]=3922;
		sine[1138]=3921;
		sine[1139]=3921;
		sine[1140]=3920;
		sine[1141]=3920;
		sine[1142]=3919;
		sine[1143]=3919;
		sine[1144]=3918;
		sine[1145]=3918;
		sine[1146]=3917;
		sine[1147]=3917;
		sine[1148]=3916;
		sine[1149]=3916;
		sine[1150]=3915;
		sine[1151]=3915;
		sine[1152]=3914;
		sine[1153]=3914;
		sine[1154]=3913;
		sine[1155]=3913;
		sine[1156]=3912;
		sine[1157]=3912;
		sine[1158]=3911;
		sine[1159]=3911;
		sine[1160]=3909;
		sine[1161]=3910;
		sine[1162]=3908;
		sine[1163]=3909;
		sine[1164]=3907;
		sine[1165]=3908;
		sine[1166]=3906;
		sine[1167]=3907;
		sine[1168]=3905;
		sine[1169]=3905;
		sine[1170]=3904;
		sine[1171]=3904;
		sine[1172]=3902;
		sine[1173]=3903;
		sine[1174]=3901;
		sine[1175]=3902;
		sine[1176]=3900;
		sine[1177]=3901;
		sine[1178]=3899;
		sine[1179]=3899;
		sine[1180]=3897;
		sine[1181]=3898;
		sine[1182]=3896;
		sine[1183]=3897;
		sine[1184]=3895;
		sine[1185]=3896;
		sine[1186]=3894;
		sine[1187]=3894;
		sine[1188]=3892;
		sine[1189]=3893;
		sine[1190]=3891;
		sine[1191]=3892;
		sine[1192]=3890;
		sine[1193]=3890;
		sine[1194]=3888;
		sine[1195]=3889;
		sine[1196]=3887;
		sine[1197]=3887;
		sine[1198]=3885;
		sine[1199]=3886;
		sine[1200]=3884;
		sine[1201]=3885;
		sine[1202]=3882;
		sine[1203]=3883;
		sine[1204]=3881;
		sine[1205]=3882;
		sine[1206]=3879;
		sine[1207]=3880;
		sine[1208]=3878;
		sine[1209]=3879;
		sine[1210]=3876;
		sine[1211]=3877;
		sine[1212]=3875;
		sine[1213]=3876;
		sine[1214]=3873;
		sine[1215]=3874;
		sine[1216]=3872;
		sine[1217]=3873;
		sine[1218]=3870;
		sine[1219]=3871;
		sine[1220]=3869;
		sine[1221]=3869;
		sine[1222]=3867;
		sine[1223]=3868;
		sine[1224]=3865;
		sine[1225]=3866;
		sine[1226]=3864;
		sine[1227]=3865;
		sine[1228]=3862;
		sine[1229]=3863;
		sine[1230]=3861;
		sine[1231]=3861;
		sine[1232]=3859;
		sine[1233]=3860;
		sine[1234]=3857;
		sine[1235]=3858;
		sine[1236]=3855;
		sine[1237]=3856;
		sine[1238]=3854;
		sine[1239]=3855;
		sine[1240]=3852;
		sine[1241]=3853;
		sine[1242]=3850;
		sine[1243]=3851;
		sine[1244]=3848;
		sine[1245]=3849;
		sine[1246]=3847;
		sine[1247]=3848;
		sine[1248]=3845;
		sine[1249]=3846;
		sine[1250]=3843;
		sine[1251]=3844;
		sine[1252]=3841;
		sine[1253]=3842;
		sine[1254]=3839;
		sine[1255]=3840;
		sine[1256]=3837;
		sine[1257]=3838;
		sine[1258]=3836;
		sine[1259]=3836;
		sine[1260]=3834;
		sine[1261]=3835;
		sine[1262]=3832;
		sine[1263]=3833;
		sine[1264]=3830;
		sine[1265]=3831;
		sine[1266]=3828;
		sine[1267]=3829;
		sine[1268]=3826;
		sine[1269]=3827;
		sine[1270]=3824;
		sine[1271]=3825;
		sine[1272]=3822;
		sine[1273]=3823;
		sine[1274]=3820;
		sine[1275]=3821;
		sine[1276]=3818;
		sine[1277]=3819;
		sine[1278]=3816;
		sine[1279]=3817;
		sine[1280]=3814;
		sine[1281]=3815;
		sine[1282]=3812;
		sine[1283]=3813;
		sine[1284]=3810;
		sine[1285]=3811;
		sine[1286]=3808;
		sine[1287]=3809;
		sine[1288]=3805;
		sine[1289]=3806;
		sine[1290]=3803;
		sine[1291]=3804;
		sine[1292]=3801;
		sine[1293]=3802;
		sine[1294]=3799;
		sine[1295]=3800;
		sine[1296]=3797;
		sine[1297]=3798;
		sine[1298]=3795;
		sine[1299]=3796;
		sine[1300]=3792;
		sine[1301]=3793;
		sine[1302]=3790;
		sine[1303]=3791;
		sine[1304]=3788;
		sine[1305]=3789;
		sine[1306]=3786;
		sine[1307]=3787;
		sine[1308]=3783;
		sine[1309]=3785;
		sine[1310]=3781;
		sine[1311]=3782;
		sine[1312]=3779;
		sine[1313]=3780;
		sine[1314]=3777;
		sine[1315]=3778;
		sine[1316]=3774;
		sine[1317]=3775;
		sine[1318]=3772;
		sine[1319]=3773;
		sine[1320]=3770;
		sine[1321]=3771;
		sine[1322]=3767;
		sine[1323]=3768;
		sine[1324]=3765;
		sine[1325]=3766;
		sine[1326]=3762;
		sine[1327]=3764;
		sine[1328]=3760;
		sine[1329]=3761;
		sine[1330]=3758;
		sine[1331]=3759;
		sine[1332]=3755;
		sine[1333]=3756;
		sine[1334]=3753;
		sine[1335]=3754;
		sine[1336]=3750;
		sine[1337]=3751;
		sine[1338]=3748;
		sine[1339]=3749;
		sine[1340]=3745;
		sine[1341]=3746;
		sine[1342]=3743;
		sine[1343]=3744;
		sine[1344]=3740;
		sine[1345]=3741;
		sine[1346]=3738;
		sine[1347]=3739;
		sine[1348]=3735;
		sine[1349]=3736;
		sine[1350]=3732;
		sine[1351]=3734;
		sine[1352]=3730;
		sine[1353]=3731;
		sine[1354]=3727;
		sine[1355]=3729;
		sine[1356]=3725;
		sine[1357]=3726;
		sine[1358]=3722;
		sine[1359]=3723;
		sine[1360]=3719;
		sine[1361]=3721;
		sine[1362]=3717;
		sine[1363]=3718;
		sine[1364]=3714;
		sine[1365]=3715;
		sine[1366]=3711;
		sine[1367]=3713;
		sine[1368]=3709;
		sine[1369]=3710;
		sine[1370]=3706;
		sine[1371]=3707;
		sine[1372]=3703;
		sine[1373]=3705;
		sine[1374]=3700;
		sine[1375]=3702;
		sine[1376]=3698;
		sine[1377]=3699;
		sine[1378]=3695;
		sine[1379]=3696;
		sine[1380]=3692;
		sine[1381]=3693;
		sine[1382]=3689;
		sine[1383]=3691;
		sine[1384]=3686;
		sine[1385]=3688;
		sine[1386]=3684;
		sine[1387]=3685;
		sine[1388]=3681;
		sine[1389]=3682;
		sine[1390]=3678;
		sine[1391]=3679;
		sine[1392]=3675;
		sine[1393]=3676;
		sine[1394]=3672;
		sine[1395]=3674;
		sine[1396]=3669;
		sine[1397]=3671;
		sine[1398]=3666;
		sine[1399]=3668;
		sine[1400]=3663;
		sine[1401]=3665;
		sine[1402]=3660;
		sine[1403]=3662;
		sine[1404]=3658;
		sine[1405]=3659;
		sine[1406]=3655;
		sine[1407]=3656;
		sine[1408]=3652;
		sine[1409]=3653;
		sine[1410]=3649;
		sine[1411]=3650;
		sine[1412]=3646;
		sine[1413]=3647;
		sine[1414]=3643;
		sine[1415]=3644;
		sine[1416]=3640;
		sine[1417]=3641;
		sine[1418]=3636;
		sine[1419]=3638;
		sine[1420]=3633;
		sine[1421]=3635;
		sine[1422]=3630;
		sine[1423]=3632;
		sine[1424]=3627;
		sine[1425]=3629;
		sine[1426]=3624;
		sine[1427]=3626;
		sine[1428]=3621;
		sine[1429]=3623;
		sine[1430]=3618;
		sine[1431]=3619;
		sine[1432]=3615;
		sine[1433]=3616;
		sine[1434]=3612;
		sine[1435]=3613;
		sine[1436]=3608;
		sine[1437]=3610;
		sine[1438]=3605;
		sine[1439]=3607;
		sine[1440]=3602;
		sine[1441]=3604;
		sine[1442]=3599;
		sine[1443]=3600;
		sine[1444]=3596;
		sine[1445]=3597;
		sine[1446]=3592;
		sine[1447]=3594;
		sine[1448]=3589;
		sine[1449]=3591;
		sine[1450]=3586;
		sine[1451]=3587;
		sine[1452]=3583;
		sine[1453]=3584;
		sine[1454]=3579;
		sine[1455]=3581;
		sine[1456]=3576;
		sine[1457]=3578;
		sine[1458]=3573;
		sine[1459]=3574;
		sine[1460]=3569;
		sine[1461]=3571;
		sine[1462]=3566;
		sine[1463]=3568;
		sine[1464]=3563;
		sine[1465]=3564;
		sine[1466]=3559;
		sine[1467]=3561;
		sine[1468]=3556;
		sine[1469]=3558;
		sine[1470]=3552;
		sine[1471]=3554;
		sine[1472]=3549;
		sine[1473]=3551;
		sine[1474]=3546;
		sine[1475]=3547;
		sine[1476]=3542;
		sine[1477]=3544;
		sine[1478]=3539;
		sine[1479]=3540;
		sine[1480]=3535;
		sine[1481]=3537;
		sine[1482]=3532;
		sine[1483]=3534;
		sine[1484]=3528;
		sine[1485]=3530;
		sine[1486]=3525;
		sine[1487]=3527;
		sine[1488]=3521;
		sine[1489]=3523;
		sine[1490]=3518;
		sine[1491]=3520;
		sine[1492]=3514;
		sine[1493]=3516;
		sine[1494]=3511;
		sine[1495]=3513;
		sine[1496]=3507;
		sine[1497]=3509;
		sine[1498]=3504;
		sine[1499]=3505;
		sine[1500]=3500;
		sine[1501]=3502;
		sine[1502]=3496;
		sine[1503]=3498;
		sine[1504]=3493;
		sine[1505]=3495;
		sine[1506]=3489;
		sine[1507]=3491;
		sine[1508]=3486;
		sine[1509]=3487;
		sine[1510]=3482;
		sine[1511]=3484;
		sine[1512]=3478;
		sine[1513]=3480;
		sine[1514]=3475;
		sine[1515]=3476;
		sine[1516]=3471;
		sine[1517]=3473;
		sine[1518]=3467;
		sine[1519]=3469;
		sine[1520]=3464;
		sine[1521]=3465;
		sine[1522]=3460;
		sine[1523]=3462;
		sine[1524]=3456;
		sine[1525]=3458;
		sine[1526]=3452;
		sine[1527]=3454;
		sine[1528]=3449;
		sine[1529]=3451;
		sine[1530]=3445;
		sine[1531]=3447;
		sine[1532]=3441;
		sine[1533]=3443;
		sine[1534]=3437;
		sine[1535]=3439;
		sine[1536]=3434;
		sine[1537]=3435;
		sine[1538]=3430;
		sine[1539]=3432;
		sine[1540]=3426;
		sine[1541]=3428;
		sine[1542]=3422;
		sine[1543]=3424;
		sine[1544]=3418;
		sine[1545]=3420;
		sine[1546]=3414;
		sine[1547]=3416;
		sine[1548]=3411;
		sine[1549]=3412;
		sine[1550]=3407;
		sine[1551]=3409;
		sine[1552]=3403;
		sine[1553]=3405;
		sine[1554]=3399;
		sine[1555]=3401;
		sine[1556]=3395;
		sine[1557]=3397;
		sine[1558]=3391;
		sine[1559]=3393;
		sine[1560]=3387;
		sine[1561]=3389;
		sine[1562]=3383;
		sine[1563]=3385;
		sine[1564]=3379;
		sine[1565]=3381;
		sine[1566]=3375;
		sine[1567]=3377;
		sine[1568]=3371;
		sine[1569]=3373;
		sine[1570]=3367;
		sine[1571]=3369;
		sine[1572]=3363;
		sine[1573]=3365;
		sine[1574]=3359;
		sine[1575]=3361;
		sine[1576]=3355;
		sine[1577]=3357;
		sine[1578]=3351;
		sine[1579]=3353;
		sine[1580]=3347;
		sine[1581]=3349;
		sine[1582]=3343;
		sine[1583]=3345;
		sine[1584]=3339;
		sine[1585]=3341;
		sine[1586]=3335;
		sine[1587]=3337;
		sine[1588]=3331;
		sine[1589]=3333;
		sine[1590]=3327;
		sine[1591]=3329;
		sine[1592]=3323;
		sine[1593]=3325;
		sine[1594]=3319;
		sine[1595]=3321;
		sine[1596]=3314;
		sine[1597]=3316;
		sine[1598]=3310;
		sine[1599]=3312;
		sine[1600]=3306;
		sine[1601]=3308;
		sine[1602]=3302;
		sine[1603]=3304;
		sine[1604]=3298;
		sine[1605]=3300;
		sine[1606]=3294;
		sine[1607]=3296;
		sine[1608]=3289;
		sine[1609]=3292;
		sine[1610]=3285;
		sine[1611]=3287;
		sine[1612]=3281;
		sine[1613]=3283;
		sine[1614]=3277;
		sine[1615]=3279;
		sine[1616]=3273;
		sine[1617]=3275;
		sine[1618]=3268;
		sine[1619]=3270;
		sine[1620]=3264;
		sine[1621]=3266;
		sine[1622]=3260;
		sine[1623]=3262;
		sine[1624]=3256;
		sine[1625]=3258;
		sine[1626]=3251;
		sine[1627]=3253;
		sine[1628]=3247;
		sine[1629]=3249;
		sine[1630]=3243;
		sine[1631]=3245;
		sine[1632]=3238;
		sine[1633]=3240;
		sine[1634]=3234;
		sine[1635]=3236;
		sine[1636]=3230;
		sine[1637]=3232;
		sine[1638]=3225;
		sine[1639]=3227;
		sine[1640]=3221;
		sine[1641]=3223;
		sine[1642]=3217;
		sine[1643]=3219;
		sine[1644]=3212;
		sine[1645]=3214;
		sine[1646]=3208;
		sine[1647]=3210;
		sine[1648]=3203;
		sine[1649]=3206;
		sine[1650]=3199;
		sine[1651]=3201;
		sine[1652]=3195;
		sine[1653]=3197;
		sine[1654]=3190;
		sine[1655]=3192;
		sine[1656]=3186;
		sine[1657]=3188;
		sine[1658]=3181;
		sine[1659]=3184;
		sine[1660]=3177;
		sine[1661]=3179;
		sine[1662]=3172;
		sine[1663]=3175;
		sine[1664]=3168;
		sine[1665]=3170;
		sine[1666]=3164;
		sine[1667]=3166;
		sine[1668]=3159;
		sine[1669]=3161;
		sine[1670]=3155;
		sine[1671]=3157;
		sine[1672]=3150;
		sine[1673]=3152;
		sine[1674]=3146;
		sine[1675]=3148;
		sine[1676]=3141;
		sine[1677]=3143;
		sine[1678]=3137;
		sine[1679]=3139;
		sine[1680]=3132;
		sine[1681]=3134;
		sine[1682]=3127;
		sine[1683]=3130;
		sine[1684]=3123;
		sine[1685]=3125;
		sine[1686]=3118;
		sine[1687]=3121;
		sine[1688]=3114;
		sine[1689]=3116;
		sine[1690]=3109;
		sine[1691]=3111;
		sine[1692]=3105;
		sine[1693]=3107;
		sine[1694]=3100;
		sine[1695]=3102;
		sine[1696]=3095;
		sine[1697]=3098;
		sine[1698]=3091;
		sine[1699]=3093;
		sine[1700]=3086;
		sine[1701]=3088;
		sine[1702]=3082;
		sine[1703]=3084;
		sine[1704]=3077;
		sine[1705]=3079;
		sine[1706]=3072;
		sine[1707]=3075;
		sine[1708]=3068;
		sine[1709]=3070;
		sine[1710]=3063;
		sine[1711]=3065;
		sine[1712]=3058;
		sine[1713]=3061;
		sine[1714]=3054;
		sine[1715]=3056;
		sine[1716]=3049;
		sine[1717]=3051;
		sine[1718]=3044;
		sine[1719]=3047;
		sine[1720]=3039;
		sine[1721]=3042;
		sine[1722]=3035;
		sine[1723]=3037;
		sine[1724]=3030;
		sine[1725]=3032;
		sine[1726]=3025;
		sine[1727]=3028;
		sine[1728]=3021;
		sine[1729]=3023;
		sine[1730]=3016;
		sine[1731]=3018;
		sine[1732]=3011;
		sine[1733]=3013;
		sine[1734]=3006;
		sine[1735]=3009;
		sine[1736]=3002;
		sine[1737]=3004;
		sine[1738]=2997;
		sine[1739]=2999;
		sine[1740]=2992;
		sine[1741]=2994;
		sine[1742]=2987;
		sine[1743]=2990;
		sine[1744]=2982;
		sine[1745]=2985;
		sine[1746]=2978;
		sine[1747]=2980;
		sine[1748]=2973;
		sine[1749]=2975;
		sine[1750]=2968;
		sine[1751]=2970;
		sine[1752]=2963;
		sine[1753]=2966;
		sine[1754]=2958;
		sine[1755]=2961;
		sine[1756]=2953;
		sine[1757]=2956;
		sine[1758]=2949;
		sine[1759]=2951;
		sine[1760]=2944;
		sine[1761]=2946;
		sine[1762]=2939;
		sine[1763]=2941;
		sine[1764]=2934;
		sine[1765]=2937;
		sine[1766]=2929;
		sine[1767]=2932;
		sine[1768]=2924;
		sine[1769]=2927;
		sine[1770]=2919;
		sine[1771]=2922;
		sine[1772]=2915;
		sine[1773]=2917;
		sine[1774]=2910;
		sine[1775]=2912;
		sine[1776]=2905;
		sine[1777]=2907;
		sine[1778]=2900;
		sine[1779]=2902;
		sine[1780]=2895;
		sine[1781]=2897;
		sine[1782]=2890;
		sine[1783]=2892;
		sine[1784]=2885;
		sine[1785]=2887;
		sine[1786]=2880;
		sine[1787]=2883;
		sine[1788]=2875;
		sine[1789]=2878;
		sine[1790]=2870;
		sine[1791]=2873;
		sine[1792]=2865;
		sine[1793]=2868;
		sine[1794]=2860;
		sine[1795]=2863;
		sine[1796]=2855;
		sine[1797]=2858;
		sine[1798]=2850;
		sine[1799]=2853;
		sine[1800]=2845;
		sine[1801]=2848;
		sine[1802]=2840;
		sine[1803]=2843;
		sine[1804]=2835;
		sine[1805]=2838;
		sine[1806]=2830;
		sine[1807]=2833;
		sine[1808]=2825;
		sine[1809]=2828;
		sine[1810]=2820;
		sine[1811]=2823;
		sine[1812]=2815;
		sine[1813]=2818;
		sine[1814]=2810;
		sine[1815]=2813;
		sine[1816]=2805;
		sine[1817]=2808;
		sine[1818]=2800;
		sine[1819]=2803;
		sine[1820]=2795;
		sine[1821]=2798;
		sine[1822]=2790;
		sine[1823]=2793;
		sine[1824]=2785;
		sine[1825]=2788;
		sine[1826]=2780;
		sine[1827]=2782;
		sine[1828]=2775;
		sine[1829]=2777;
		sine[1830]=2770;
		sine[1831]=2772;
		sine[1832]=2765;
		sine[1833]=2767;
		sine[1834]=2760;
		sine[1835]=2762;
		sine[1836]=2755;
		sine[1837]=2757;
		sine[1838]=2749;
		sine[1839]=2752;
		sine[1840]=2744;
		sine[1841]=2747;
		sine[1842]=2739;
		sine[1843]=2742;
		sine[1844]=2734;
		sine[1845]=2737;
		sine[1846]=2729;
		sine[1847]=2732;
		sine[1848]=2724;
		sine[1849]=2727;
		sine[1850]=2719;
		sine[1851]=2721;
		sine[1852]=2714;
		sine[1853]=2716;
		sine[1854]=2709;
		sine[1855]=2711;
		sine[1856]=2703;
		sine[1857]=2706;
		sine[1858]=2698;
		sine[1859]=2701;
		sine[1860]=2693;
		sine[1861]=2696;
		sine[1862]=2688;
		sine[1863]=2691;
		sine[1864]=2683;
		sine[1865]=2685;
		sine[1866]=2678;
		sine[1867]=2680;
		sine[1868]=2673;
		sine[1869]=2675;
		sine[1870]=2667;
		sine[1871]=2670;
		sine[1872]=2662;
		sine[1873]=2665;
		sine[1874]=2657;
		sine[1875]=2660;
		sine[1876]=2652;
		sine[1877]=2654;
		sine[1878]=2647;
		sine[1879]=2649;
		sine[1880]=2641;
		sine[1881]=2644;
		sine[1882]=2636;
		sine[1883]=2639;
		sine[1884]=2631;
		sine[1885]=2634;
		sine[1886]=2626;
		sine[1887]=2628;
		sine[1888]=2621;
		sine[1889]=2623;
		sine[1890]=2615;
		sine[1891]=2618;
		sine[1892]=2610;
		sine[1893]=2613;
		sine[1894]=2605;
		sine[1895]=2608;
		sine[1896]=2600;
		sine[1897]=2602;
		sine[1898]=2595;
		sine[1899]=2597;
		sine[1900]=2589;
		sine[1901]=2592;
		sine[1902]=2584;
		sine[1903]=2587;
		sine[1904]=2579;
		sine[1905]=2581;
		sine[1906]=2574;
		sine[1907]=2576;
		sine[1908]=2568;
		sine[1909]=2571;
		sine[1910]=2563;
		sine[1911]=2566;
		sine[1912]=2558;
		sine[1913]=2560;
		sine[1914]=2553;
		sine[1915]=2555;
		sine[1916]=2547;
		sine[1917]=2550;
		sine[1918]=2542;
		sine[1919]=2545;
		sine[1920]=2537;
		sine[1921]=2539;
		sine[1922]=2532;
		sine[1923]=2534;
		sine[1924]=2526;
		sine[1925]=2529;
		sine[1926]=2521;
		sine[1927]=2524;
		sine[1928]=2516;
		sine[1929]=2518;
		sine[1930]=2510;
		sine[1931]=2513;
		sine[1932]=2505;
		sine[1933]=2508;
		sine[1934]=2500;
		sine[1935]=2502;
		sine[1936]=2495;
		sine[1937]=2497;
		sine[1938]=2489;
		sine[1939]=2492;
		sine[1940]=2484;
		sine[1941]=2487;
		sine[1942]=2479;
		sine[1943]=2481;
		sine[1944]=2473;
		sine[1945]=2476;
		sine[1946]=2468;
		sine[1947]=2471;
		sine[1948]=2463;
		sine[1949]=2465;
		sine[1950]=2457;
		sine[1951]=2460;
		sine[1952]=2452;
		sine[1953]=2455;
		sine[1954]=2447;
		sine[1955]=2449;
		sine[1956]=2441;
		sine[1957]=2444;
		sine[1958]=2436;
		sine[1959]=2439;
		sine[1960]=2431;
		sine[1961]=2434;
		sine[1962]=2426;
		sine[1963]=2428;
		sine[1964]=2420;
		sine[1965]=2423;
		sine[1966]=2415;
		sine[1967]=2418;
		sine[1968]=2410;
		sine[1969]=2412;
		sine[1970]=2404;
		sine[1971]=2407;
		sine[1972]=2399;
		sine[1973]=2402;
		sine[1974]=2394;
		sine[1975]=2396;
		sine[1976]=2388;
		sine[1977]=2391;
		sine[1978]=2383;
		sine[1979]=2386;
		sine[1980]=2378;
		sine[1981]=2380;
		sine[1982]=2372;
		sine[1983]=2375;
		sine[1984]=2367;
		sine[1985]=2370;
		sine[1986]=2362;
		sine[1987]=2364;
		sine[1988]=2356;
		sine[1989]=2359;
		sine[1990]=2351;
		sine[1991]=2353;
		sine[1992]=2345;
		sine[1993]=2348;
		sine[1994]=2340;
		sine[1995]=2343;
		sine[1996]=2335;
		sine[1997]=2337;
		sine[1998]=2329;
		sine[1999]=2332;
		sine[2000]=2324;
		sine[2001]=2327;
		sine[2002]=2319;
		sine[2003]=2321;
		sine[2004]=2313;
		sine[2005]=2316;
		sine[2006]=2308;
		sine[2007]=2311;
		sine[2008]=2303;
		sine[2009]=2305;
		sine[2010]=2297;
		sine[2011]=2300;
		sine[2012]=2292;
		sine[2013]=2295;
		sine[2014]=2287;
		sine[2015]=2289;
		sine[2016]=2281;
		sine[2017]=2284;
		sine[2018]=2276;
		sine[2019]=2279;
		sine[2020]=2270;
		sine[2021]=2273;
		sine[2022]=2265;
		sine[2023]=2268;
		sine[2024]=2260;
		sine[2025]=2262;
		sine[2026]=2254;
		sine[2027]=2257;
		sine[2028]=2249;
		sine[2029]=2252;
		sine[2030]=2244;
		sine[2031]=2246;
		sine[2032]=2238;
		sine[2033]=2241;
		sine[2034]=2233;
		sine[2035]=2236;
		sine[2036]=2228;
		sine[2037]=2230;
		sine[2038]=2222;
		sine[2039]=2225;
		sine[2040]=2217;
		sine[2041]=2219;
		sine[2042]=2211;
		sine[2043]=2214;
		sine[2044]=2206;
		sine[2045]=2209;
		sine[2046]=2201;
		sine[2047]=2203;
		sine[2048]=2195;
		sine[2049]=2198;
		sine[2050]=2190;
		sine[2051]=2193;
		sine[2052]=2185;
		sine[2053]=2187;
		sine[2054]=2179;
		sine[2055]=2182;
		sine[2056]=2174;
		sine[2057]=2177;
		sine[2058]=2168;
		sine[2059]=2171;
		sine[2060]=2163;
		sine[2061]=2166;
		sine[2062]=2158;
		sine[2063]=2160;
		sine[2064]=2152;
		sine[2065]=2155;
		sine[2066]=2147;
		sine[2067]=2150;
		sine[2068]=2142;
		sine[2069]=2144;
		sine[2070]=2136;
		sine[2071]=2139;
		sine[2072]=2131;
		sine[2073]=2134;
		sine[2074]=2126;
		sine[2075]=2128;
		sine[2076]=2120;
		sine[2077]=2123;
		sine[2078]=2115;
		sine[2079]=2117;
		sine[2080]=2109;
		sine[2081]=2112;
		sine[2082]=2104;
		sine[2083]=2107;
		sine[2084]=2099;
		sine[2085]=2101;
		sine[2086]=2093;
		sine[2087]=2096;
		sine[2088]=2088;
		sine[2089]=2091;
		sine[2090]=2083;
		sine[2091]=2085;
		sine[2092]=2077;
		sine[2093]=2080;
		sine[2094]=2072;
		sine[2095]=2075;
		sine[2096]=2067;
		sine[2097]=2069;
		sine[2098]=2061;
		sine[2099]=2064;
		sine[2100]=2056;
		sine[2101]=2059;
		sine[2102]=2051;
		sine[2103]=2053;
		sine[2104]=2045;
		sine[2105]=2048;
		sine[2106]=2040;
		sine[2107]=2043;
		sine[2108]=2034;
		sine[2109]=2037;
		sine[2110]=2029;
		sine[2111]=2032;
		sine[2112]=2024;
		sine[2113]=2026;
		sine[2114]=2018;
		sine[2115]=2021;
		sine[2116]=2013;
		sine[2117]=2016;
		sine[2118]=2008;
		sine[2119]=2010;
		sine[2120]=2002;
		sine[2121]=2005;
		sine[2122]=1997;
		sine[2123]=2000;
		sine[2124]=1992;
		sine[2125]=1994;
		sine[2126]=1986;
		sine[2127]=1989;
		sine[2128]=1981;
		sine[2129]=1984;
		sine[2130]=1976;
		sine[2131]=1978;
		sine[2132]=1970;
		sine[2133]=1973;
		sine[2134]=1965;
		sine[2135]=1968;
		sine[2136]=1960;
		sine[2137]=1962;
		sine[2138]=1955;
		sine[2139]=1957;
		sine[2140]=1949;
		sine[2141]=1952;
		sine[2142]=1944;
		sine[2143]=1947;
		sine[2144]=1939;
		sine[2145]=1941;
		sine[2146]=1933;
		sine[2147]=1936;
		sine[2148]=1928;
		sine[2149]=1931;
		sine[2150]=1923;
		sine[2151]=1925;
		sine[2152]=1917;
		sine[2153]=1920;
		sine[2154]=1912;
		sine[2155]=1915;
		sine[2156]=1907;
		sine[2157]=1909;
		sine[2158]=1901;
		sine[2159]=1904;
		sine[2160]=1896;
		sine[2161]=1899;
		sine[2162]=1891;
		sine[2163]=1894;
		sine[2164]=1886;
		sine[2165]=1888;
		sine[2166]=1880;
		sine[2167]=1883;
		sine[2168]=1875;
		sine[2169]=1878;
		sine[2170]=1870;
		sine[2171]=1872;
		sine[2172]=1864;
		sine[2173]=1867;
		sine[2174]=1859;
		sine[2175]=1862;
		sine[2176]=1854;
		sine[2177]=1857;
		sine[2178]=1849;
		sine[2179]=1851;
		sine[2180]=1843;
		sine[2181]=1846;
		sine[2182]=1838;
		sine[2183]=1841;
		sine[2184]=1833;
		sine[2185]=1836;
		sine[2186]=1828;
		sine[2187]=1830;
		sine[2188]=1822;
		sine[2189]=1825;
		sine[2190]=1817;
		sine[2191]=1820;
		sine[2192]=1812;
		sine[2193]=1815;
		sine[2194]=1807;
		sine[2195]=1809;
		sine[2196]=1801;
		sine[2197]=1804;
		sine[2198]=1796;
		sine[2199]=1799;
		sine[2200]=1791;
		sine[2201]=1794;
		sine[2202]=1786;
		sine[2203]=1788;
		sine[2204]=1781;
		sine[2205]=1783;
		sine[2206]=1775;
		sine[2207]=1778;
		sine[2208]=1770;
		sine[2209]=1773;
		sine[2210]=1765;
		sine[2211]=1768;
		sine[2212]=1760;
		sine[2213]=1762;
		sine[2214]=1755;
		sine[2215]=1757;
		sine[2216]=1749;
		sine[2217]=1752;
		sine[2218]=1744;
		sine[2219]=1747;
		sine[2220]=1739;
		sine[2221]=1742;
		sine[2222]=1734;
		sine[2223]=1736;
		sine[2224]=1729;
		sine[2225]=1731;
		sine[2226]=1723;
		sine[2227]=1726;
		sine[2228]=1718;
		sine[2229]=1721;
		sine[2230]=1713;
		sine[2231]=1716;
		sine[2232]=1708;
		sine[2233]=1711;
		sine[2234]=1703;
		sine[2235]=1705;
		sine[2236]=1698;
		sine[2237]=1700;
		sine[2238]=1693;
		sine[2239]=1695;
		sine[2240]=1687;
		sine[2241]=1690;
		sine[2242]=1682;
		sine[2243]=1685;
		sine[2244]=1677;
		sine[2245]=1680;
		sine[2246]=1672;
		sine[2247]=1675;
		sine[2248]=1667;
		sine[2249]=1669;
		sine[2250]=1662;
		sine[2251]=1664;
		sine[2252]=1657;
		sine[2253]=1659;
		sine[2254]=1652;
		sine[2255]=1654;
		sine[2256]=1647;
		sine[2257]=1649;
		sine[2258]=1641;
		sine[2259]=1644;
		sine[2260]=1636;
		sine[2261]=1639;
		sine[2262]=1631;
		sine[2263]=1634;
		sine[2264]=1626;
		sine[2265]=1629;
		sine[2266]=1621;
		sine[2267]=1624;
		sine[2268]=1616;
		sine[2269]=1619;
		sine[2270]=1611;
		sine[2271]=1614;
		sine[2272]=1606;
		sine[2273]=1608;
		sine[2274]=1601;
		sine[2275]=1603;
		sine[2276]=1596;
		sine[2277]=1598;
		sine[2278]=1591;
		sine[2279]=1593;
		sine[2280]=1586;
		sine[2281]=1588;
		sine[2282]=1581;
		sine[2283]=1583;
		sine[2284]=1576;
		sine[2285]=1578;
		sine[2286]=1571;
		sine[2287]=1573;
		sine[2288]=1566;
		sine[2289]=1568;
		sine[2290]=1561;
		sine[2291]=1563;
		sine[2292]=1556;
		sine[2293]=1558;
		sine[2294]=1551;
		sine[2295]=1553;
		sine[2296]=1546;
		sine[2297]=1548;
		sine[2298]=1541;
		sine[2299]=1543;
		sine[2300]=1536;
		sine[2301]=1538;
		sine[2302]=1531;
		sine[2303]=1533;
		sine[2304]=1526;
		sine[2305]=1528;
		sine[2306]=1521;
		sine[2307]=1523;
		sine[2308]=1516;
		sine[2309]=1518;
		sine[2310]=1511;
		sine[2311]=1513;
		sine[2312]=1506;
		sine[2313]=1509;
		sine[2314]=1501;
		sine[2315]=1504;
		sine[2316]=1496;
		sine[2317]=1499;
		sine[2318]=1491;
		sine[2319]=1494;
		sine[2320]=1486;
		sine[2321]=1489;
		sine[2322]=1481;
		sine[2323]=1484;
		sine[2324]=1477;
		sine[2325]=1479;
		sine[2326]=1472;
		sine[2327]=1474;
		sine[2328]=1467;
		sine[2329]=1469;
		sine[2330]=1462;
		sine[2331]=1464;
		sine[2332]=1457;
		sine[2333]=1459;
		sine[2334]=1452;
		sine[2335]=1455;
		sine[2336]=1447;
		sine[2337]=1450;
		sine[2338]=1443;
		sine[2339]=1445;
		sine[2340]=1438;
		sine[2341]=1440;
		sine[2342]=1433;
		sine[2343]=1435;
		sine[2344]=1428;
		sine[2345]=1430;
		sine[2346]=1423;
		sine[2347]=1426;
		sine[2348]=1418;
		sine[2349]=1421;
		sine[2350]=1414;
		sine[2351]=1416;
		sine[2352]=1409;
		sine[2353]=1411;
		sine[2354]=1404;
		sine[2355]=1406;
		sine[2356]=1399;
		sine[2357]=1402;
		sine[2358]=1394;
		sine[2359]=1397;
		sine[2360]=1390;
		sine[2361]=1392;
		sine[2362]=1385;
		sine[2363]=1387;
		sine[2364]=1380;
		sine[2365]=1383;
		sine[2366]=1375;
		sine[2367]=1378;
		sine[2368]=1371;
		sine[2369]=1373;
		sine[2370]=1366;
		sine[2371]=1368;
		sine[2372]=1361;
		sine[2373]=1364;
		sine[2374]=1357;
		sine[2375]=1359;
		sine[2376]=1352;
		sine[2377]=1354;
		sine[2378]=1347;
		sine[2379]=1349;
		sine[2380]=1342;
		sine[2381]=1345;
		sine[2382]=1338;
		sine[2383]=1340;
		sine[2384]=1333;
		sine[2385]=1335;
		sine[2386]=1328;
		sine[2387]=1331;
		sine[2388]=1324;
		sine[2389]=1326;
		sine[2390]=1319;
		sine[2391]=1321;
		sine[2392]=1314;
		sine[2393]=1317;
		sine[2394]=1310;
		sine[2395]=1312;
		sine[2396]=1305;
		sine[2397]=1308;
		sine[2398]=1301;
		sine[2399]=1303;
		sine[2400]=1296;
		sine[2401]=1298;
		sine[2402]=1291;
		sine[2403]=1294;
		sine[2404]=1287;
		sine[2405]=1289;
		sine[2406]=1282;
		sine[2407]=1285;
		sine[2408]=1278;
		sine[2409]=1280;
		sine[2410]=1273;
		sine[2411]=1275;
		sine[2412]=1269;
		sine[2413]=1271;
		sine[2414]=1264;
		sine[2415]=1266;
		sine[2416]=1259;
		sine[2417]=1262;
		sine[2418]=1255;
		sine[2419]=1257;
		sine[2420]=1250;
		sine[2421]=1253;
		sine[2422]=1246;
		sine[2423]=1248;
		sine[2424]=1241;
		sine[2425]=1244;
		sine[2426]=1237;
		sine[2427]=1239;
		sine[2428]=1232;
		sine[2429]=1235;
		sine[2430]=1228;
		sine[2431]=1230;
		sine[2432]=1224;
		sine[2433]=1226;
		sine[2434]=1219;
		sine[2435]=1221;
		sine[2436]=1215;
		sine[2437]=1217;
		sine[2438]=1210;
		sine[2439]=1212;
		sine[2440]=1206;
		sine[2441]=1208;
		sine[2442]=1201;
		sine[2443]=1204;
		sine[2444]=1197;
		sine[2445]=1199;
		sine[2446]=1193;
		sine[2447]=1195;
		sine[2448]=1188;
		sine[2449]=1190;
		sine[2450]=1184;
		sine[2451]=1186;
		sine[2452]=1179;
		sine[2453]=1182;
		sine[2454]=1175;
		sine[2455]=1177;
		sine[2456]=1171;
		sine[2457]=1173;
		sine[2458]=1166;
		sine[2459]=1169;
		sine[2460]=1162;
		sine[2461]=1164;
		sine[2462]=1158;
		sine[2463]=1160;
		sine[2464]=1153;
		sine[2465]=1156;
		sine[2466]=1149;
		sine[2467]=1151;
		sine[2468]=1145;
		sine[2469]=1147;
		sine[2470]=1140;
		sine[2471]=1143;
		sine[2472]=1136;
		sine[2473]=1138;
		sine[2474]=1132;
		sine[2475]=1134;
		sine[2476]=1128;
		sine[2477]=1130;
		sine[2478]=1123;
		sine[2479]=1126;
		sine[2480]=1119;
		sine[2481]=1121;
		sine[2482]=1115;
		sine[2483]=1117;
		sine[2484]=1111;
		sine[2485]=1113;
		sine[2486]=1107;
		sine[2487]=1109;
		sine[2488]=1102;
		sine[2489]=1104;
		sine[2490]=1098;
		sine[2491]=1100;
		sine[2492]=1094;
		sine[2493]=1096;
		sine[2494]=1090;
		sine[2495]=1092;
		sine[2496]=1086;
		sine[2497]=1088;
		sine[2498]=1082;
		sine[2499]=1084;
		sine[2500]=1077;
		sine[2501]=1080;
		sine[2502]=1073;
		sine[2503]=1075;
		sine[2504]=1069;
		sine[2505]=1071;
		sine[2506]=1065;
		sine[2507]=1067;
		sine[2508]=1061;
		sine[2509]=1063;
		sine[2510]=1057;
		sine[2511]=1059;
		sine[2512]=1053;
		sine[2513]=1055;
		sine[2514]=1049;
		sine[2515]=1051;
		sine[2516]=1045;
		sine[2517]=1047;
		sine[2518]=1041;
		sine[2519]=1043;
		sine[2520]=1037;
		sine[2521]=1039;
		sine[2522]=1033;
		sine[2523]=1035;
		sine[2524]=1029;
		sine[2525]=1031;
		sine[2526]=1025;
		sine[2527]=1027;
		sine[2528]=1021;
		sine[2529]=1023;
		sine[2530]=1017;
		sine[2531]=1019;
		sine[2532]=1013;
		sine[2533]=1015;
		sine[2534]=1009;
		sine[2535]=1011;
		sine[2536]=1005;
		sine[2537]=1007;
		sine[2538]=1001;
		sine[2539]=1003;
		sine[2540]=997;
		sine[2541]=999;
		sine[2542]=993;
		sine[2543]=995;
		sine[2544]=989;
		sine[2545]=991;
		sine[2546]=985;
		sine[2547]=987;
		sine[2548]=982;
		sine[2549]=984;
		sine[2550]=978;
		sine[2551]=980;
		sine[2552]=974;
		sine[2553]=976;
		sine[2554]=970;
		sine[2555]=972;
		sine[2556]=966;
		sine[2557]=968;
		sine[2558]=962;
		sine[2559]=964;
		sine[2560]=959;
		sine[2561]=961;
		sine[2562]=955;
		sine[2563]=957;
		sine[2564]=951;
		sine[2565]=953;
		sine[2566]=947;
		sine[2567]=949;
		sine[2568]=944;
		sine[2569]=945;
		sine[2570]=940;
		sine[2571]=942;
		sine[2572]=936;
		sine[2573]=938;
		sine[2574]=932;
		sine[2575]=934;
		sine[2576]=929;
		sine[2577]=931;
		sine[2578]=925;
		sine[2579]=927;
		sine[2580]=921;
		sine[2581]=923;
		sine[2582]=918;
		sine[2583]=920;
		sine[2584]=914;
		sine[2585]=916;
		sine[2586]=910;
		sine[2587]=912;
		sine[2588]=907;
		sine[2589]=909;
		sine[2590]=903;
		sine[2591]=905;
		sine[2592]=900;
		sine[2593]=901;
		sine[2594]=896;
		sine[2595]=898;
		sine[2596]=892;
		sine[2597]=894;
		sine[2598]=889;
		sine[2599]=891;
		sine[2600]=885;
		sine[2601]=887;
		sine[2602]=882;
		sine[2603]=883;
		sine[2604]=878;
		sine[2605]=880;
		sine[2606]=875;
		sine[2607]=876;
		sine[2608]=871;
		sine[2609]=873;
		sine[2610]=868;
		sine[2611]=869;
		sine[2612]=864;
		sine[2613]=866;
		sine[2614]=861;
		sine[2615]=862;
		sine[2616]=857;
		sine[2617]=859;
		sine[2618]=854;
		sine[2619]=856;
		sine[2620]=850;
		sine[2621]=852;
		sine[2622]=847;
		sine[2623]=849;
		sine[2624]=844;
		sine[2625]=845;
		sine[2626]=840;
		sine[2627]=842;
		sine[2628]=837;
		sine[2629]=838;
		sine[2630]=833;
		sine[2631]=835;
		sine[2632]=830;
		sine[2633]=832;
		sine[2634]=827;
		sine[2635]=828;
		sine[2636]=823;
		sine[2637]=825;
		sine[2638]=820;
		sine[2639]=822;
		sine[2640]=817;
		sine[2641]=818;
		sine[2642]=813;
		sine[2643]=815;
		sine[2644]=810;
		sine[2645]=812;
		sine[2646]=807;
		sine[2647]=809;
		sine[2648]=804;
		sine[2649]=805;
		sine[2650]=800;
		sine[2651]=802;
		sine[2652]=797;
		sine[2653]=799;
		sine[2654]=794;
		sine[2655]=796;
		sine[2656]=791;
		sine[2657]=792;
		sine[2658]=788;
		sine[2659]=789;
		sine[2660]=784;
		sine[2661]=786;
		sine[2662]=781;
		sine[2663]=783;
		sine[2664]=778;
		sine[2665]=780;
		sine[2666]=775;
		sine[2667]=777;
		sine[2668]=772;
		sine[2669]=773;
		sine[2670]=769;
		sine[2671]=770;
		sine[2672]=766;
		sine[2673]=767;
		sine[2674]=763;
		sine[2675]=764;
		sine[2676]=760;
		sine[2677]=761;
		sine[2678]=756;
		sine[2679]=758;
		sine[2680]=753;
		sine[2681]=755;
		sine[2682]=750;
		sine[2683]=752;
		sine[2684]=747;
		sine[2685]=749;
		sine[2686]=744;
		sine[2687]=746;
		sine[2688]=741;
		sine[2689]=743;
		sine[2690]=738;
		sine[2691]=740;
		sine[2692]=736;
		sine[2693]=737;
		sine[2694]=733;
		sine[2695]=734;
		sine[2696]=730;
		sine[2697]=731;
		sine[2698]=727;
		sine[2699]=728;
		sine[2700]=724;
		sine[2701]=725;
		sine[2702]=721;
		sine[2703]=722;
		sine[2704]=718;
		sine[2705]=720;
		sine[2706]=715;
		sine[2707]=717;
		sine[2708]=712;
		sine[2709]=714;
		sine[2710]=710;
		sine[2711]=711;
		sine[2712]=707;
		sine[2713]=708;
		sine[2714]=704;
		sine[2715]=705;
		sine[2716]=701;
		sine[2717]=703;
		sine[2718]=698;
		sine[2719]=700;
		sine[2720]=696;
		sine[2721]=697;
		sine[2722]=693;
		sine[2723]=694;
		sine[2724]=690;
		sine[2725]=691;
		sine[2726]=687;
		sine[2727]=689;
		sine[2728]=685;
		sine[2729]=686;
		sine[2730]=682;
		sine[2731]=683;
		sine[2732]=679;
		sine[2733]=681;
		sine[2734]=677;
		sine[2735]=678;
		sine[2736]=674;
		sine[2737]=675;
		sine[2738]=671;
		sine[2739]=673;
		sine[2740]=669;
		sine[2741]=670;
		sine[2742]=666;
		sine[2743]=667;
		sine[2744]=664;
		sine[2745]=665;
		sine[2746]=661;
		sine[2747]=662;
		sine[2748]=658;
		sine[2749]=660;
		sine[2750]=656;
		sine[2751]=657;
		sine[2752]=653;
		sine[2753]=655;
		sine[2754]=651;
		sine[2755]=652;
		sine[2756]=648;
		sine[2757]=650;
		sine[2758]=646;
		sine[2759]=647;
		sine[2760]=643;
		sine[2761]=645;
		sine[2762]=641;
		sine[2763]=642;
		sine[2764]=638;
		sine[2765]=640;
		sine[2766]=636;
		sine[2767]=637;
		sine[2768]=634;
		sine[2769]=635;
		sine[2770]=631;
		sine[2771]=632;
		sine[2772]=629;
		sine[2773]=630;
		sine[2774]=626;
		sine[2775]=628;
		sine[2776]=624;
		sine[2777]=625;
		sine[2778]=622;
		sine[2779]=623;
		sine[2780]=619;
		sine[2781]=621;
		sine[2782]=617;
		sine[2783]=618;
		sine[2784]=615;
		sine[2785]=616;
		sine[2786]=613;
		sine[2787]=614;
		sine[2788]=610;
		sine[2789]=611;
		sine[2790]=608;
		sine[2791]=609;
		sine[2792]=606;
		sine[2793]=607;
		sine[2794]=604;
		sine[2795]=605;
		sine[2796]=601;
		sine[2797]=603;
		sine[2798]=599;
		sine[2799]=600;
		sine[2800]=597;
		sine[2801]=598;
		sine[2802]=595;
		sine[2803]=596;
		sine[2804]=593;
		sine[2805]=594;
		sine[2806]=591;
		sine[2807]=592;
		sine[2808]=588;
		sine[2809]=590;
		sine[2810]=586;
		sine[2811]=587;
		sine[2812]=584;
		sine[2813]=585;
		sine[2814]=582;
		sine[2815]=583;
		sine[2816]=580;
		sine[2817]=581;
		sine[2818]=578;
		sine[2819]=579;
		sine[2820]=576;
		sine[2821]=577;
		sine[2822]=574;
		sine[2823]=575;
		sine[2824]=572;
		sine[2825]=573;
		sine[2826]=570;
		sine[2827]=571;
		sine[2828]=568;
		sine[2829]=569;
		sine[2830]=566;
		sine[2831]=567;
		sine[2832]=564;
		sine[2833]=565;
		sine[2834]=562;
		sine[2835]=563;
		sine[2836]=560;
		sine[2837]=561;
		sine[2838]=559;
		sine[2839]=560;
		sine[2840]=557;
		sine[2841]=558;
		sine[2842]=555;
		sine[2843]=556;
		sine[2844]=553;
		sine[2845]=554;
		sine[2846]=551;
		sine[2847]=552;
		sine[2848]=549;
		sine[2849]=550;
		sine[2850]=548;
		sine[2851]=548;
		sine[2852]=546;
		sine[2853]=547;
		sine[2854]=544;
		sine[2855]=545;
		sine[2856]=542;
		sine[2857]=543;
		sine[2858]=541;
		sine[2859]=541;
		sine[2860]=539;
		sine[2861]=540;
		sine[2862]=537;
		sine[2863]=538;
		sine[2864]=535;
		sine[2865]=536;
		sine[2866]=534;
		sine[2867]=535;
		sine[2868]=532;
		sine[2869]=533;
		sine[2870]=531;
		sine[2871]=531;
		sine[2872]=529;
		sine[2873]=530;
		sine[2874]=527;
		sine[2875]=528;
		sine[2876]=526;
		sine[2877]=527;
		sine[2878]=524;
		sine[2879]=525;
		sine[2880]=523;
		sine[2881]=523;
		sine[2882]=521;
		sine[2883]=522;
		sine[2884]=520;
		sine[2885]=520;
		sine[2886]=518;
		sine[2887]=519;
		sine[2888]=517;
		sine[2889]=517;
		sine[2890]=515;
		sine[2891]=516;
		sine[2892]=514;
		sine[2893]=514;
		sine[2894]=512;
		sine[2895]=513;
		sine[2896]=511;
		sine[2897]=511;
		sine[2898]=509;
		sine[2899]=510;
		sine[2900]=508;
		sine[2901]=509;
		sine[2902]=506;
		sine[2903]=507;
		sine[2904]=505;
		sine[2905]=506;
		sine[2906]=504;
		sine[2907]=504;
		sine[2908]=502;
		sine[2909]=503;
		sine[2910]=501;
		sine[2911]=502;
		sine[2912]=500;
		sine[2913]=500;
		sine[2914]=499;
		sine[2915]=499;
		sine[2916]=497;
		sine[2917]=498;
		sine[2918]=496;
		sine[2919]=497;
		sine[2920]=495;
		sine[2921]=495;
		sine[2922]=494;
		sine[2923]=494;
		sine[2924]=492;
		sine[2925]=493;
		sine[2926]=491;
		sine[2927]=492;
		sine[2928]=490;
		sine[2929]=491;
		sine[2930]=489;
		sine[2931]=489;
		sine[2932]=488;
		sine[2933]=488;
		sine[2934]=487;
		sine[2935]=487;
		sine[2936]=485;
		sine[2937]=486;
		sine[2938]=484;
		sine[2939]=485;
		sine[2940]=483;
		sine[2941]=484;
		sine[2942]=482;
		sine[2943]=483;
		sine[2944]=481;
		sine[2945]=482;
		sine[2946]=480;
		sine[2947]=481;
		sine[2948]=479;
		sine[2949]=480;
		sine[2950]=478;
		sine[2951]=479;
		sine[2952]=477;
		sine[2953]=478;
		sine[2954]=476;
		sine[2955]=477;
		sine[2956]=475;
		sine[2957]=476;
		sine[2958]=474;
		sine[2959]=475;
		sine[2960]=473;
		sine[2961]=474;
		sine[2962]=472;
		sine[2963]=473;
		sine[2964]=472;
		sine[2965]=472;
		sine[2966]=471;
		sine[2967]=471;
		sine[2968]=470;
		sine[2969]=470;
		sine[2970]=469;
		sine[2971]=469;
		sine[2972]=468;
		sine[2973]=469;
		sine[2974]=467;
		sine[2975]=468;
		sine[2976]=467;
		sine[2977]=467;
		sine[2978]=466;
		sine[2979]=466;
		sine[2980]=465;
		sine[2981]=465;
		sine[2982]=464;
		sine[2983]=465;
		sine[2984]=464;
		sine[2985]=464;
		sine[2986]=463;
		sine[2987]=463;
		sine[2988]=462;
		sine[2989]=463;
		sine[2990]=461;
		sine[2991]=462;
		sine[2992]=461;
		sine[2993]=461;
		sine[2994]=460;
		sine[2995]=461;
		sine[2996]=460;
		sine[2997]=460;
		sine[2998]=459;
		sine[2999]=459;
		sine[3000]=458;
		sine[3001]=459;
		sine[3002]=458;
		sine[3003]=458;
		sine[3004]=457;
		sine[3005]=458;
		sine[3006]=457;
		sine[3007]=457;
		sine[3008]=456;
		sine[3009]=456;
		sine[3010]=456;
		sine[3011]=456;
		sine[3012]=455;
		sine[3013]=455;
		sine[3014]=455;
		sine[3015]=455;
		sine[3016]=454;
		sine[3017]=454;
		sine[3018]=454;
		sine[3019]=454;
		sine[3020]=453;
		sine[3021]=454;
		sine[3022]=453;
		sine[3023]=453;
		sine[3024]=453;
		sine[3025]=453;
		sine[3026]=452;
		sine[3027]=452;
		sine[3028]=452;
		sine[3029]=452;
		sine[3030]=451;
		sine[3031]=452;
		sine[3032]=451;
		sine[3033]=451;
		sine[3034]=451;
		sine[3035]=451;
		sine[3036]=451;
		sine[3037]=451;
		sine[3038]=450;
		sine[3039]=450;
		sine[3040]=450;
		sine[3041]=450;
		sine[3042]=450;
		sine[3043]=450;
		sine[3044]=450;
		sine[3045]=450;
		sine[3046]=449;
		sine[3047]=449;
		sine[3048]=449;
		sine[3049]=449;
		sine[3050]=449;
		sine[3051]=449;
		sine[3052]=449;
		sine[3053]=449;
		sine[3054]=449;
		sine[3055]=449;
		sine[3056]=448;
		sine[3057]=449;
		sine[3058]=448;
		sine[3059]=448;
		sine[3060]=448;
		sine[3061]=448;
		sine[3062]=448;
		sine[3063]=448;
		sine[3064]=448;
		sine[3065]=448;
		sine[3066]=448;
		sine[3067]=448;
		sine[3068]=448;
		sine[3069]=448;
		sine[3070]=448;
		sine[3071]=448;
		sine[3072]=448;
		sine[3073]=448;
		sine[3074]=448;
		sine[3075]=448;
		sine[3076]=448;
		sine[3077]=448;
		sine[3078]=448;
		sine[3079]=448;
		sine[3080]=448;
		sine[3081]=448;
		sine[3082]=448;
		sine[3083]=448;
		sine[3084]=448;
		sine[3085]=448;
		sine[3086]=448;
		sine[3087]=448;
		sine[3088]=449;
		sine[3089]=449;
		sine[3090]=449;
		sine[3091]=449;
		sine[3092]=449;
		sine[3093]=449;
		sine[3094]=449;
		sine[3095]=449;
		sine[3096]=449;
		sine[3097]=449;
		sine[3098]=450;
		sine[3099]=449;
		sine[3100]=450;
		sine[3101]=450;
		sine[3102]=450;
		sine[3103]=450;
		sine[3104]=450;
		sine[3105]=450;
		sine[3106]=451;
		sine[3107]=450;
		sine[3108]=451;
		sine[3109]=451;
		sine[3110]=451;
		sine[3111]=451;
		sine[3112]=451;
		sine[3113]=451;
		sine[3114]=452;
		sine[3115]=452;
		sine[3116]=452;
		sine[3117]=452;
		sine[3118]=453;
		sine[3119]=452;
		sine[3120]=453;
		sine[3121]=453;
		sine[3122]=453;
		sine[3123]=453;
		sine[3124]=454;
		sine[3125]=454;
		sine[3126]=454;
		sine[3127]=454;
		sine[3128]=455;
		sine[3129]=454;
		sine[3130]=455;
		sine[3131]=455;
		sine[3132]=456;
		sine[3133]=455;
		sine[3134]=456;
		sine[3135]=456;
		sine[3136]=457;
		sine[3137]=456;
		sine[3138]=457;
		sine[3139]=457;
		sine[3140]=458;
		sine[3141]=458;
		sine[3142]=458;
		sine[3143]=458;
		sine[3144]=459;
		sine[3145]=459;
		sine[3146]=460;
		sine[3147]=459;
		sine[3148]=460;
		sine[3149]=460;
		sine[3150]=461;
		sine[3151]=461;
		sine[3152]=461;
		sine[3153]=461;
		sine[3154]=462;
		sine[3155]=462;
		sine[3156]=463;
		sine[3157]=463;
		sine[3158]=464;
		sine[3159]=463;
		sine[3160]=464;
		sine[3161]=464;
		sine[3162]=465;
		sine[3163]=465;
		sine[3164]=466;
		sine[3165]=465;
		sine[3166]=467;
		sine[3167]=466;
		sine[3168]=467;
		sine[3169]=467;
		sine[3170]=468;
		sine[3171]=468;
		sine[3172]=469;
		sine[3173]=469;
		sine[3174]=470;
		sine[3175]=469;
		sine[3176]=471;
		sine[3177]=470;
		sine[3178]=472;
		sine[3179]=471;
		sine[3180]=472;
		sine[3181]=472;
		sine[3182]=473;
		sine[3183]=473;
		sine[3184]=474;
		sine[3185]=474;
		sine[3186]=475;
		sine[3187]=475;
		sine[3188]=476;
		sine[3189]=476;
		sine[3190]=477;
		sine[3191]=477;
		sine[3192]=478;
		sine[3193]=478;
		sine[3194]=479;
		sine[3195]=479;
		sine[3196]=480;
		sine[3197]=480;
		sine[3198]=481;
		sine[3199]=481;
		sine[3200]=482;
		sine[3201]=482;
		sine[3202]=483;
		sine[3203]=483;
		sine[3204]=484;
		sine[3205]=484;
		sine[3206]=485;
		sine[3207]=485;
		sine[3208]=487;
		sine[3209]=486;
		sine[3210]=488;
		sine[3211]=487;
		sine[3212]=489;
		sine[3213]=488;
		sine[3214]=490;
		sine[3215]=489;
		sine[3216]=491;
		sine[3217]=491;
		sine[3218]=492;
		sine[3219]=492;
		sine[3220]=494;
		sine[3221]=493;
		sine[3222]=495;
		sine[3223]=494;
		sine[3224]=496;
		sine[3225]=495;
		sine[3226]=497;
		sine[3227]=497;
		sine[3228]=499;
		sine[3229]=498;
		sine[3230]=500;
		sine[3231]=499;
		sine[3232]=501;
		sine[3233]=500;
		sine[3234]=502;
		sine[3235]=502;
		sine[3236]=504;
		sine[3237]=503;
		sine[3238]=505;
		sine[3239]=504;
		sine[3240]=506;
		sine[3241]=506;
		sine[3242]=508;
		sine[3243]=507;
		sine[3244]=509;
		sine[3245]=509;
		sine[3246]=511;
		sine[3247]=510;
		sine[3248]=512;
		sine[3249]=511;
		sine[3250]=514;
		sine[3251]=513;
		sine[3252]=515;
		sine[3253]=514;
		sine[3254]=517;
		sine[3255]=516;
		sine[3256]=518;
		sine[3257]=517;
		sine[3258]=520;
		sine[3259]=519;
		sine[3260]=521;
		sine[3261]=520;
		sine[3262]=523;
		sine[3263]=522;
		sine[3264]=524;
		sine[3265]=523;
		sine[3266]=526;
		sine[3267]=525;
		sine[3268]=527;
		sine[3269]=527;
		sine[3270]=529;
		sine[3271]=528;
		sine[3272]=531;
		sine[3273]=530;
		sine[3274]=532;
		sine[3275]=531;
		sine[3276]=534;
		sine[3277]=533;
		sine[3278]=535;
		sine[3279]=535;
		sine[3280]=537;
		sine[3281]=536;
		sine[3282]=539;
		sine[3283]=538;
		sine[3284]=541;
		sine[3285]=540;
		sine[3286]=542;
		sine[3287]=541;
		sine[3288]=544;
		sine[3289]=543;
		sine[3290]=546;
		sine[3291]=545;
		sine[3292]=548;
		sine[3293]=547;
		sine[3294]=549;
		sine[3295]=548;
		sine[3296]=551;
		sine[3297]=550;
		sine[3298]=553;
		sine[3299]=552;
		sine[3300]=555;
		sine[3301]=554;
		sine[3302]=557;
		sine[3303]=556;
		sine[3304]=559;
		sine[3305]=558;
		sine[3306]=560;
		sine[3307]=560;
		sine[3308]=562;
		sine[3309]=561;
		sine[3310]=564;
		sine[3311]=563;
		sine[3312]=566;
		sine[3313]=565;
		sine[3314]=568;
		sine[3315]=567;
		sine[3316]=570;
		sine[3317]=569;
		sine[3318]=572;
		sine[3319]=571;
		sine[3320]=574;
		sine[3321]=573;
		sine[3322]=576;
		sine[3323]=575;
		sine[3324]=578;
		sine[3325]=577;
		sine[3326]=580;
		sine[3327]=579;
		sine[3328]=582;
		sine[3329]=581;
		sine[3330]=584;
		sine[3331]=583;
		sine[3332]=586;
		sine[3333]=585;
		sine[3334]=588;
		sine[3335]=587;
		sine[3336]=591;
		sine[3337]=590;
		sine[3338]=593;
		sine[3339]=592;
		sine[3340]=595;
		sine[3341]=594;
		sine[3342]=597;
		sine[3343]=596;
		sine[3344]=599;
		sine[3345]=598;
		sine[3346]=601;
		sine[3347]=600;
		sine[3348]=604;
		sine[3349]=603;
		sine[3350]=606;
		sine[3351]=605;
		sine[3352]=608;
		sine[3353]=607;
		sine[3354]=610;
		sine[3355]=609;
		sine[3356]=613;
		sine[3357]=611;
		sine[3358]=615;
		sine[3359]=614;
		sine[3360]=617;
		sine[3361]=616;
		sine[3362]=619;
		sine[3363]=618;
		sine[3364]=622;
		sine[3365]=621;
		sine[3366]=624;
		sine[3367]=623;
		sine[3368]=626;
		sine[3369]=625;
		sine[3370]=629;
		sine[3371]=628;
		sine[3372]=631;
		sine[3373]=630;
		sine[3374]=634;
		sine[3375]=632;
		sine[3376]=636;
		sine[3377]=635;
		sine[3378]=638;
		sine[3379]=637;
		sine[3380]=641;
		sine[3381]=640;
		sine[3382]=643;
		sine[3383]=642;
		sine[3384]=646;
		sine[3385]=645;
		sine[3386]=648;
		sine[3387]=647;
		sine[3388]=651;
		sine[3389]=650;
		sine[3390]=653;
		sine[3391]=652;
		sine[3392]=656;
		sine[3393]=655;
		sine[3394]=658;
		sine[3395]=657;
		sine[3396]=661;
		sine[3397]=660;
		sine[3398]=664;
		sine[3399]=662;
		sine[3400]=666;
		sine[3401]=665;
		sine[3402]=669;
		sine[3403]=667;
		sine[3404]=671;
		sine[3405]=670;
		sine[3406]=674;
		sine[3407]=673;
		sine[3408]=677;
		sine[3409]=675;
		sine[3410]=679;
		sine[3411]=678;
		sine[3412]=682;
		sine[3413]=681;
		sine[3414]=685;
		sine[3415]=683;
		sine[3416]=687;
		sine[3417]=686;
		sine[3418]=690;
		sine[3419]=689;
		sine[3420]=693;
		sine[3421]=691;
		sine[3422]=696;
		sine[3423]=694;
		sine[3424]=698;
		sine[3425]=697;
		sine[3426]=701;
		sine[3427]=700;
		sine[3428]=704;
		sine[3429]=703;
		sine[3430]=707;
		sine[3431]=705;
		sine[3432]=710;
		sine[3433]=708;
		sine[3434]=712;
		sine[3435]=711;
		sine[3436]=715;
		sine[3437]=714;
		sine[3438]=718;
		sine[3439]=717;
		sine[3440]=721;
		sine[3441]=720;
		sine[3442]=724;
		sine[3443]=722;
		sine[3444]=727;
		sine[3445]=725;
		sine[3446]=730;
		sine[3447]=728;
		sine[3448]=733;
		sine[3449]=731;
		sine[3450]=736;
		sine[3451]=734;
		sine[3452]=738;
		sine[3453]=737;
		sine[3454]=741;
		sine[3455]=740;
		sine[3456]=744;
		sine[3457]=743;
		sine[3458]=747;
		sine[3459]=746;
		sine[3460]=750;
		sine[3461]=749;
		sine[3462]=753;
		sine[3463]=752;
		sine[3464]=756;
		sine[3465]=755;
		sine[3466]=760;
		sine[3467]=758;
		sine[3468]=763;
		sine[3469]=761;
		sine[3470]=766;
		sine[3471]=764;
		sine[3472]=769;
		sine[3473]=767;
		sine[3474]=772;
		sine[3475]=770;
		sine[3476]=775;
		sine[3477]=773;
		sine[3478]=778;
		sine[3479]=777;
		sine[3480]=781;
		sine[3481]=780;
		sine[3482]=784;
		sine[3483]=783;
		sine[3484]=788;
		sine[3485]=786;
		sine[3486]=791;
		sine[3487]=789;
		sine[3488]=794;
		sine[3489]=792;
		sine[3490]=797;
		sine[3491]=796;
		sine[3492]=800;
		sine[3493]=799;
		sine[3494]=804;
		sine[3495]=802;
		sine[3496]=807;
		sine[3497]=805;
		sine[3498]=810;
		sine[3499]=809;
		sine[3500]=813;
		sine[3501]=812;
		sine[3502]=817;
		sine[3503]=815;
		sine[3504]=820;
		sine[3505]=818;
		sine[3506]=823;
		sine[3507]=822;
		sine[3508]=827;
		sine[3509]=825;
		sine[3510]=830;
		sine[3511]=828;
		sine[3512]=833;
		sine[3513]=832;
		sine[3514]=837;
		sine[3515]=835;
		sine[3516]=840;
		sine[3517]=838;
		sine[3518]=844;
		sine[3519]=842;
		sine[3520]=847;
		sine[3521]=845;
		sine[3522]=850;
		sine[3523]=849;
		sine[3524]=854;
		sine[3525]=852;
		sine[3526]=857;
		sine[3527]=856;
		sine[3528]=861;
		sine[3529]=859;
		sine[3530]=864;
		sine[3531]=862;
		sine[3532]=868;
		sine[3533]=866;
		sine[3534]=871;
		sine[3535]=869;
		sine[3536]=875;
		sine[3537]=873;
		sine[3538]=878;
		sine[3539]=876;
		sine[3540]=882;
		sine[3541]=880;
		sine[3542]=885;
		sine[3543]=883;
		sine[3544]=889;
		sine[3545]=887;
		sine[3546]=892;
		sine[3547]=891;
		sine[3548]=896;
		sine[3549]=894;
		sine[3550]=900;
		sine[3551]=898;
		sine[3552]=903;
		sine[3553]=901;
		sine[3554]=907;
		sine[3555]=905;
		sine[3556]=910;
		sine[3557]=909;
		sine[3558]=914;
		sine[3559]=912;
		sine[3560]=918;
		sine[3561]=916;
		sine[3562]=921;
		sine[3563]=920;
		sine[3564]=925;
		sine[3565]=923;
		sine[3566]=929;
		sine[3567]=927;
		sine[3568]=932;
		sine[3569]=931;
		sine[3570]=936;
		sine[3571]=934;
		sine[3572]=940;
		sine[3573]=938;
		sine[3574]=944;
		sine[3575]=942;
		sine[3576]=947;
		sine[3577]=945;
		sine[3578]=951;
		sine[3579]=949;
		sine[3580]=955;
		sine[3581]=953;
		sine[3582]=959;
		sine[3583]=957;
		sine[3584]=962;
		sine[3585]=961;
		sine[3586]=966;
		sine[3587]=964;
		sine[3588]=970;
		sine[3589]=968;
		sine[3590]=974;
		sine[3591]=972;
		sine[3592]=978;
		sine[3593]=976;
		sine[3594]=982;
		sine[3595]=980;
		sine[3596]=985;
		sine[3597]=984;
		sine[3598]=989;
		sine[3599]=987;
		sine[3600]=993;
		sine[3601]=991;
		sine[3602]=997;
		sine[3603]=995;
		sine[3604]=1001;
		sine[3605]=999;
		sine[3606]=1005;
		sine[3607]=1003;
		sine[3608]=1009;
		sine[3609]=1007;
		sine[3610]=1013;
		sine[3611]=1011;
		sine[3612]=1017;
		sine[3613]=1015;
		sine[3614]=1021;
		sine[3615]=1019;
		sine[3616]=1025;
		sine[3617]=1023;
		sine[3618]=1029;
		sine[3619]=1027;
		sine[3620]=1033;
		sine[3621]=1031;
		sine[3622]=1037;
		sine[3623]=1035;
		sine[3624]=1041;
		sine[3625]=1039;
		sine[3626]=1045;
		sine[3627]=1043;
		sine[3628]=1049;
		sine[3629]=1047;
		sine[3630]=1053;
		sine[3631]=1051;
		sine[3632]=1057;
		sine[3633]=1055;
		sine[3634]=1061;
		sine[3635]=1059;
		sine[3636]=1065;
		sine[3637]=1063;
		sine[3638]=1069;
		sine[3639]=1067;
		sine[3640]=1073;
		sine[3641]=1071;
		sine[3642]=1077;
		sine[3643]=1075;
		sine[3644]=1082;
		sine[3645]=1080;
		sine[3646]=1086;
		sine[3647]=1084;
		sine[3648]=1090;
		sine[3649]=1088;
		sine[3650]=1094;
		sine[3651]=1092;
		sine[3652]=1098;
		sine[3653]=1096;
		sine[3654]=1102;
		sine[3655]=1100;
		sine[3656]=1107;
		sine[3657]=1104;
		sine[3658]=1111;
		sine[3659]=1109;
		sine[3660]=1115;
		sine[3661]=1113;
		sine[3662]=1119;
		sine[3663]=1117;
		sine[3664]=1123;
		sine[3665]=1121;
		sine[3666]=1128;
		sine[3667]=1126;
		sine[3668]=1132;
		sine[3669]=1130;
		sine[3670]=1136;
		sine[3671]=1134;
		sine[3672]=1140;
		sine[3673]=1138;
		sine[3674]=1145;
		sine[3675]=1143;
		sine[3676]=1149;
		sine[3677]=1147;
		sine[3678]=1153;
		sine[3679]=1151;
		sine[3680]=1158;
		sine[3681]=1156;
		sine[3682]=1162;
		sine[3683]=1160;
		sine[3684]=1166;
		sine[3685]=1164;
		sine[3686]=1171;
		sine[3687]=1169;
		sine[3688]=1175;
		sine[3689]=1173;
		sine[3690]=1179;
		sine[3691]=1177;
		sine[3692]=1184;
		sine[3693]=1182;
		sine[3694]=1188;
		sine[3695]=1186;
		sine[3696]=1193;
		sine[3697]=1190;
		sine[3698]=1197;
		sine[3699]=1195;
		sine[3700]=1201;
		sine[3701]=1199;
		sine[3702]=1206;
		sine[3703]=1204;
		sine[3704]=1210;
		sine[3705]=1208;
		sine[3706]=1215;
		sine[3707]=1212;
		sine[3708]=1219;
		sine[3709]=1217;
		sine[3710]=1224;
		sine[3711]=1221;
		sine[3712]=1228;
		sine[3713]=1226;
		sine[3714]=1232;
		sine[3715]=1230;
		sine[3716]=1237;
		sine[3717]=1235;
		sine[3718]=1241;
		sine[3719]=1239;
		sine[3720]=1246;
		sine[3721]=1244;
		sine[3722]=1250;
		sine[3723]=1248;
		sine[3724]=1255;
		sine[3725]=1253;
		sine[3726]=1259;
		sine[3727]=1257;
		sine[3728]=1264;
		sine[3729]=1262;
		sine[3730]=1269;
		sine[3731]=1266;
		sine[3732]=1273;
		sine[3733]=1271;
		sine[3734]=1278;
		sine[3735]=1275;
		sine[3736]=1282;
		sine[3737]=1280;
		sine[3738]=1287;
		sine[3739]=1285;
		sine[3740]=1291;
		sine[3741]=1289;
		sine[3742]=1296;
		sine[3743]=1294;
		sine[3744]=1301;
		sine[3745]=1298;
		sine[3746]=1305;
		sine[3747]=1303;
		sine[3748]=1310;
		sine[3749]=1308;
		sine[3750]=1314;
		sine[3751]=1312;
		sine[3752]=1319;
		sine[3753]=1317;
		sine[3754]=1324;
		sine[3755]=1321;
		sine[3756]=1328;
		sine[3757]=1326;
		sine[3758]=1333;
		sine[3759]=1331;
		sine[3760]=1338;
		sine[3761]=1335;
		sine[3762]=1342;
		sine[3763]=1340;
		sine[3764]=1347;
		sine[3765]=1345;
		sine[3766]=1352;
		sine[3767]=1349;
		sine[3768]=1357;
		sine[3769]=1354;
		sine[3770]=1361;
		sine[3771]=1359;
		sine[3772]=1366;
		sine[3773]=1364;
		sine[3774]=1371;
		sine[3775]=1368;
		sine[3776]=1375;
		sine[3777]=1373;
		sine[3778]=1380;
		sine[3779]=1378;
		sine[3780]=1385;
		sine[3781]=1383;
		sine[3782]=1390;
		sine[3783]=1387;
		sine[3784]=1394;
		sine[3785]=1392;
		sine[3786]=1399;
		sine[3787]=1397;
		sine[3788]=1404;
		sine[3789]=1402;
		sine[3790]=1409;
		sine[3791]=1406;
		sine[3792]=1414;
		sine[3793]=1411;
		sine[3794]=1418;
		sine[3795]=1416;
		sine[3796]=1423;
		sine[3797]=1421;
		sine[3798]=1428;
		sine[3799]=1426;
		sine[3800]=1433;
		sine[3801]=1430;
		sine[3802]=1438;
		sine[3803]=1435;
		sine[3804]=1443;
		sine[3805]=1440;
		sine[3806]=1447;
		sine[3807]=1445;
		sine[3808]=1452;
		sine[3809]=1450;
		sine[3810]=1457;
		sine[3811]=1455;
		sine[3812]=1462;
		sine[3813]=1459;
		sine[3814]=1467;
		sine[3815]=1464;
		sine[3816]=1472;
		sine[3817]=1469;
		sine[3818]=1477;
		sine[3819]=1474;
		sine[3820]=1481;
		sine[3821]=1479;
		sine[3822]=1486;
		sine[3823]=1484;
		sine[3824]=1491;
		sine[3825]=1489;
		sine[3826]=1496;
		sine[3827]=1494;
		sine[3828]=1501;
		sine[3829]=1499;
		sine[3830]=1506;
		sine[3831]=1504;
		sine[3832]=1511;
		sine[3833]=1509;
		sine[3834]=1516;
		sine[3835]=1513;
		sine[3836]=1521;
		sine[3837]=1518;
		sine[3838]=1526;
		sine[3839]=1523;
		sine[3840]=1531;
		sine[3841]=1528;
		sine[3842]=1536;
		sine[3843]=1533;
		sine[3844]=1541;
		sine[3845]=1538;
		sine[3846]=1546;
		sine[3847]=1543;
		sine[3848]=1551;
		sine[3849]=1548;
		sine[3850]=1556;
		sine[3851]=1553;
		sine[3852]=1561;
		sine[3853]=1558;
		sine[3854]=1566;
		sine[3855]=1563;
		sine[3856]=1571;
		sine[3857]=1568;
		sine[3858]=1576;
		sine[3859]=1573;
		sine[3860]=1581;
		sine[3861]=1578;
		sine[3862]=1586;
		sine[3863]=1583;
		sine[3864]=1591;
		sine[3865]=1588;
		sine[3866]=1596;
		sine[3867]=1593;
		sine[3868]=1601;
		sine[3869]=1598;
		sine[3870]=1606;
		sine[3871]=1603;
		sine[3872]=1611;
		sine[3873]=1608;
		sine[3874]=1616;
		sine[3875]=1614;
		sine[3876]=1621;
		sine[3877]=1619;
		sine[3878]=1626;
		sine[3879]=1624;
		sine[3880]=1631;
		sine[3881]=1629;
		sine[3882]=1636;
		sine[3883]=1634;
		sine[3884]=1641;
		sine[3885]=1639;
		sine[3886]=1647;
		sine[3887]=1644;
		sine[3888]=1652;
		sine[3889]=1649;
		sine[3890]=1657;
		sine[3891]=1654;
		sine[3892]=1662;
		sine[3893]=1659;
		sine[3894]=1667;
		sine[3895]=1664;
		sine[3896]=1672;
		sine[3897]=1669;
		sine[3898]=1677;
		sine[3899]=1675;
		sine[3900]=1682;
		sine[3901]=1680;
		sine[3902]=1687;
		sine[3903]=1685;
		sine[3904]=1693;
		sine[3905]=1690;
		sine[3906]=1698;
		sine[3907]=1695;
		sine[3908]=1703;
		sine[3909]=1700;
		sine[3910]=1708;
		sine[3911]=1705;
		sine[3912]=1713;
		sine[3913]=1711;
		sine[3914]=1718;
		sine[3915]=1716;
		sine[3916]=1723;
		sine[3917]=1721;
		sine[3918]=1729;
		sine[3919]=1726;
		sine[3920]=1734;
		sine[3921]=1731;
		sine[3922]=1739;
		sine[3923]=1736;
		sine[3924]=1744;
		sine[3925]=1742;
		sine[3926]=1749;
		sine[3927]=1747;
		sine[3928]=1755;
		sine[3929]=1752;
		sine[3930]=1760;
		sine[3931]=1757;
		sine[3932]=1765;
		sine[3933]=1762;
		sine[3934]=1770;
		sine[3935]=1768;
		sine[3936]=1775;
		sine[3937]=1773;
		sine[3938]=1781;
		sine[3939]=1778;
		sine[3940]=1786;
		sine[3941]=1783;
		sine[3942]=1791;
		sine[3943]=1788;
		sine[3944]=1796;
		sine[3945]=1794;
		sine[3946]=1801;
		sine[3947]=1799;
		sine[3948]=1807;
		sine[3949]=1804;
		sine[3950]=1812;
		sine[3951]=1809;
		sine[3952]=1817;
		sine[3953]=1815;
		sine[3954]=1822;
		sine[3955]=1820;
		sine[3956]=1828;
		sine[3957]=1825;
		sine[3958]=1833;
		sine[3959]=1830;
		sine[3960]=1838;
		sine[3961]=1836;
		sine[3962]=1843;
		sine[3963]=1841;
		sine[3964]=1849;
		sine[3965]=1846;
		sine[3966]=1854;
		sine[3967]=1851;
		sine[3968]=1859;
		sine[3969]=1857;
		sine[3970]=1864;
		sine[3971]=1862;
		sine[3972]=1870;
		sine[3973]=1867;
		sine[3974]=1875;
		sine[3975]=1872;
		sine[3976]=1880;
		sine[3977]=1878;
		sine[3978]=1886;
		sine[3979]=1883;
		sine[3980]=1891;
		sine[3981]=1888;
		sine[3982]=1896;
		sine[3983]=1894;
		sine[3984]=1901;
		sine[3985]=1899;
		sine[3986]=1907;
		sine[3987]=1904;
		sine[3988]=1912;
		sine[3989]=1909;
		sine[3990]=1917;
		sine[3991]=1915;
		sine[3992]=1923;
		sine[3993]=1920;
		sine[3994]=1928;
		sine[3995]=1925;
		sine[3996]=1933;
		sine[3997]=1931;
		sine[3998]=1939;
		sine[3999]=1936;
		sine[4000]=1944;
		sine[4001]=1941;
		sine[4002]=1949;
		sine[4003]=1947;
		sine[4004]=1955;
		sine[4005]=1952;
		sine[4006]=1960;
		sine[4007]=1957;
		sine[4008]=1965;
		sine[4009]=1962;
		sine[4010]=1970;
		sine[4011]=1968;
		sine[4012]=1976;
		sine[4013]=1973;
		sine[4014]=1981;
		sine[4015]=1978;
		sine[4016]=1986;
		sine[4017]=1984;
		sine[4018]=1992;
		sine[4019]=1989;
		sine[4020]=1997;
		sine[4021]=1994;
		sine[4022]=2002;
		sine[4023]=2000;
		sine[4024]=2008;
		sine[4025]=2005;
		sine[4026]=2013;
		sine[4027]=2010;
		sine[4028]=2018;
		sine[4029]=2016;
		sine[4030]=2024;
		sine[4031]=2021;
		sine[4032]=2029;
		sine[4033]=2026;
		sine[4034]=2034;
		sine[4035]=2032;
		sine[4036]=2040;
		sine[4037]=2037;
		sine[4038]=2045;
		sine[4039]=2043;
		sine[4040]=2051;
		sine[4041]=2048;
		sine[4042]=2056;
		sine[4043]=2053;
		sine[4044]=2061;
		sine[4045]=2059;
		sine[4046]=2067;
		sine[4047]=2064;
		sine[4048]=2072;
		sine[4049]=2069;
		sine[4050]=2077;
		sine[4051]=2075;
		sine[4052]=2083;
		sine[4053]=2080;
		sine[4054]=2088;
		sine[4055]=2085;
		sine[4056]=2093;
		sine[4057]=2091;
		sine[4058]=2099;
		sine[4059]=2096;
		sine[4060]=2104;
		sine[4061]=2101;
		sine[4062]=2109;
		sine[4063]=2107;
		sine[4064]=2115;
		sine[4065]=2112;
		sine[4066]=2120;
		sine[4067]=2117;
		sine[4068]=2126;
		sine[4069]=2123;
		sine[4070]=2131;
		sine[4071]=2128;
		sine[4072]=2136;
		sine[4073]=2134;
		sine[4074]=2142;
		sine[4075]=2139;
		sine[4076]=2147;
		sine[4077]=2144;
		sine[4078]=2152;
		sine[4079]=2150;
		sine[4080]=2158;
		sine[4081]=2155;
		sine[4082]=2163;
		sine[4083]=2160;
		sine[4084]=2168;
		sine[4085]=2166;
		sine[4086]=2174;
		sine[4087]=2171;
		sine[4088]=2179;
		sine[4089]=2177;
		sine[4090]=2185;
		sine[4091]=2182;
		sine[4092]=2190;
		sine[4093]=2187;
		sine[4094]=2195;
		sine[4095]=2193;



		//=========== static DC value ===================
		u16 dataShifted;
		for(Index = 0; Index < npoints; Index++){
			dataShifted = sine[Index]<<4;
			TxPacket[Index*2] = (u8)(dataShifted & 0xFF);
			TxPacket[Index*2+1] = (u8)(dataShifted >> 8);
		}
		//===============================================

}


/*****************************************************************************/
/**
*
* This function transmits one packet non-blockingly through the DMA engine.
*
* @param	AxiDmaInstPtr points to the DMA engine instance
*
* @return	- XST_SUCCESS if the DMA accepts the packet successfully,
*		- XST_FAILURE otherwise.
*
* @note     None.
*
******************************************************************************/
static int sendDMApacket(XAxiDma * AxiDmaInstPtr, int debug_mode){
	XAxiDma_BdRing *TxRingPtr;
	u8 *TxPacket;
	u8 Value;
	XAxiDma_Bd *BdPtr;
	int Status;
	int Index;

	TxRingPtr = XAxiDma_GetTxRing(AxiDmaInstPtr);

	/* Create pattern in the packet to transmit */
	TxPacket = (u8 *) Packet;
	//Value = TEST_START_VALUE;
	Value = 0x01;

	fillTxPacketBuffer(MAX_PKT_LEN,TxPacket);

	/* Flush the SrcBuffer before the DMA transfer, in case the Data Cache
	 * is enabled
	 */
	Xil_DCacheFlushRange((UINTPTR)TxPacket, MAX_PKT_LEN);
#ifdef __aarch64__
	Xil_DCacheFlushRange((UINTPTR)RX_BUFFER_BASE, MAX_PKT_LEN);
#endif


	/* Allocate a BD */
	Status = XAxiDma_BdRingAlloc(TxRingPtr, 1, &BdPtr);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/* Set up the BD using the information of the packet to transmit */
	Status = XAxiDma_BdSetBufAddr(BdPtr, (UINTPTR) Packet);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: Tx set buffer addr %x on BD %x failed %d\r\n",
		    (UINTPTR)Packet, (UINTPTR)BdPtr, Status);
		return XST_FAILURE;
	}

	Status = XAxiDma_BdSetLength(BdPtr, MAX_PKT_LEN, TxRingPtr->MaxTransferLen);
	if (Status != XST_SUCCESS) {
		xil_printf(" *** Error: Tx set length %d on BD %x failed %d\r\n",
		    MAX_PKT_LEN, (UINTPTR)BdPtr, Status);
		return XST_FAILURE;
	}

#if (XPAR_AXIDMA_0_SG_INCLUDE_STSCNTRL_STRM == 1)
	Status = XAxiDma_BdSetAppWord(BdPtr, XAXIDMA_LAST_APPWORD, MAX_PKT_LEN);

	/* If Set app length failed, it is not fatal */
	if (Status != XST_SUCCESS) {
		xil_printf("Set app word failed with %d\r\n", Status);
	}
#endif

	/* For single packet, both SOF and EOF are to be set
	 */
	XAxiDma_BdSetCtrl(BdPtr, XAXIDMA_BD_CTRL_TXEOF_MASK |
						XAXIDMA_BD_CTRL_TXSOF_MASK);

	XAxiDma_BdSetId(BdPtr, (UINTPTR)Packet);

	/* Give the BD to DMA to kick off the transmission. */
	Status = XAxiDma_BdRingToHw(TxRingPtr, 1, BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("to hw failed %d\r\n", Status);
		return XST_FAILURE;
	}
	return XST_SUCCESS;
}


/*
*
* This function checks data buffer after the DMA transfer is finished.
*
* @param	None
*
* @return	- XST_SUCCESS if validation is successful
*		- XST_FAILURE if validation is failure.
*
* @note		None.
*
******************************************************************************/
static int SaveData(int debug_mode)
{
	u8 *RxPacket;
	int Index = 0;
	int idx = 0;
	u8 Value;
	Xuint32 m0, m1, v0, v1;

	RxPacket = (u8 *) RX_BUFFER_BASE;
	Value = TEST_START_VALUE;

	/* Invalidate the DestBuffer before receiving the data, in case the
	 * Data Cache is enabled
	 */
#ifndef __aarch64__
	Xil_DCacheInvalidateRange((UINTPTR)RxPacket, MAX_PKT_LEN);
	Xil_DCacheInvalidateRange((Xuint32)outputDataBuffer, MAX_PKT_LEN);
	Xil_DCacheFlushRange((Xuint32)outputDataBuffer, MAX_PKT_LEN);
#endif

   idx = 0;
	for(Index = 0; Index < MAX_PKT_LEN; Index+=4) {
		m0 = ((unsigned int)RxPacket[Index+1]<<8) | (0x00FF & (unsigned int)RxPacket[Index]);
		m1 = ((unsigned int)RxPacket[Index+3]<<8) | (0x00FF & (unsigned int)RxPacket[Index+2]);
		v0 = m0 >> 2;
		v1 = m1 >> 2;
		//xil_printf("Sample: %d: %x%x\r\n",idx,v0,v1);
		outputDataBuffer[idx] = (v0 << 16) | (0x0000FFFF & v1);
		//xil_printf("Index: %d: %x\r\n",idx,outputDataBuffer[idx]);
		idx++;
	}
	numberDataSamples = idx*2;
	//xil_printf("Number of Samples: %d:\r\n",idx*2);
	return XST_SUCCESS;
}


static int receiveDMApacket(XAxiDma * AxiDmaInstPtr, int debug_mode)
{
	XAxiDma_BdRing *RxRingPtr;

	XAxiDma_Bd *BdPtr;
	int ProcessedBdCount;
	int FreeBdCount;
	int Status;


	RxRingPtr = XAxiDma_GetRxRing(AxiDmaInstPtr);

	/* Flush the SrcBuffer before the DMA transfer, in case the Data Cache
	 * is enabled
	 */
	Xil_DCacheFlushRange((UINTPTR)TX_BUFFER_BASE, MAX_PKT_LEN);

#ifdef __aarch64__
	Xil_DCacheFlushRange((UINTPTR)RX_BUFFER_BASE, MAX_PKT_LEN);
#endif
	/* Wait until the data has been received by the Rx channel */
	while ((ProcessedBdCount = XAxiDma_BdRingFromHw(RxRingPtr,
						       XAXIDMA_ALL_BDS, &BdPtr)) == 0) {
	}

	setGyroChannelControl(0x00000000);
    SaveData(0);


	/* Free all processed RX BDs for future transmission */
	Status = XAxiDma_BdRingFree(RxRingPtr, ProcessedBdCount, BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("Failed to free %d rx BDs %d\r\n",
		    ProcessedBdCount, Status);
		return XST_FAILURE;
	}

	/* Return processed BDs to RX channel so we are ready to receive new
	 * packets:
	 *    - Allocate all free RX BDs
	 *    - Pass the BDs to RX channel
	 */
	FreeBdCount = XAxiDma_BdRingGetFreeCnt(RxRingPtr);
	Status = XAxiDma_BdRingAlloc(RxRingPtr, FreeBdCount, &BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("bd alloc failed\r\n");
		return XST_FAILURE;
	}

	Status = XAxiDma_BdRingToHw(RxRingPtr, FreeBdCount, BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("Submit %d rx BDs failed %d\r\n", FreeBdCount, Status);
		return XST_FAILURE;
	}

	return XST_SUCCESS;
}


/*****************************************************************************/
/**
*
* This function waits until the DMA transaction is finished, checks data,
* and cleans up.
*
* @param	None
*
* @return	- XST_SUCCESS if DMA transfer is successful and data is correct,
*		- XST_FAILURE if fails.
*
* @note		None.
*
******************************************************************************/
static int CheckDmaResult(XAxiDma * AxiDmaInstPtr, int debug_mode, int skip_tx)
{
	XAxiDma_BdRing *TxRingPtr;
	XAxiDma_BdRing *RxRingPtr;
	XAxiDma_Bd *BdPtr;
	int ProcessedBdCount;
	int FreeBdCount;
	int Status;

	TxRingPtr = XAxiDma_GetTxRing(AxiDmaInstPtr);
	RxRingPtr = XAxiDma_GetRxRing(AxiDmaInstPtr);

	if(skip_tx == 0){
	/* Wait until the one BD TX transaction is done */
	while ((ProcessedBdCount = XAxiDma_BdRingFromHw(TxRingPtr,
						       XAXIDMA_ALL_BDS,
						       &BdPtr)) == 0) {  }

	  /* Free all processed TX BDs for future transmission */
	  Status = XAxiDma_BdRingFree(TxRingPtr, ProcessedBdCount, BdPtr);
	  if (Status != XST_SUCCESS) {
		xil_printf("Failed to free %d tx BDs %d\r\n",
		    ProcessedBdCount, Status);
		return XST_FAILURE;
	  }
	}
	/* Wait until the data has been received by the Rx channel */
	while ((ProcessedBdCount = XAxiDma_BdRingFromHw(RxRingPtr,
						       XAXIDMA_ALL_BDS, &BdPtr)) == 0) {
	}

	/* Check received data */
	if (SaveData(1) != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/* Free all processed RX BDs for future transmission */
	Status = XAxiDma_BdRingFree(RxRingPtr, ProcessedBdCount, BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("Failed to free %d rx BDs %d\r\n",
		    ProcessedBdCount, Status);
		return XST_FAILURE;
	}

	/* Return processed BDs to RX channel so we are ready to receive new
	 * packets:
	 *    - Allocate all free RX BDs
	 *    - Pass the BDs to RX channel
	 */
	FreeBdCount = XAxiDma_BdRingGetFreeCnt(RxRingPtr);
	Status = XAxiDma_BdRingAlloc(RxRingPtr, FreeBdCount, &BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("bd alloc failed\r\n");
		return XST_FAILURE;
	}

	Status = XAxiDma_BdRingToHw(RxRingPtr, FreeBdCount, BdPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("Submit %d rx BDs failed %d\r\n", FreeBdCount, Status);
		return XST_FAILURE;
	}

	return XST_SUCCESS;
}


// --------------------------------------------------------------------------
int receiveDMApackets(int num_packets){
	int i;



	for(i = 0; i < num_packets; i++){

	  Status = receiveDMApacket(&AxiDma, 0);
	  if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	  }

	}

	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	return XST_SUCCESS;
}
// --------------------------------------------------------------------------
int sendDMApackets(int num_packets){
	int i;

	for(i = 0; i < num_packets; i++){
	  Status = sendDMApacket(&AxiDma, 0);
	  if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	  }
	}
	if (Status != XST_SUCCESS) {
	  return XST_FAILURE;
	}
	return XST_SUCCESS;
}

// June 5, 2019
// this function reset the FIFO, sets the packet size
// and receives 1 packet of data by activating
// the input channel.
// The argument dictates the packet size in number of
// samples.
// The clock of the channel is now set to be the maximum
// frequency.

void acquireSamples(int packet_size){

	// reset the FIFO and the CHannels
	resetGyroTxFIFO();
	resetGyroRxFIFO();

	setGyroChannelConfiguration(0x80000000);
	setGyroChannelConfiguration(0x00000000);

	// bit 17:16 is to divide clock by 2/4/8.
	if(packet_size == 64)
	  setGyroChannelConfiguration(0x00000000);
	if(packet_size == 128)
	  setGyroChannelConfiguration(0x00001000);
	if(packet_size == 256)
	  setGyroChannelConfiguration(0x00002000);
	if(packet_size == 512)
	  setGyroChannelConfiguration(0x00003000);
	if(packet_size == 1024)
	  setGyroChannelConfiguration(0x00004000);
	if(packet_size == 2048)
	  setGyroChannelConfiguration(0x00005000);
	if(packet_size == 4096)
	  setGyroChannelConfiguration(0x00006000);
	if(packet_size == 8192)
	  setGyroChannelConfiguration(0x00007000);

	setGyroChannelControl(0x00000000);

	// activate the output and the input shift registers
	setGyroChannelControl(0x00000010);
	receiveDMApackets(1);
	setGyroChannelControl(0x00000000);

}
// -------------------------------------------------------------------
int sendPacketButton(void){
	sendDMApackets(1);
	//setGyroTxFIFOLooping();
	setGyroChannelControl(0x00000001);
	//nops(100000);
	//setGyroChannelControl(0x00000000);
	return 1;
 }

 // -------------------------------------------------------------------
int receivePacketButton(void){

//	XAxiDma_BdRing *RxRingPtr;
//	XAxiDma_Bd *BdPtr;
//	int ProcessedBdCount;
//	int FreeBdCount;
//	int Status;
	int i;

	//Status = RxSetup(&AxiDma); // ####

	resetGyroRxFIFO();

	for (i=0; i<NUM_RXFIFO_READS_REQUIRED;i++)
	{
		setGyroChannelControl(0x00000010);

		//======================================================
		// remove this later ---only added for calibration testing
		nops(100000);
		writeSPI_non_blocking(6,0x0e); // set calibration bit
		//======================================================

		nops(10000000); // this is the value for DIV 1

		//======================================================
		// remove this later ---only added for calibration testing
		writeSPI_non_blocking(6,0x02); // clear calibration bit
		//======================================================

		setGyroChannelControl(0x00000000);
		receiveDMApacket(&AxiDma,0);

		setGyroChannelControl(0x00000010);

		//======================================================
		// remove this later ---only added for calibration testing
		nops(100000);
		writeSPI_non_blocking(6,0x0e); // set calibration bit
		//======================================================

		nops(10000000); // this is the value for DIV 1

		//======================================================
		// remove this later ---only added for calibration testing
		writeSPI_non_blocking(6,0x02); // clear calibration bit
		//======================================================

		setGyroChannelControl(0x00000000);
		receiveDMApacket(&AxiDma,0);
	}
	return 1;
}
// -------------------------------------------------------------------
int initDMADevice(void){

	openDMADevice();

	Status = TxSetup(&AxiDma);
	if (Status != XST_SUCCESS) {
	   return XST_FAILURE;
	}
	else {
		 xil_printf("TxSetup completed. \r\n");
	}

	Status = RxSetup(&AxiDma);
	if (Status != XST_SUCCESS) {
	   return XST_FAILURE;
	}
	else {
		 xil_printf("RxSetup completed. \r\n");
	}

	return XST_SUCCESS;
}
// -------------------------------------------------------------------
int test_DMA_loopback( int num_packets, int debug_mode){
	int i;

    initDMADevice();

	for(i = 0; i < num_packets; i++){
	  /* Send a packet */

	  Status = sendDMApacket(&AxiDma, i);

	  if (Status != XST_SUCCESS) {
		  xil_printf(" Failed sending packet number: %d\r\n",i+1);
		return XST_FAILURE;
	  }


	  if(i == 0){
    setGyroChannelControl(0x00000011);
	  }

	  /* Check DMA transfer result */


			Status = CheckDmaResult(&AxiDma, debug_mode, 1);
	  if (Status != XST_SUCCESS) {
		xil_printf(" Failed reading packet number: %d\r\n",1);
		return XST_FAILURE;
	  }


	}


	xil_printf(" >>> Successfully ran AXI DMA SG Polling Example\r\n");
	xil_printf("--- Exiting DMA Loopback main() --- \r\n");

	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	return XST_SUCCESS;
}

// -------------------------------------------------------------------
void nops(unsigned int num) {
    int i;
    for(i = 0; i < num; i++) {
        asm("nop");
    }
}
// -------------------------------------------------------------------




//------------------------------------------------------------
int SetupUartPs(XScuGic *IntcInstPtr, XUartPs *UartInstPtr,
			u16 DeviceId, u16 UartIntrId)
{
	int Status;
	XUartPs_Config *Config;
	u32 IntrMask;


	/*
	 * Initialize the UART driver so that it's ready to use
	 * Look up the configuration in the config table, then initialize it.
	 */
	Config = XUartPs_LookupConfig(DeviceId);
	if (NULL == Config) {
		return XST_FAILURE;
	}

	Status = XUartPs_CfgInitialize(UartInstPtr, Config, Config->BaseAddress);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/* Check hardware build */
	Status = XUartPs_SelfTest(UartInstPtr);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Connect the UART to the interrupt subsystem such that interrupts
	 * can occur. This function is application specific.
	 */
	Status = SetupUartInterruptSystem(IntcInstPtr, UartInstPtr, UartIntrId);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Setup the handlers for the UART that will be called from the
	 * interrupt context when data has been sent and received, specify
	 * a pointer to the UART driver instance as the callback reference
	 * so the handlers are able to access the instance data
	 */
	XUartPs_SetHandler(UartInstPtr, (XUartPs_Handler)UartPsISR, UartInstPtr);

	/*
	 * Enable the interrupt of the UART so interrupts will occur, setup
	 * a local loopback so data that is sent will be received.
	 */
	IntrMask =
		XUARTPS_IXR_TOUT | XUARTPS_IXR_PARITY | XUARTPS_IXR_FRAMING |
		XUARTPS_IXR_OVER | XUARTPS_IXR_TXEMPTY | XUARTPS_IXR_RXFULL |
		XUARTPS_IXR_RXOVR;

	if (UartInstPtr->Platform == XPLAT_ZYNQ_ULTRA_MP) {
		IntrMask |= XUARTPS_IXR_RBRK;
	}

	XUartPs_SetInterruptMask(UartInstPtr, IntrMask);

	XUartPs_SetOperMode(UartInstPtr, XUARTPS_OPER_MODE_NORMAL);

	/*
	 * Set the receiver timeout. If it is not set, and the last few bytes
	 * of data do not trigger the over-water or full interrupt, the bytes
	 * will not be received. By default it is disabled.
	 *
	 * The setting of 8 will timeout after 8 x 4 = 32 character times.
	 * Increase the time out value if baud rate is high, decrease it if
	 * baud rate is low.
	 */
	XUartPs_SetRecvTimeout(UartInstPtr, 8);

	return XST_SUCCESS;
}
//------------------------------------------------------------


//------------------------------------------------------------
void UartPsISR(void *CallBackRef, u32 Event, unsigned int EventData)
{
//	xil_printf("IRQ handler!\n");

	/* All of the data has been sent */
	if (Event == XUARTPS_EVENT_SENT_DATA) {
//		xil_printf("1\n");
	}

	/* All of the data has been received */
	if (Event == XUARTPS_EVENT_RECV_DATA) {
//		xil_printf("2\n");
		state |= SERVICE_UART;
	}

	/*
	 * Data was received, but not the expected number of bytes, a
	 * timeout just indicates the data stopped for 8 character times
	 */
	if (Event == XUARTPS_EVENT_RECV_TOUT) {
//		xil_printf("3\n");
	}

	/*
	 * Data was received with an error, keep the data but determine
	 * what kind of errors occurred
	 */
	if (Event == XUARTPS_EVENT_RECV_ERROR) {
//		xil_printf("4\n");
	}

	/*
	 * Data was received with an parity or frame or break error, keep the data
	 * but determine what kind of errors occurred. Specific to Zynq Ultrascale+
	 * MP.
	 */
	if (Event == XUARTPS_EVENT_PARE_FRAME_BRKE) {
//		xil_printf("5\n");
	}

	/*
	 * Data was received with an overrun error, keep the data but determine
	 * what kind of errors occurred. Specific to Zynq Ultrascale+ MP.
	 */
	if (Event == XUARTPS_EVENT_RECV_ORERR) {
//		xil_printf("6\n");
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
static int SetupUartInterruptSystem(XScuGic *IntcInstancePtr,
				XUartPs *UartInstancePtr,
				u16 UartIntrId)
{
	int Status;

	XScuGic_Config *IntcConfig; /* Config for interrupt controller */

	/* Initialize the interrupt controller driver */
	IntcConfig = XScuGic_LookupConfig(INTC_DEVICE_ID);
	if (NULL == IntcConfig) {
		return XST_FAILURE;
	}

	Status = XScuGic_CfgInitialize(IntcInstancePtr, IntcConfig,
					IntcConfig->CpuBaseAddress);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Connect the interrupt controller interrupt handler to the
	 * hardware interrupt handling logic in the processor.
	 */
	Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT,
				(Xil_ExceptionHandler) XScuGic_InterruptHandler,
				IntcInstancePtr);

	/*
	 * Connect a device driver handler that will be called when an
	 * interrupt for the device occurs, the device driver handler
	 * performs the specific interrupt processing for the device
	 */
	Status = XScuGic_Connect(IntcInstancePtr, UartIntrId,
				  (Xil_ExceptionHandler) XUartPs_InterruptHandler,
				  (void *) UartInstancePtr);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/* Enable the interrupt for the device */
	XScuGic_Enable(IntcInstancePtr, UartIntrId);


	/* Enable interrupts */
	 Xil_ExceptionEnable();


	return XST_SUCCESS;
}
//------------------------------------------------------------


//------------------------------------------------------------
void read_uart_bytes(void)
{
	u8 numBytesReceived = 0;
	u16 numPoints;
	unsigned int commandByte,regAddr,regData;

	// loop through Uart Rx buffer and store received data
	while (XUartPs_IsReceiveData(UART_BASEADDR))
	{
		UartRxData[numBytesReceived++] = XUartPs_ReadReg(UART_BASEADDR,
					    					XUARTPS_FIFO_OFFSET);
	}

	//take first received byte as the command
	commandByte = (unsigned int)UartRxData[0];

	// check received byte for valid command
	switch (commandByte){

		case (CMD_READ_DATA):
			send_Tx_data_over_UART(get_num_data_points(UartRxData));
			break;

		case (CMD_READ_PACKETS):
			send_data_over_UART(get_num_data_points(UartRxData),(u8*)outputDataBuffer);
			//send_data_over_UART(get_num_data_points(UartRxData),(u8*)RX_BUFFER_BASE);
			break;

		case (CMD_LOAD_SAWTOOTH_UP_DATA):
			load_sawtooth_up_data();
			break;

		case (CMD_LOAD_SAWTOOTH_DOWN_DATA):
			load_sawtooth_down_data();
			break;

		case (CMD_READ_REGISTER):
			//verify address byte was received after command byte
			if (numBytesReceived<2)
			{
				return;
			}
			regAddr = (unsigned int)UartRxData[1];
			readSPI(&regData,regAddr);
			char *c = (char*)&regData;
			xil_printf("%c%c",*(c+1),*c); //send high byte first
			break;

		case (CMD_WRITE_REGISTER):
			//verify address byte, data bytes(2) received after command byte
			if (numBytesReceived<4)
			{
				return;
			}
			regAddr = (unsigned int)UartRxData[1];
			regData = (UartRxData[2]<<8) | UartRxData[3];
			writeSPI_non_blocking(regAddr,regData);
			break;

		case (CMD_PROG_OTP_CHIP_ADDR):
			//verify 3 bytes for chipID received after command byte
			if (numBytesReceived<4)
			{
				return;
			}
		send_byte_over_UART(ProgramOTP_chipID( (UartRxData[1]<<16) |
				(UartRxData[2]<<8) | UartRxData[3]));
			break;

		case (CMD_PROG_OTP_VBG_TRIM):
			//verify 1 byte for trim value received after command byte
			if (numBytesReceived<2)
			{
				return;
			}
		send_byte_over_UART(ProgramOTP_VbgTrim(UartRxData[1]));
			break;

		case (CMD_CAL_ADC0):
			run_ADC0_calibration();
			break;

		case (CMD_CAL_ADC1):
			run_ADC1_calibration();
			break;

		case (CMD_READ_ADC0_CAL):
			read_ADC0_cal_data();

			//8 16-bit cal values so send 16 bytes
			send_data_over_UART(16,(u8*)ADC_calData);
			break;

		case (CMD_READ_ADC1_CAL):
			read_ADC1_cal_data();

			//8 16-bit cal values so send 16 bytes
			send_data_over_UART(16,(u8*)ADC_calData);
			break;

		case (CMD_FILL_DAC_TXFIFO):
			sendPacketButton();
			break;

		case (CMD_START_ADC_ACQUISITIONS):
			receivePacketButton();
			send_byte_over_UART(RESPONSE_ADC_ACQUIRE_DONE);
			break;

		case (CMD_FPGA_ALL_OUTPUTS_LOW):
			disableSPI();
			disableGyroChannel();
			FPGA_outputs_state = 2;		// 1=on, 2=off
			break;

		case (CMD_FPGA_ALL_OUTPUTS_ENABLED):
			enableSPI();
			enableGyroChannel();
			FPGA_outputs_state = 1;		// 1=on, 2=off
			break;

		case (CMD_FPGA_GET_OUTPUTS_STATE):
			send_byte_over_UART(FPGA_outputs_state);
			break;

		case (CMD_RUN_TADC_CONVERSIONS):
			//verify 4 bytes received(command and 3 data bytes after)
			if (numBytesReceived<4)
			{
				return;
			}

			// first byte received is command, second byte is signal to measure,
			// third and fourth bytes are 16-bit number of measurements MSbyte(3rd) LSbyte(4th)
			numPoints = (u16)((UartRxData[2]<<8)+(UartRxData[3]));
			if (numPoints > MAX_TADC_RESULTS_SIZE)
			{
				numPoints = MAX_TADC_RESULTS_SIZE;
			}

			fill_testADC_results_array((u16)(UartRxData[1]<<8),numPoints);
			send_data_over_UART(numPoints*2,(u8*)testADCresults);
			break;

		case (CMD_ENABLE_HSI_SIGNALS):
			enableHSIGyroChannel();
			break;

		case (CMD_DISABLE_HSI_SIGNALS):
			disableHSIGyroChannel();
			break;

		case (CMD_GET_MCLK_DIV):
			send_byte_over_UART( (u8)(MCK_div_setting>>12) );
			break;

		case (CMD_SET_MCLK_DIV):
			//verify clock division setting byte was received after command byte
			if (numBytesReceived<2)
			{
				return;
			}

			// second byte received has the division setting
			changeMCLKdivision(UartRxData[1]);

			// use new variable in call to configuration function
			setGyroChannelConfiguration(MCK_div_setting | packet_size_setting |
					HSI_input_channel_setting | HSI_output_channel_setting);
			break;

		case (CMD_GET_SPICLK_DIV):
			send_byte_over_UART( (u8)(MCK_div_setting>>12) );
			break;

		case (CMD_SET_SPICLK_DIV):
			//verify clock division setting byte was received after command byte
			if (numBytesReceived<2)
			{
				return;
			}

			// second byte received has the division setting
			changeSPIclockDivision(UartRxData[1]);

			// use new variable in call to configuration function
			setSPIClockDivision(SPI_clock_division_setting);
			break;

		case (CMD_GET_PACKET_SIZE):
			send_byte_over_UART( (u8)(packet_size_setting>>12) );
			break;

		case (CMD_SET_PACKET_SIZE):
			//verify packet size setting byte was received after command byte
			if (numBytesReceived<2)
			{
				return;
			}

			// second byte received has the packet size setting
			packet_size_setting = (u32)UartRxData[1] << 12;

			// use new variable in call to configuration function
			setGyroChannelConfiguration(MCK_div_setting | packet_size_setting |
					HSI_input_channel_setting | HSI_output_channel_setting);
			break;

		case (CMD_GET_DAC_SELECTION):
			send_byte_over_UART( (u8)HSI_output_channel_setting );
			break;

		case (CMD_SET_DAC_SELECTION):
			//verify DAC selection setting byte was received after command byte
			if (numBytesReceived<2)
			{
				return;
			}

			// second byte received has the DAC selection
			HSI_output_channel_setting = UartRxData[1];

			// use new variable in call to configuration function
			setGyroChannelConfiguration(MCK_div_setting | packet_size_setting |
					HSI_input_channel_setting | HSI_output_channel_setting);
			break;

		case (CMD_GET_ADC_SELECTION):
			send_byte_over_UART( (u8)HSI_input_channel_setting );
			break;

		case (CMD_SET_ADC_SELECTION):
			//verify ADC selection setting byte was received after command byte
			if (numBytesReceived<2)
			{
				return;
			}

			// second byte received has the DAC selection
			changeHSI_ADC_selection(UartRxData[1]);

			// use new variable in call to configuration function
			setGyroChannelConfiguration(MCK_div_setting | packet_size_setting |
					HSI_input_channel_setting | HSI_output_channel_setting);
			break;

		case (CMD_GET_CONFIG_SETTINGS):
			sendConfigBytesOverUart();
			break;


	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void sendConfigBytesOverUart(void)
{
	send_byte_over_UART( (u8)HSI_output_channel_setting );		//DAC channel mux selection
	send_byte_over_UART( (u8)(HSI_input_channel_setting>>4) );	//ADC channel mux selection
	send_byte_over_UART( (u8)(MCK_div_setting>>16) );
	send_byte_over_UART( (u8)SPI_clock_division_setting );
	send_byte_over_UART( (u8)(packet_size_setting>>12) );

}
//------------------------------------------------------------


//------------------------------------------------------------
void changeHSI_ADC_selection(u8 selection)
{
	switch (selection){
		case (0):
		HSI_input_channel_setting = CONFIG_INPUT_CHANNEL_HSIA0;
			break;
		case (1):
		HSI_input_channel_setting = CONFIG_INPUT_CHANNEL_HSIA1;
			break;
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void changeSPIclockDivision(u8 divSetting)
{
	switch (divSetting){
		case (DIV_1):
		SPI_clock_division_setting = CONFIG_SPI_CLK_DIV_1;
			break;
		case (DIV_2):
		SPI_clock_division_setting = CONFIG_SPI_CLK_DIV_2;
			break;
		case (DIV_4):
		SPI_clock_division_setting = CONFIG_SPI_CLK_DIV_4;
			break;
		case (DIV_8):
		SPI_clock_division_setting = CONFIG_SPI_CLK_DIV_8;
			break;
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void changeMCLKdivision(u8 divSetting)
{
	switch (divSetting){
		case (DIV_1):
			MCK_div_setting = CONFIG_MCK_DIV_1;
			break;
		case (DIV_2):
			MCK_div_setting = CONFIG_MCK_DIV_2;
			break;
		case (DIV_4):
			MCK_div_setting = CONFIG_MCK_DIV_4;
			break;
		case (DIV_8):
			MCK_div_setting = CONFIG_MCK_DIV_8;
			break;
		case (DIV_16):
			MCK_div_setting = CONFIG_MCK_DIV_16;
			break;
		case (DIV_32):
			MCK_div_setting = CONFIG_MCK_DIV_32;
			break;
		case (DIV_64):
			MCK_div_setting = CONFIG_MCK_DIV_64;
			break;
		case (DIV_128):
			MCK_div_setting = CONFIG_MCK_DIV_128;
			break;
	}
}
//------------------------------------------------------------



//------------------------------------------------------------
void run_ADC0_calibration(void)
{
	unsigned int reg0,reg4,reg5,reg6,reg7,reg0_RO;
	unsigned int newReg4val = 0;
	unsigned int newReg6val = 0;
	u8	reg4changed = 0;
	u8  reg5changed = 0;
	u8  reg7changed = 0;
	u16 numDoneChecks = 0; 	// use this counter to see how many reads of the
							// calibration flag needed until done

	//read all necessary registers here
	readSPI(&reg4,4);
	readSPI(&reg5,5);
	readSPI(&reg6,6);
	readSPI(&reg7,7);

	//ensure ADC0_TEST_SEL is set to normal operation
	if (reg7 & 0xC000)
	{
		reg7changed = 1;
		writeSPI_non_blocking(7,0x00);
	}

	//ensure a TIIA_VGSW bit is set, in reg4[7:4]
	if (!(reg4 & 0x00F0))
	{
		reg4changed = 1;
		newReg4val = reg4 | 0xF0;
	}

	//ensure TIIA is enabled, reg4 bit0
	if (!(reg4 & 0x0001))
	{
		reg4changed = 1;
		newReg4val = newReg4val | 0x1;
	}

	//change reg 4 if needed
	if (reg4changed) writeSPI_non_blocking(4,newReg4val);

	//ensure VGA is enabled, reg5 bit0
	if (!(reg5 & 0x1))
	{
		reg5changed = 1;
		writeSPI_non_blocking(5,reg5|0x1);
	}

	//ensure ADC0 is enabled, reg6 bit1
	if (!(reg6 & 0x2))
	{
		newReg6val = reg6|0x2;
		writeSPI_non_blocking(6,newReg6val);
	}

	//if ADC0 cal bit is on turn it off, reg6 bit2
	if (reg6 & 0x4)
	{
		newReg6val &= 0xFFFB;
		writeSPI_non_blocking(6,newReg6val);
	}

	//set reg0 readback mode to read-only to see when cal is done
	readSPI(&reg0,0);
	writeSPI_non_blocking(0,reg0|0x200);

	//to run cal turn on reg6 bit2
	writeSPI_non_blocking(6,newReg6val|0x4);

	//store reg0 read-only data for initial while loop test
	readSPI(&reg0_RO,0);

	//wait until cal is done, reg0 readback mode bit0=0 during cal
	while (~reg0_RO & 0x1)
	{
		numDoneChecks++;
		readSPI(&reg0_RO,0);
	}

	//restore register 6 with calibration bit off
	writeSPI_non_blocking(6,reg6&0xFFFB);

	//restore registers 4,5,7
	if (reg4changed) writeSPI_non_blocking(4,reg4);
	if (reg5changed) writeSPI_non_blocking(5,reg5);
	if (reg7changed) writeSPI_non_blocking(7,reg7);

	//register 0 back into normal readback mode
	writeSPI_non_blocking(0,reg0&0xFDFF);
}
//------------------------------------------------------------


//------------------------------------------------------------
void run_ADC1_calibration(void)
{
	unsigned int reg0,reg8,reg9,reg10,reg11,reg0_RO;
	unsigned int newreg8val = 0;
	unsigned int newreg10val = 0;
	u16 numDoneChecks = 0; 	// use this counter to see how many reads of the
							// calibration flag needed until done
	u8	reg8changed = 0;
	u8  reg9changed = 0;
	u8  reg11changed = 0;

	//read all necessary registers here
	readSPI(&reg8,8);
	readSPI(&reg9,9);
	readSPI(&reg10,10);
	readSPI(&reg11,11);

	//ensure ADC1_TEST_SEL is set to normal operation
	if (reg11 & 0xC000)
	{
		reg11changed = 1;
		writeSPI_non_blocking(11,0x00);
	}

	//ensure a TIIA_VGSW bit is set, in reg8[7:4]
	if (!(reg8 & 0x00F0))
	{
		reg8changed = 1;
		newreg8val = reg8 | 0xF0;
	}

	//ensure TIIA is enabled, reg8 bit0
	if (!(reg8 & 0x0001))
	{
		reg8changed = 1;
		newreg8val = newreg8val | 0x1;
	}

	//change reg8 if needed
	if (reg8changed) writeSPI_non_blocking(8,newreg8val);

	//ensure VGA is enabled, reg9 bit0
	if (!(reg9 & 0x1))
	{
		reg9changed = 1;
		writeSPI_non_blocking(9,reg9|0x1);
	}

	//ensure ADC1 is enabled, reg10 bit1
	if (!(reg10 & 0x2))
	{
		newreg10val = reg10|0x2;
		writeSPI_non_blocking(10,newreg10val);
	}

	//if ADC1 cal bit is on turn it off, reg10 bit2
	if (reg10 & 0x4)
	{
		newreg10val &= 0xFFFB;
		writeSPI_non_blocking(10,newreg10val);
	}

	//to run cal turn on reg10 bit2
	writeSPI_non_blocking(10,newreg10val|0x4);

	//set reg0 readback mode to read-only to see when cal is done
	readSPI(&reg0,0);
	writeSPI_non_blocking(0,reg0|0x200);

	//store reg0 read-only data for initial while loop test
	readSPI(&reg0_RO,0);

	//wait until cal is done, reg0 readback mode bit1=0 during cal
	while (~reg0_RO & 0x2)
	{
		numDoneChecks++;
		readSPI(&reg0_RO,0);
	}

	//register 0 back into normal readback mode
	writeSPI_non_blocking(0,reg0&0xFBFF);

	//restore register 10 with calibration bit off
	writeSPI_non_blocking(10,reg10&0xFFFB);

	//restore registers 8,9,11
	if (reg8changed) writeSPI_non_blocking(8,reg8);
	if (reg9changed) writeSPI_non_blocking(9,reg9);
	if (reg11changed) writeSPI_non_blocking(11,reg11);
}
//------------------------------------------------------------


//------------------------------------------------------------
void read_ADC0_cal_data(void)
{
	unsigned int reg6,i;
	unsigned int firstCalRegisterAddress = 32;

	//store original register 6 setting
	readSPI(&reg6,6);

	//set register 6 readback mode to read-only
	writeSPI_non_blocking(6,reg6|0xFF00);

	for (i=0;i<8;i++)
	{
		readSPI((unsigned int*)&ADC_calData[i],firstCalRegisterAddress+i);
	}

	//set register 6 readback mode back to normal
	writeSPI_non_blocking(6,reg6&0x00FF);

}
//------------------------------------------------------------


//------------------------------------------------------------
void read_ADC1_cal_data(void)
{
	unsigned int reg10,i;
	unsigned int firstCalRegisterAddress = 40;

	//store original register 10 setting
	readSPI(&reg10,10);

	//set register 6 readback mode to read-only
	writeSPI_non_blocking(10,reg10|0xFF00);

	for (i=0;i < 8; i++)
	{
		readSPI((unsigned int*)&ADC_calData[i],firstCalRegisterAddress+i);
	}

	//set register 10 readback mode back to normal
	writeSPI_non_blocking(10,reg10&0x00FF);

}
//------------------------------------------------------------


//------------------------------------------------------------
void fill_testADC_results_array(u16 signalToMeasure, u16 numReadings)
{
	unsigned int reg0,reg1,i,TADCresult;
	u16 testADCinitialConditions,testADCstartConditions;
	u8 firstSetup = 1;

	//store original register 0,1 setting
	readSPI(&reg0,0);
	readSPI(&reg1,1);

	//set register 1 readback mode to read-only, this is
	//controlled by register 0 bit 10
	writeSPI_non_blocking(0,reg0|0x0400);

	if (numReadings > MAX_TADC_RESULTS_SIZE)
	{
		numReadings = MAX_TADC_RESULTS_SIZE;
	}

	//build initial register setting for desired test case
	testADCinitialConditions = TADC_ENABLE | signalToMeasure |
			TADC_RESET | TADC_START;

	// if temperature sensor is being measured need to enable it too
	if (signalToMeasure == TADC_MUX_TEMPERATURE_SENSOR)
	{
		testADCinitialConditions |= TADC_TEMP_SENSOR_ENABLE;
	}

	// if VEXT is being measured set VEXTSEL bit high too
	if (signalToMeasure == TADC_MUX_VEXT)
	{
		testADCinitialConditions |= TADC_VEXTSEL;
	}

	//to start conversion set the start bit low
	testADCstartConditions = testADCinitialConditions & ~TADC_START;

	// need to set initial conditions and led ADC settle before looping
	// through successive measurements
	writeSPI_non_blocking(1,testADCinitialConditions);

	SetTimerDuration(65535, 8);		// delay for 5msec after initial mux setting
	timerRunning = 1;				// set flag that is cleared in timer ISR
	XTtcPs_Start(&DelayTimer);		// start the timer
	while(timerRunning);			// wait for ISR to clear flag

	SetTimerDuration(10000, 1);		// change timer setting to 100usec
									// for use in loop below

	for (i=0; i < numReadings; i++)
	{
		// initial tadc setting for desired measurement
		writeSPI_non_blocking(1,testADCinitialConditions);

		// start test ADC conversion
		writeSPI_non_blocking(1,testADCstartConditions);

		// wait for conversion to complete
		timerRunning = 1;
		XTtcPs_Start(&DelayTimer);
		while(timerRunning);

		// store result in array
		readSPI((unsigned int*)&TADCresult,1);

		// 12-bit result is in LSBs of 16-bit register
		testADCresults[i] = TADCresult & 0xFFF;
	}

	//restore register 0 with RBKSEL1 turned off
	writeSPI_non_blocking(0,reg0&0xFBFF);
	writeSPI_non_blocking(1,reg1);

}
//------------------------------------------------------------


//------------------------------------------------------------
unsigned int get_num_data_points(u8 *RxData)
{
	unsigned int num_points = 0;

	// most significant byte in number sent first
	num_points += RxData[1];
	num_points = num_points << 8;

	// least significant byte in number sent next
	num_points += RxData[2];

	return num_points;

}
//------------------------------------------------------------



//------------------------------------------------------------
void load_sawtooth_up_data(void)
{
	int i,j;

	UartTxData[0] = 0; // initial array value

	// load the data array with sawtooth data
	for(i=1; i<TX_BUFFER_SIZE; i++)
	{
		j = UartTxData[i-1] + SAWTOOTH_STEP_VALUE;
		if (j>SAWTOOTH_MAX_VALUE)
		{
			UartTxData[i] = 0;
		}
		else{
			UartTxData[i] = j;
		}
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void load_sawtooth_down_data(void)
{
	int i,j;

	UartTxData[0] = SAWTOOTH_MAX_VALUE; // initial array value

	// load the data array with sawtooth data
	for(i=1; i<TX_BUFFER_SIZE; i++){
		j = UartTxData[i-1] - SAWTOOTH_STEP_VALUE;
		if (j < 0){
			UartTxData[i] = SAWTOOTH_MAX_VALUE;
		} else {
			UartTxData[i] = j;
		}
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void send_Tx_data_over_UART(unsigned int num_points_to_send)
{
	int i;
	// send the data array to the transmit buffer as space is available
	for (i = 0; i < num_points_to_send; i++) {
		/* Wait until there is space in TX FIFO */
		 while (XUartPs_IsTransmitFull(XPAR_XUARTPS_0_BASEADDR));

		/* Write the byte into the TX FIFO */
		XUartPs_WriteReg(XPAR_XUARTPS_0_BASEADDR, XUARTPS_FIFO_OFFSET,
				UartTxData[i]);
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void send_data_over_UART(unsigned int num_bytes_to_send, u8 *dataArray)
{
	int i;
	// send the data array to the transmit buffer as space is available
	for (i = 0; i < num_bytes_to_send; i++) {
		/* Wait until there is space in TX FIFO */
		 while (XUartPs_IsTransmitFull(XPAR_XUARTPS_0_BASEADDR));

		/* Write the byte into the TX FIFO */
		XUartPs_WriteReg(XPAR_XUARTPS_0_BASEADDR, XUARTPS_FIFO_OFFSET,
				dataArray[i]);
	}
}
//------------------------------------------------------------


//------------------------------------------------------------
void send_byte_over_UART(Xuint8 byteToSend)
{
	/* Wait until there is space in TX FIFO */
	 while (XUartPs_IsTransmitFull(XPAR_XUARTPS_0_BASEADDR));

	/* Write the byte into the TX FIFO */
	XUartPs_WriteReg(XPAR_XUARTPS_0_BASEADDR, XUARTPS_FIFO_OFFSET,
						byteToSend);
}
//------------------------------------------------------------



//------------------------------------------------------------
int InitializeDelayTimer(void)
{
	int Status;
	XTtcPs_Config *Config;

	/*
	 * Look up the configuration based on the device identifier
	 */
	Config = XTtcPs_LookupConfig(DELAY_TIMER_DEVICE_ID);
	if (NULL == Config) {
		return XST_FAILURE;
	}

	/*
	 * Initialize the device
	 */
	Status = XTtcPs_CfgInitialize(&DelayTimer, Config, Config->BaseAddress);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Set up appropriate options for Ticker: interval mode without
	 * waveform output.
	 */
	u16 TimerOptions = (XTTCPS_OPTION_INTERVAL_MODE |
						  XTTCPS_OPTION_WAVE_DISABLE);

	/*
	 * Set the options
	 */
	XTtcPs_SetOptions(&DelayTimer, TimerOptions);
	XTtcPs_SetInterval(&DelayTimer, 1000);
	XTtcPs_SetPrescaler(&DelayTimer, 2);

	/*
	 * Connect to the interrupt controller
	 */
	Status = XScuGic_Connect(&interrupt_controller, DELAY_TIMER_INTERRUPT_ID,
		(Xil_InterruptHandler)DelayTimerInterruptHandler, (void *)&DelayTimer);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Enable interrupts for the ttc in global interrupt controller
	 */
	XScuGic_Enable(&interrupt_controller, DELAY_TIMER_INTERRUPT_ID);

	/*
	 * Enable the interval timeout interrupt in this ttc instance
	 */
	XTtcPs_EnableInterrupts(&DelayTimer, XTTCPS_IXR_INTERVAL_MASK);

	return Status;
}
//------------------------------------------------------------



//------------------------------------------------------------
void SetTimerDuration(XInterval num10nsecCounts, u8 prescalar)
{
	/*
	 * Set the interval and prescaler
	 */
	XTtcPs_SetInterval(&DelayTimer, num10nsecCounts);

	if (prescalar == 1)
	{
		prescalar = XTTCPS_CLK_CNTRL_PS_DISABLE;
	}
	XTtcPs_SetPrescaler(&DelayTimer, prescalar);
}
//------------------------------------------------------------



//------------------------------------------------------------
void DelayTimerInterruptHandler(void *CallBackRef)
{
	u32 StatusEvent;

	/*
	 * Read the interrupt status, then write it back to clear the interrupt.
	 */
	StatusEvent = XTtcPs_GetInterruptStatus((XTtcPs *)CallBackRef);
	XTtcPs_ClearInterruptStatus((XTtcPs *)CallBackRef, StatusEvent);

	if (0 != (XTTCPS_IXR_INTERVAL_MASK & StatusEvent)) {

		timerRunning = FALSE;
	}
	else {
		/*
		 * The Interval event should be the only one enabled. If it is
		 * not it is an error
		 */
		TimerErrorCount++;
	}
	XTtcPs_Stop(&DelayTimer);
}
//------------------------------------------------------------



//------------------------------------------------------------
Xuint8 ProgramOTP_chipID(u32 id)
{
	u32 otp32register;

	//shift ID over to bits 31:8 of the 32 bit OTP register
	otp32register = id << 8;
	return ProgramOTP(otp32register);
}
//------------------------------------------------------------



//------------------------------------------------------------
Xuint8 ProgramOTP_VbgTrim(u8 trimVal)
{
	//mask bits 5-31 if set in trimVal
	trimVal &= 0x1F;

	return ProgramOTP((u32)trimVal);
}
//------------------------------------------------------------



//------------------------------------------------------------
Xuint8 ProgramOTP(u32 otp32ProgramValue)
{
	int i;
	Xuint8 readbackErrorCode = 0;
	u32 x = 1;
	u32 otp32TestValue;

	otp32TestValue = readOTP32bits() | otp32ProgramValue;

	// setup the timer for 25usec delay to use later
	SetTimerDuration(2500, 1);

	// loop through all 32 bits in otp register to clear out any 1s
	for(i=0;i<32;i++)
	{
		writeSPI_non_blocking_orig(2,0x0010);		//CLKM=1
		writeSPI_non_blocking_orig(2,0x0000);		//CLKM=0
		writeSPI_non_blocking_orig(2,0x0020);		//CLKS=1
		writeSPI_non_blocking_orig(2,0x0000);		//CLKS=0

	}

	// shift a 1 into bit position 0
	writeSPI_non_blocking_orig(2,0x8000);		//DIN=1,CLKM=0,CLKS=0
	writeSPI_non_blocking_orig(2,0x8010);		//DIN=1,CLKM=1,CLKS=0
	writeSPI_non_blocking_orig(2,0x8000);		//DIN=1,CLKM=0,CLKS=0
	writeSPI_non_blocking_orig(2,0x8020);		//DIN=1,CLKM=0,CLKS=1
	writeSPI_non_blocking_orig(2,0x8000);		//DIN=1,CLKM=0,CLKS=0
	writeSPI_non_blocking_orig(2,0x0000);		//DIN=0,CLKM=0,CLKS=0

	// check each bit position to see if it should be programmed
	// to a '1', then shift bit to next position
	for(i=0;i<32;i++)
	{
		// check if this bit should be programmed
		if (otp32ProgramValue & (x << i) )
		{
			writeSPI_non_blocking_orig(2,0x4000);	//SHORTEN=1,IZAPEN=0,WE=0
			writeSPI_non_blocking_orig(2,0x6000);	//SHORTEN=1,IZAPEN=1,WE=0
			// wait 1<t<10us, ensure spi transfer time takes care of this
			// if no delay is used
			writeSPI_non_blocking_orig(2,0x7000);	//SHORTEN=1,IZAPEN=1,WE=1
			writeSPI_non_blocking_orig(2,0x3000);	//SHORTEN=0,IZAPEN=1,WE=1

			//delay 25usec for zap time
			/*timerRunning = 1;
			XTtcPs_Start(&DelayTimer);
			while(timerRunning);*/
			// delay above was not needed because delay
			// between spi register write completions is ~25usec

			writeSPI_non_blocking_orig(2,0x7000);	//SHORTEN=1,IZAPEN=1,WE=1
			writeSPI_non_blocking_orig(2,0x6000);	//SHORTEN=1,IZAPEN=1,WE=0
			writeSPI_non_blocking_orig(2,0x4000);	//SHORTEN=1,IZAPEN=0,WE=0
			writeSPI_non_blocking_orig(2,0x0000);	//SHORTEN=0,IZAPEN=0,WE=0
		}

		//shift bit to next position in register
		writeSPI_non_blocking_orig(2,0x0010);		//DIN=0,CLKM=1,CLKS=0
		writeSPI_non_blocking_orig(2,0x0000);		//DIN=0,CLKM=0,CLKS=0
		writeSPI_non_blocking_orig(2,0x0020);		//DIN=0,CLKM=0,CLKS=1
		writeSPI_non_blocking_orig(2,0x0000);		//DIN=0,CLKM=0,CLKS=0
	}

	//enable read operations
	writeSPI_non_blocking_orig(2,0x0001);		//RSWEN=1
	// wait min 4.5usec
	writeSPI_non_blocking_orig(2,0x0003);		//BANK=1,RSWEN=1
	writeSPI_non_blocking_orig(2,0x0007);		//READ=1,BANK=1,RSWEN=1

	//test for correct value in NVM register
	if (otp32TestValue != readOTP32bits()) readbackErrorCode |= 0x01;

	//set fuse block in read mode (low current)
	writeSPI_non_blocking_orig(2,0x0047);		//BIASL=1,READ=1,BANK=1,RSWEN=1
	//test for correct value in NVM register
	if (otp32TestValue != readOTP32bits()) readbackErrorCode |= 0x02;

	//set fuse block in read mode (high current)
	writeSPI_non_blocking_orig(2,0x000F);		//BIASH=1,READ=1,BANK=1,RSWEN=1
	//test for correct value in NVM register
	if (otp32TestValue != readOTP32bits()) readbackErrorCode |= 0x04;

	//clear all bits in the OTP programming register
	writeSPI_non_blocking_orig(2,0x0000);

	return readbackErrorCode;
}
//------------------------------------------------------------


//------------------------------------------------------------
/*
 * Reads the 32-bit value from the OTP memory block
 */
u32 readOTP32bits(void)
{
	unsigned int reg3originalValue,regReadResult;
	u32 otp32bitResult;

	// read value of register 3 to restore later
	readSPI(&reg3originalValue,3);

	// set 2 RBKSEL bits in order to read OTP register values
	writeSPI_non_blocking_orig(3,(0x0300|reg3originalValue));

	// read lower 16 bits of 32 bit result
	readSPI(&regReadResult,2);
	otp32bitResult = regReadResult;

	// read upper 16 bits of 32 bit result
	readSPI(&regReadResult,3);
	otp32bitResult += (regReadResult << 16);

	// restore register 3 original value
	writeSPI_non_blocking_orig(3,reg3originalValue);

	return otp32bitResult;
}

// --------------------------------------------------------------------
void test_DMA_receive_packets(int num_packets){

	resetGyroRxFIFO();
	setGyroChannelControl(0x00000010);
	nops(4000000);
	receiveDMApacket(&AxiDma, 0);

	setGyroChannelControl(0x00000010);
	nops(4000000);
	receiveDMApacket(&AxiDma, 0);
	setGyroChannelControl(0x00000000);

	setGyroChannelControl(0x00000010);
	nops(4000000);
	receiveDMApacket(&AxiDma, 0);
	setGyroChannelControl(0x00000000);

}

// -------------------------------------------------------------------
int main() {
    init_platform();



//    unsigned int readVal, writeVal;

    xil_printf("\n\r=====================\n\r");
    xil_printf("== START version 28 ==\n\r");
    // set interrupt_0/1 of AXI PL interrupt generator to 0

    *(baseaddr_p+0) = 0x00000000;
    *(baseaddr_p+1) = 0x00000000;
    *(baseaddr_p+2) = 0x00000000;
    *(baseaddr_p+3) = 0x00000000;

    xil_printf("Checkpoint 1\n\r");

    // set interrupt_0/1 of AXI PL interrupt generator to 1
    *(baseaddr_p+0) = 0x00000001;
    *(baseaddr_p+1) = 0x00000002;

    xil_printf("Checkpoint 2\n\r");
    // read interrupt_0/1 of AXI PL interrupt generator
    xil_printf("slv_reg0: 0x%08x\n\r", *(baseaddr_p+0));
    xil_printf("slv_reg1: 0x%08x\n\r", *(baseaddr_p+1));
    xil_printf("slv_reg2: 0x%08x\n\r", *(baseaddr_p+2));
    xil_printf("slv_reg3: 0x%08x\n\r", *(baseaddr_p+3));


    // clear SPI registers
    initSPI();
//    enableSPI();


    setSPIClockDivision(SPI_clock_division_setting); // needs to be 1 , 2 or 3
    readSPIStatus();

    // set interrupt_0/1 of AXI PL interrupt generator to 0
    *(baseaddr_p+0) = 0x00000000;
    *(baseaddr_p+1) = 0x00000000;
    *(baseaddr_p+2) = 0x00000000;

   // xil_printf("Checkpoint 3\n\r");
    // read interrupt_0/1 of AXI PL interrupt generator

/*
    xil_printf("Checkpoint 4\n\r");
    // setup and enable interrupts for IRQ_F2P[1:0]
    int status = setup_interrupt_system();
    if (status != XST_SUCCESS) {
         return XST_FAILURE;
    }

    xil_printf("Checkpoint 5\n\r");
    nops(1000);
    // set interrupt_0 of AXI PL interrupt generator to 1 (isr0 will be called)
    *(baseaddr_p+0) = 0x00000001;

    xil_printf("Checkpoint 6\n\r");
    nops(1000);
    // set interrupt_1 of AXI PL interrupt generator to 1 (isr1 will be called)
    *(baseaddr_p+1) = 0x00000001;
    xil_printf("Reading slv_reg1: 0x%08x\n\r", *(baseaddr_p+1));

    // disable interrupts for IRQ_F2P[1:1]
    XScuGic_Disable(&intc, INTC_INTERRUPT_ID_1);

    xil_printf("Checkpoint 7\n\r");
    nops(1000);
    // set interrupt_0 of AXI PL interrupt generator to 1 (isr0 will be called)
    *(baseaddr_p+0) = 0x00000001;

    xil_printf("Checkpoint 8\n\r");
    nops(10000);
    // set interrupt_1 of AXI PL interrupt generator to 1non
    // (isr1 wont be called since interrupts for IRQ_F2P[1:1] are disabled)
    *(baseaddr_p+1) = 0x00000000;

    xil_printf("Checkpoint 9\n\r");
	nops(1000);
	// set interrupt_0 of AXI PL interrupt generator to 1 (isr0 will be called)
	*(baseaddr_p+2) = 0x00000001;
	nops(10000000);
	*(baseaddr_p+2) = 0x00000000;
    xil_printf("Before Busy-Wait Loop slv_reg3: 0x%08x\n\r", *(baseaddr_p+3));

    flag = 1;
    while(flag == 1){
    	nops(100);
    }
    xil_printf("After Busy-Wait Loop slv_reg3: 0x%08x\n\r", *(baseaddr_p+3));
*/
/*
    xil_printf("== SPI test ==\n\r");
    setControlSPI(0x00000007);		// clock division

    writeVal = 0x00808A51;
    xil_printf(" SPI writing : 0x%08x\n\r", writeVal);
    err = writeSPI_non_blocking(0x00000000, writeVal);		// write operation
    if(err == 0){
    	xil_printf(" Write Success \n\r");
    } else {
    	xil_printf(" Write Fail \n\r");
    }

    err = readSPI(&readVal, 0x00000000);
    xil_printf(" SPI reading : 0x%08x\n\r", readVal);
    xil_printf("After SPI reading 0 done: 0x%08x\n\r", *(baseaddr_spi+0));
    xil_printf("After SPI reading 0 done: 0x%08x\n\r", *(baseaddr_spi+0));

    */

    xil_printf("== GYRO Channel test ==\n\r");

    //readGyroTxFIFODebugData();
    //readGyroRxFIFODebugData();
    resetGyroTxFIFO();
    resetGyroRxFIFO();
    initGyroChannel();
//    enableGyroChannel();

    //configure ADC0, ADC1 here via spi

    // --- loopback mode, POL = 0, in and out channels = 00
    //setGyroChannelConfiguration(0x01000000);

    //=======================================================
    // setGyroChannelConfiguration() description:
    //
    // bit 18:16 is to divide clock by 1/2/4/8/16/32/64/128
    // with 128 (7 Hex) we get 50 MHz divided by 128 = 390 KHz.
    // bits 14:12 are to select the packet size.
    //  000 is 64 samples  (32 words)
    //  001 is 128 samples  (64 words)
    //  010 is 256 samples (128 words)
    //  011 is 512 samples (256 words)
    //  100 is 1024 samples  (512 words)
    //  101 is 2048 samples  (1024 words)
    //  110 is 4096 samples (2048 words)
    //  111 is 8192 samples (4096 words)
    //
    // bits 6:4 - control the in+channel:
    //   00 is HSI_A0
    //   01 is HSI_A1
    //   10 and 11 inactive.
    // bits 2:0  - control the out_channel:
    //   000 is HSI_DAP
    //   001 is HSI_DAM
    //   010 is HSI_DBP
    //   011 is HGSI_DBM
    //	 100 is HSI_DC
    //=======================================================
    setGyroChannelConfiguration(MCK_div_setting | packet_size_setting |
    		HSI_input_channel_setting | HSI_output_channel_setting);
    //setGyroChannelConfiguration(0x00017000);

    setGyroChannelControl(0x00000000);

    xil_printf(" - after initialization ==\n\r");

    readGyroChannelStatus();
    readGyroChannelDebugData();
    readGyroTxFIFODebugData();
    readGyroRxFIFODebugData();

    xil_printf("== Starting FIFO / DMA test ++\n\r");

    initDMADevice();

    //setGyroChannelControl(0x00000011); // moved inside loopback
    //test_DMA_receive_packets(1);
    // --- stopping both channels
	setGyroChannelControl(0x00000000);

	//readGyroChannelStatus();
	//readGyroChannelDebugData();


	//readGyroTxFIFODebugData();
	//readGyroRxFIFODebugData();

    xil_printf("== After Rx ++\n\r");

    xil_printf("== STOP ==\n\r");
    xil_printf("=====================\n\n\r");

/*


xil_printf("== START 2  ==\n\r");
    acquireSamples(MAX_PKT_LEN);
xil_printf("== STOP 2  ==\n\r");

*/


    //#################################################################
    //#################################################################
    // code below here is merged from zedboard project used to develop
    // UART interrupts for received data
    //#################################################################
    //#################################################################
    int looping = 1;

	Status = SetupUartPs(&interrupt_controller, &UartPs,
					UARTPS_DEVICE_ID, UART_INT_IRQ_ID);
	if (Status != XST_SUCCESS) {
		xil_printf("Failed to set up UartPs\r\n");
		return XST_FAILURE;
	}

	xil_printf("  waiting for received UART data...\n");

	InitializeDelayTimer();

	while(looping){// loop here and let interrupts drive further actions


		//-------------------------------------------------------------------
		// uart received data so retrieve command
		if (state & SERVICE_UART){

			read_uart_bytes();
			state &= ~SERVICE_UART;
		}
		//-------------------------------------------------------------------


	}
	// end of code for UART interrupts
	//#################################################################
	//#################################################################



    cleanup_platform();
    return 0;
}
